<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>xiaonan&#39;s Blog</title>
        <link>http://fengqigang.cn/</link>
        <description>xiaonan&#39;s Blog</description>
        <generator>Hugo -- gohugo.io</generator><language>en</language><managingEditor>gaungsizhongbin@gmail.com (xiaonan)</managingEditor>
            <webMaster>gaungsizhongbin@gmail.com (xiaonan)</webMaster><lastBuildDate>Sat, 16 Jan 2021 22:20:28 &#43;0800</lastBuildDate>
            <atom:link href="http://fengqigang.cn/index.xml" rel="self" type="application/rss+xml" />
        <item>
    <title>同步与异步</title>
    <link>http://fengqigang.cn/posts/%E5%90%8C%E6%AD%A5%E4%B8%8E%E5%BC%82%E6%AD%A5/</link>
    <pubDate>Sat, 16 Jan 2021 22:20:28 &#43;0800</pubDate>
    <author>Author</author>
    <guid>http://fengqigang.cn/posts/%E5%90%8C%E6%AD%A5%E4%B8%8E%E5%BC%82%E6%AD%A5/</guid>
    <description><![CDATA[asyncio1 1 2 3 4 5 6 7 8 9 10 11 12  import time def hello(): time.sleep(1) def run(): for i in range(5) hello() print(&#39;Hello World:%s&#39; % time.time()) if __name__ == &#39;__main__&#39;: run()   Note  1. time.time1 Return the time in seconds since the epoch as a floating point number. The epoch is the point where the time starts, and is platform dependent. For Unix, the epoch is January 1, 1970, 00:00:00 (UTC)]]></description>
</item><item>
    <title>删除手机内置app</title>
    <link>http://fengqigang.cn/posts/%E5%88%A0%E9%99%A4%E6%89%8B%E6%9C%BA%E5%86%85%E7%BD%AEapp/</link>
    <pubDate>Fri, 15 Jan 2021 20:57:29 &#43;0800</pubDate>
    <author>Author</author>
    <guid>http://fengqigang.cn/posts/%E5%88%A0%E9%99%A4%E6%89%8B%E6%9C%BA%E5%86%85%E7%BD%AEapp/</guid>
    <description><![CDATA[下载adb  sudo pacman -S adb
查看当前连接的设备  adb devices
授权后，由unauthorized变成如图
查看当前所有软件  adb shell pm list packages
以删除美团为例子    搜索软件
adb shell pm list packages | grep meituan
   删除软件    进入交互模式
adb shell
   卸载软件
pm uninstall -k --user 0 com.sankuai.meituan
  Tip  -k: keep the data and cache directories
--user 0: Where 0 is ID of main user in Android system.]]></description>
</item><item>
    <title>顺序表代码实现</title>
    <link>http://fengqigang.cn/posts/%E9%A1%BA%E5%BA%8F%E8%A1%A8%E4%BB%A3%E7%A0%81%E5%AE%9E%E7%8E%B0/</link>
    <pubDate>Thu, 14 Jan 2021 22:48:26 &#43;0800</pubDate>
    <author>Author</author>
    <guid>http://fengqigang.cn/posts/%E9%A1%BA%E5%BA%8F%E8%A1%A8%E4%BB%A3%E7%A0%81%E5%AE%9E%E7%8E%B0/</guid>
    <description><![CDATA[顺序表代码实现  #define 与 typedef 的区别: 1   #define OK 1
当使用OK的时候会替换成1
#define 归预处理器管
  typedef int Status 定义int 为Status类型
typedef 归编译器管
     命名规范：
  SqList 这样的两个单词的合并，首字母要大写, 如ElemType, GetElem, ListDelete
  使用#define后全要大写, 如#define TRUE 1
    . 与 -&gt; 使用
  当传递的是数组本身的时候用.
  当传递的是指针的时候用-&gt;
    定义SqList思路
  ElemType 类型的 data[MAXSIZE]数组
  必须确定当前的线性表的长度 int length]]></description>
</item><item>
    <title>树莓派实现旁路由功能</title>
    <link>http://fengqigang.cn/posts/%E6%A0%91%E8%8E%93%E6%B4%BE%E5%AE%9E%E7%8E%B0%E6%97%81%E8%B7%AF%E7%94%B1%E5%8A%9F%E8%83%BD/</link>
    <pubDate>Thu, 14 Jan 2021 21:20:01 &#43;0800</pubDate>
    <author>Author</author>
    <guid>http://fengqigang.cn/posts/%E6%A0%91%E8%8E%93%E6%B4%BE%E5%AE%9E%E7%8E%B0%E6%97%81%E8%B7%AF%E7%94%B1%E5%8A%9F%E8%83%BD/</guid>
    <description><![CDATA[什么是WAN口和LAN口?1   WAN端口用于连接至Internet
  LAN端口用于连接局域网设备
  图1不能访问的原因在于路由器2认为WAN口连接的是另外一个网络，而设备2访问设备1的IP地址是在同一个网络中，所以不会向WAN口发送网络包，因此不通。
什么是网关？ 网关(Gateway)就是一个网络连接到另一个网络的&quot;关口&quot;
什么是默认网关？ 一个房间可又有多扇门一样，一台主机可又有多个网关。默认网关的意思是一台主机如果找不到可用的网关，就把数据包给默认指定的网关，由这个网关来处理数据包。现在主机使用的网关，一般指的是默认网关。
网关与路由器有什么关系？2   “网关”是一个概念，&ldquo;路由器&quot;是一个产品。
  网关: 帮助两个不能直接互通的网络，进行数据转发的。
  路由器，手机，防火墙均可实现网关功能:
  路由器将家庭局域网和互联网相连
  手机开了热点后，笔记本接进来，手机作为网关把笔记本和互联网相连
  防火墙可能做网关，局域网连至防火墙，防火墙把局域网和互联网相连
    旁路由如何实现？ 网络数据在其中会怎样流动？3 国内网站:
 局域网设备发出数据 -&gt; 到达主路由LAN1口 -&gt; 到达主路由LAN2口 -&gt; 到达旁路由LAN口 -&gt; 旁路由分析数据走位 -&gt; 到达旁路由LAN口 -&gt; 到达主路由LAN2口 -&gt; 到达主路由WAN口 -&gt; 到达互连网
  互联网服务器返回数据 -&gt; 到达主路由WAN口 -&gt; 到达主路由LAN1口 -&gt; 到达局域网设备
 国外网站:]]></description>
</item><item>
    <title>Corn使用</title>
    <link>http://fengqigang.cn/posts/corn%E4%BD%BF%E7%94%A8/</link>
    <pubDate>Tue, 12 Jan 2021 20:34:08 &#43;0800</pubDate>
    <author>Author</author>
    <guid>http://fengqigang.cn/posts/corn%E4%BD%BF%E7%94%A8/</guid>
    <description><![CDATA[Install cron1 sudo pacman -S cronie
Quick running config setting default Editor export EDITOR=/usr/bin/nvim
systemctl systemctl enable cronie.service
systemctl start cronie.service
create cron job2   crontab -e
    Crontab format1
     Symbol Description     * Wildcard, specifies every possible time interval   , List multiple values separated by a comma.   - Specify a range between two numbers, separated by a hyphen   / Specify a periodicity/frequency using a slash     example]]></description>
</item><item>
    <title>重复包含问题解决</title>
    <link>http://fengqigang.cn/posts/%E9%87%8D%E5%A4%8D%E5%8C%85%E5%90%AB%E9%97%AE%E9%A2%98%E8%A7%A3%E5%86%B3/</link>
    <pubDate>Tue, 12 Jan 2021 20:32:54 &#43;0800</pubDate>
    <author>Author</author>
    <guid>http://fengqigang.cn/posts/%E9%87%8D%E5%A4%8D%E5%8C%85%E5%90%AB%E9%97%AE%E9%A2%98%E8%A7%A3%E5%86%B3/</guid>
    <description><![CDATA[重复包含问题的解决 1. 在main.cpp中只需要包含xxx.h即可，不需要包含xxx.cpp   原因分析：
PS: 命令中没有提到&quot;speak.h&quot;文件(原因是:在&quot;speak.cpp&quot;中已经包含了&quot;speak.h&quot;)
  2. 在xxx.h中，需要写上, 而xxx.cpp不需要写 1 2 3 4  #ifndef xxxxx #define xxxxx (...) #endif     原因分析：
C++是采用独立编译，就是每个cpp单独编译成对应的.o文件，最后链接器再将多个.o文件链接成可执行程序。(防止同一个.o文件中包含多个相同的.h内容)
  3. 使用xxx.h与xxx.cpp这种方式的时候，声明放在xxx.h中，定义放在xxx.cpp中   原因分析：
C++是采用独立编译，就是每个cpp单独编译成对应的.o文件，最后链接器再将多个.o文件链接成可执行程序。(在将多个.o文件链接成可执行程序的时候，有可能会在不同的.o文件中含有相同的定义)
  参考文章 注意头文件规则，避免链接错误：重复定义(multiple defination) 编译链接 C++
Compiling Cpp]]></description>
</item><item>
    <title>树莓派安装pi_Dashboard</title>
    <link>http://fengqigang.cn/posts/%E6%A0%91%E8%8E%93%E6%B4%BE%E5%AE%89%E8%A3%85pi_dashboard/</link>
    <pubDate>Mon, 11 Jan 2021 22:53:10 &#43;0800</pubDate>
    <author>Author</author>
    <guid>http://fengqigang.cn/posts/%E6%A0%91%E8%8E%93%E6%B4%BE%E5%AE%89%E8%A3%85pi_dashboard/</guid>
    <description><![CDATA[安装Nginx和PHP 1 2 3 4  sudo apt-get update sudo apt-get install nginx php7.3-fpm php7.3-cli php7.3-curl php-7.3-gd php7.3-cgi sudo service nginx start sudo service php7.3-fpm restart   使Nginx能处理PHP sudo nano /etc/nginx/sites-available/default
1 2 3 4 5  location / { # First attempt to serve request as file, then # as directory, then fall back to displaying a 404. try_files $uri $uri/ =404; }   修改为
1 2 3 4 5 6 7 8 9 10  location / { index index.]]></description>
</item><item>
    <title>树莓派实现内网穿透</title>
    <link>http://fengqigang.cn/posts/%E6%A0%91%E8%8E%93%E6%B4%BE%E5%AE%9E%E7%8E%B0%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F/</link>
    <pubDate>Sun, 10 Jan 2021 21:58:38 &#43;0800</pubDate>
    <author>Author</author>
    <guid>http://fengqigang.cn/posts/%E6%A0%91%E8%8E%93%E6%B4%BE%E5%AE%9E%E7%8E%B0%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F/</guid>
    <description><![CDATA[内网穿通SSH  修改服务器端的frps.ini  1 2  [common] bind_port = 7000    服务器端开启frp ./frps -c ./frps.ini
  客户端修改frpc.ini
  1 2 3 4 5 6 7 8 9  [common] server_addr = x.x.x.x server_port = 7000 [ssh] type = tcp local_ip = 127.x.x.x local_port = 22 remote_port = 6000    开启客户端的frpc ./frpc -c ./frpc.ini
  通过ssh连接 ssh user@x.x.x.x -p 6000
  参考 github]]></description>
</item><item>
    <title>树莓派踩坑记</title>
    <link>http://fengqigang.cn/posts/%E6%A0%91%E8%8E%93%E6%B4%BE%E8%B8%A9%E5%9D%91%E8%AE%B0/</link>
    <pubDate>Sat, 09 Jan 2021 20:47:57 &#43;0800</pubDate>
    <author>Author</author>
    <guid>http://fengqigang.cn/posts/%E6%A0%91%E8%8E%93%E6%B4%BE%E8%B8%A9%E5%9D%91%E8%AE%B0/</guid>
    <description><![CDATA[今天总有拿到树莓派4B+, 想着搭建一个下载机器，供家里人使用。
各个接口功能 第一次入手，刚开始连电源键都没有找到, 官网提供了说明.
安装Raspberry Pi OS 下载系统 系统下载地址Raspberry Pi OS
烧录镜像  sudo fdisk -l  先查看SD卡的名称
sudo dd bs=4M if=系统路径 of=/dev/SD名称 status=progress oflag=sync
Tip    使用dd时，写SD卡的名称，不要写SD卡分区的名称   使用dd时，报错 d: opening /dev/sdc: Read-only file system   dd参数
    bs=BYTES read and write up to BYTES bytes at a time (default:512); overrides ibs and obs
  status=LEVEL The LEVEL of information to print to sederr; none suppresses everything but error messages, noxfer suppresses the final transfer statistics, progress shows periodic transfer statistics.]]></description>
</item><item>
    <title>ShellSort</title>
    <link>http://fengqigang.cn/posts/shellsort/</link>
    <pubDate>Thu, 07 Jan 2021 09:34:11 &#43;0800</pubDate>
    <author>Author</author>
    <guid>http://fengqigang.cn/posts/shellsort/</guid>
    <description><![CDATA[<h2 id="shellsort">ShellSort</h2>
<p>Shell 排序动图</p>
<p></p>]]></description>
</item></channel>
</rss>
