<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>xiaonan&#39;s Blog</title>
        <link>http://fengqigang.cn/</link>
        <description>xiaonan&#39;s Blog</description>
        <generator>Hugo -- gohugo.io</generator><language>zh-cn</language><managingEditor>gaungsizhongbin@gmail.com (fengxiaonan)</managingEditor>
            <webMaster>gaungsizhongbin@gmail.com (fengxiaonan)</webMaster><lastBuildDate>Sat, 25 Sep 2021 23:00:02 &#43;0800</lastBuildDate>
            <atom:link href="http://fengqigang.cn/index.xml" rel="self" type="application/rss+xml" />
        <item>
    <title>10 Mybatis执行过程总结</title>
    <link>http://fengqigang.cn/posts/10-mybatis%E6%89%A7%E8%A1%8C%E8%BF%87%E7%A8%8B%E6%80%BB%E7%BB%93/</link>
    <pubDate>Sat, 25 Sep 2021 23:00:02 &#43;0800</pubDate>
    <author>Author</author>
    <guid>http://fengqigang.cn/posts/10-mybatis%E6%89%A7%E8%A1%8C%E8%BF%87%E7%A8%8B%E6%80%BB%E7%BB%93/</guid>
    <description><![CDATA[]]></description>
</item><item>
    <title>09 二级缓存的存取流程</title>
    <link>http://fengqigang.cn/posts/09-%E4%BA%8C%E7%BA%A7%E7%BC%93%E5%AD%98%E7%9A%84%E5%AD%98%E5%8F%96%E6%B5%81%E7%A8%8B/</link>
    <pubDate>Fri, 24 Sep 2021 23:28:34 &#43;0800</pubDate>
    <author>Author</author>
    <guid>http://fengqigang.cn/posts/09-%E4%BA%8C%E7%BA%A7%E7%BC%93%E5%AD%98%E7%9A%84%E5%AD%98%E5%8F%96%E6%B5%81%E7%A8%8B/</guid>
    <description><![CDATA[update(更新), query(查找), commit(提交)会执行的流程 ]]></description>
</item><item>
    <title>08 二级缓存源码分析</title>
    <link>http://fengqigang.cn/posts/08-%E4%BA%8C%E7%BA%A7%E7%BC%93%E5%AD%98%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90/</link>
    <pubDate>Thu, 23 Sep 2021 20:46:19 &#43;0800</pubDate>
    <author>Author</author>
    <guid>http://fengqigang.cn/posts/08-%E4%BA%8C%E7%BA%A7%E7%BC%93%E5%AD%98%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90/</guid>
    <description><![CDATA[为什么要提交后才能命中缓存? 缓存是跨线程的
不提交的话，有可能会产生脏读
二级缓存的结构 ]]></description>
</item><item>
    <title>07-二级缓存使用的命中条件</title>
    <link>http://fengqigang.cn/posts/07-%E4%BA%8C%E7%BA%A7%E7%BC%93%E5%AD%98%E4%BD%BF%E7%94%A8%E7%9A%84%E5%91%BD%E4%B8%AD%E6%9D%A1%E4%BB%B6/</link>
    <pubDate>Wed, 22 Sep 2021 22:08:42 &#43;0800</pubDate>
    <author>Author</author>
    <guid>http://fengqigang.cn/posts/07-%E4%BA%8C%E7%BA%A7%E7%BC%93%E5%AD%98%E4%BD%BF%E7%94%A8%E7%9A%84%E5%91%BD%E4%B8%AD%E6%9D%A1%E4%BB%B6/</guid>
    <description><![CDATA[缓存必须提交 会话未提交时 1 2 3 4 5 6 7 8 9 10 11 12 13  @Test public void test01(){ SqlSession sqlSession1 = factory.openSession(); StudentMapper mapper = sqlSession1.getMapper(StudentMapper.class); List&lt;Student&gt; students = mapper.selectById(2); System.out.println(students); SqlSession sqlSession2 = factory.openSession(); StudentMapper mapper1 = sqlSession2.getMapper(StudentMapper.class); List&lt;Student&gt; students1 = mapper1.selectById(2); System.out.println(students1); }   会话提交时 1 2 3 4 5 6 7 8 9 10 11  @Test public void test02() { SqlSession sqlSession1 = factory.]]></description>
</item><item>
    <title>05 二级缓存的定义与需求分析</title>
    <link>http://fengqigang.cn/posts/05-%E4%BA%8C%E7%BA%A7%E7%BC%93%E5%AD%98%E7%9A%84%E5%AE%9A%E4%B9%89%E4%B8%8E%E9%9C%80%E6%B1%82%E5%88%86%E6%9E%90/</link>
    <pubDate>Tue, 21 Sep 2021 19:00:21 &#43;0800</pubDate>
    <author>Author</author>
    <guid>http://fengqigang.cn/posts/05-%E4%BA%8C%E7%BA%A7%E7%BC%93%E5%AD%98%E7%9A%84%E5%AE%9A%E4%B9%89%E4%B8%8E%E9%9C%80%E6%B1%82%E5%88%86%E6%9E%90/</guid>
    <description><![CDATA[二级缓存的定义 二级缓存也称作是应用级缓存， 与一级缓存不同的是它的作用范围是整个应用，而且可以跨线程使用。 所以二级缓存有更高的命中率，适合缓存一些修改较少的数据。
二级缓存的扩展性需求 存储   内存
  硬盘
  第三方集成
  溢出淘汰   FIFO 先进先出
  LRU 最近最少使用
  过期清理 线程安全 命中率统计 序列化 ]]></description>
</item><item>
    <title>04 一级缓存失效的情况</title>
    <link>http://fengqigang.cn/posts/04-%E4%B8%80%E7%BA%A7%E7%BC%93%E5%AD%98%E5%A4%B1%E6%95%88%E7%9A%84%E6%83%85%E5%86%B5/</link>
    <pubDate>Mon, 20 Sep 2021 21:25:30 &#43;0800</pubDate>
    <author>Author</author>
    <guid>http://fengqigang.cn/posts/04-%E4%B8%80%E7%BA%A7%E7%BC%93%E5%AD%98%E5%A4%B1%E6%95%88%E7%9A%84%E6%83%85%E5%86%B5/</guid>
    <description><![CDATA[一级缓存总结   与会话相关
  参数条件相关
  提交和修改都会清空
  ]]></description>
</item><item>
    <title>03 Mybatis的命中场景</title>
    <link>http://fengqigang.cn/posts/03-mybatis%E7%9A%84%E5%91%BD%E4%B8%AD%E5%9C%BA%E6%99%AF/</link>
    <pubDate>Sat, 18 Sep 2021 23:17:19 &#43;0800</pubDate>
    <author>Author</author>
    <guid>http://fengqigang.cn/posts/03-mybatis%E7%9A%84%E5%91%BD%E4%B8%AD%E5%9C%BA%E6%99%AF/</guid>
    <description><![CDATA[一级缓存的特点   默认打开
  底层是key-value形式
  命中一级缓存测试 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21  public class FirstCacheTest { private SqlSessionFactory factory; private SqlSession sqlSession; @Before public void init() { // 获取构建器  SqlSessionFactoryBuilder factoryBuilder = new SqlSessionFactoryBuilder(); // 解析XML 并构建会话工厂  factory = factoryBuilder.build(ExecutorTest.class.getResourceAsStream(&#34;/mybatis-config.xml&#34;)); sqlSession = factory.openSession(); } @Test public void test1() { StudentMapper mapper = sqlSession.]]></description>
</item><item>
    <title>02 Mybatis执行器</title>
    <link>http://fengqigang.cn/posts/02-mybatis%E6%89%A7%E8%A1%8C%E5%99%A8/</link>
    <pubDate>Mon, 13 Sep 2021 22:39:42 &#43;0800</pubDate>
    <author>Author</author>
    <guid>http://fengqigang.cn/posts/02-mybatis%E6%89%A7%E8%A1%8C%E5%99%A8/</guid>
    <description><![CDATA[mybatis的四大模块   动态代理 MapperProxy
  SQL 会话 SqlSession
  执行器 Executor
  JDBC StatementHandler
  Mybatis的执行过程 门面模式:
提供一个统一的门面接口API, 使得系统更容易使用
执行器 1. 简单执行器(SimpleExecutor) 无论SQL是否一样，每次都会进行预编译
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48  package cn.]]></description>
</item><item>
    <title>01 Mybaits源码环境搭建</title>
    <link>http://fengqigang.cn/posts/01-mybaits%E6%BA%90%E7%A0%81%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/</link>
    <pubDate>Sun, 12 Sep 2021 23:11:24 &#43;0800</pubDate>
    <author>Author</author>
    <guid>http://fengqigang.cn/posts/01-mybaits%E6%BA%90%E7%A0%81%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/</guid>
    <description><![CDATA[克隆mybatis仓库 mybatis: https://github.com/mybatis/mybatis-3
parent: https://github.com/mybatis/parent
编译   先编译parent
  后编译mybatis
  创建一个maven项目  删掉其src, 创建一个springboot module  测试springboot项目是否可以启动  添加之前的mybatis项目 添加mybatis为新项目的依赖 测试mybatis是否搭建成功  bean  1 2 3 4 5 6 7 8  import lombok.Data; @Data public class Student { private int id; private String name; private int age; }   StudentMapper  1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38  import cn.]]></description>
</item><item>
    <title>03 Springboot启动正常,访问接口出现404错误</title>
    <link>http://fengqigang.cn/posts/03-springboot%E5%90%AF%E5%8A%A8%E6%AD%A3%E5%B8%B8%E8%AE%BF%E9%97%AE%E6%8E%A5%E5%8F%A3%E5%87%BA%E7%8E%B0404%E9%94%99%E8%AF%AF/</link>
    <pubDate>Sat, 11 Sep 2021 23:48:34 &#43;0800</pubDate>
    <author>Author</author>
    <guid>http://fengqigang.cn/posts/03-springboot%E5%90%AF%E5%8A%A8%E6%AD%A3%E5%B8%B8%E8%AE%BF%E9%97%AE%E6%8E%A5%E5%8F%A3%E5%87%BA%E7%8E%B0404%E9%94%99%E8%AF%AF/</guid>
    <description><![CDATA[错误事例 产生的原因  controller 控制类不在启动类所在的目录下或子目录中  解决的方案  将启动类与controller放在同一层，或将contrller的子目录下  在启动类上加上@ComponentScan(basePackages = {&quot;cn.fengqigang.*&quot;}) 注解  也可以直接写]]></description>
</item></channel>
</rss>
