<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>xiaonan&#39;s Blog</title>
        <link>http://fengqigang.cn/</link>
        <description>xiaonan&#39;s Blog</description>
        <generator>Hugo -- gohugo.io</generator><language>en</language><managingEditor>gaungsizhongbin@gmail.com (xiaonan)</managingEditor>
            <webMaster>gaungsizhongbin@gmail.com (xiaonan)</webMaster><lastBuildDate>Tue, 06 Jul 2021 12:55:20 &#43;0800</lastBuildDate>
            <atom:link href="http://fengqigang.cn/index.xml" rel="self" type="application/rss+xml" />
        <item>
    <title>Db04事务</title>
    <link>http://fengqigang.cn/posts/db04%E4%BA%8B%E5%8A%A1/</link>
    <pubDate>Tue, 06 Jul 2021 12:55:20 &#43;0800</pubDate>
    <author>Author</author>
    <guid>http://fengqigang.cn/posts/db04%E4%BA%8B%E5%8A%A1/</guid>
    <description><![CDATA[什么是事务? 指逻辑上的一组操作单元， 组成这个逻辑操作的各个单元， 要么都成功，要么都不成功
事务控制有哪些api?  connection.rollback();  回滚事务
connection.commit();  提交事务
connection.setAutoCommit(true);  开启事务
事务的特性是什么? ACID
 原子性  一个事务，事务中的各个操作单元，要么就都成功，要么都不成功
一致性  事务必须使数据库从一个一致性变成另一个一致性状态
隔离性  事务与事务之间是互相隔离的，互不干扰的，互不影响的
持久性  事务引起的数据库的改变应该是永久化的，而不是短暂的
事务的隔离级别有哪些?   read uncommitted 读未提交
  read Commited 读已提交
  repeatable read 可重复读
  Serializable 串行化
  什么是 read uncommitted 读未提交?   出现脏读
  出现不可重复读
  出现虚幻读
  什么是 read committed 读已提交?]]></description>
</item><item>
    <title>DB 03索引</title>
    <link>http://fengqigang.cn/posts/db-03%E7%B4%A2%E5%BC%95/</link>
    <pubDate>Sun, 04 Jul 2021 16:43:25 &#43;0800</pubDate>
    <author>Author</author>
    <guid>http://fengqigang.cn/posts/db-03%E7%B4%A2%E5%BC%95/</guid>
    <description><![CDATA[什么是索引? 索引是可以帮助MySQL高效获取数据的数据结构。
即索引是数据结构。
数据库在执行查询的时候，如果没有索引存在的情况下，会采用全表扫描的方式进行查找。
如果存在索引，则会先去索引列表中定位到特定的行或者直接定位到数据，从而可以极大地减少查询的行数， 增加查询速度
在MySQL中，常见的数据库引擎是什么? MyISAM
InnoDB(默认)
InnoDB 与 MyISAM 有什么区别?  事务:  InnoDB 支持事务, MyISAM 不支持事务
外键:  InnoDB 支持外键, MyISAM 不支持外键
是否是聚集索引:  InnoDB 是聚集索引(数据文件和索引在一起) MyISAM 不是聚集索引(索引和数据文件是分开的)
是否保存表的行数:  InnoDB 不保存表的行数， 查询某张表的行数会全表扫描 MyISAM 会保存整个表的行数， 执行速度很快
是否支持表锁和行锁  InnoDB 支持表锁和行锁(默认) MyISAM 支持表锁
是否有主键  InnoDB 表必须要有一个主键(如果用户不设置， 那么引擎会自行设定一列当做主键) MyISAM则可以没有
存储文件个数  InnoDB 的存储文件是 frm 和 ibd MyISAM 的存储文件是 frm, myd, myi三个文件
什么是表锁和行锁? 表锁比行锁更粗, 锁的是整张表
但是行锁锁的是一行记录，所以我们的表锁的效率是不及行行锁的，但是表锁的安全性是比行锁要高的
如何定义一个table t1它的engine 为 MYISAM?]]></description>
</item><item>
    <title>DB-02多表</title>
    <link>http://fengqigang.cn/posts/db-02%E5%A4%9A%E8%A1%A8/</link>
    <pubDate>Sun, 04 Jul 2021 11:23:00 &#43;0800</pubDate>
    <author>Author</author>
    <guid>http://fengqigang.cn/posts/db-02%E5%A4%9A%E8%A1%A8/</guid>
    <description><![CDATA[如何建立一对一的表(商品表[价格，数量，商品名称], 商品详情表[商品具体描述，图片，规规格])? 商品表:
 id 价格 数量 商品名称  商品详情表
 id 商品的具体描述 图片 规格 商品id  如何建一对多的表(班级表[名称], 学生表[姓名])? 一对多，两个表之间的关系应该维护在多的一方
班级表
 id 名称  学生表
 id 姓名 班级id  如何建多对多的表(学生表[姓名], 课程表[课程名称])? 多对多的关系应该去建立一个关系表, 在关系表中去维护两者之间的关系
  先建各自的表
  再建立关系表
  学生表
 id 姓名  课程表
 id 课程名称  学生选课表
 id 学生id 课程id  数据库设计的三大范式是什么?  确保每列原子性:  每一列的原子性， 每一列不可以再分割
确保每列都和主键相关:  每一个表都应该有一个主键
一个表只讲一件事情，不表示多件事情，否则就会存在大量的数据冗余
确保每列都和主键列直接相关，而不是间接相关  如何对其进行交叉连接?]]></description>
</item><item>
    <title>Db01单表</title>
    <link>http://fengqigang.cn/posts/db01%E5%8D%95%E8%A1%A8/</link>
    <pubDate>Wed, 30 Jun 2021 20:19:58 &#43;0800</pubDate>
    <author>Author</author>
    <guid>http://fengqigang.cn/posts/db01%E5%8D%95%E8%A1%A8/</guid>
    <description><![CDATA[库的增删改查 建库语句是什么(31th_sql, utf8)? 1  createdatabase31th_sqlcharactersetutf8;  如何显示所有的库? 1  showdatabases;  如何显示 31th_sql 的建库语句? 1  showcreatedatabase31th_sql;  如何删除 31th_sql 数据库? 1  dropdatabase31th_sql;  如何选择使用 mymall 数据库? 1  usemymall;  表的增删改查 如何查看 库中所有的表? 1  showtables;  如何查询 goods 表的建表语句? 1  showcreatetablegoods;  如何描述一个 goods 表? describe goods / desc goods
1  descgoods;  如何将 goods 表中的字符集改为 utf8 , 校对规则改成 utf8_bin? 1  altertablegoodscharactersetutf8collateutf8_bin;  如何删除 goods 表中 price 字段?]]></description>
</item><item>
    <title>21_reflect</title>
    <link>http://fengqigang.cn/posts/21_reflect/</link>
    <pubDate>Wed, 30 Jun 2021 09:32:16 &#43;0800</pubDate>
    <author>Author</author>
    <guid>http://fengqigang.cn/posts/21_reflect/</guid>
    <description><![CDATA[什么是反射? 获取类运行时信息的一种技术，这种技术叫做反射技术
获取字节码文件有哪些方式?   Class.forName(&ldquo;全限定类名&rdquo;)
  类名.class
  对象.getClass（）
  如何用 Class.forName(&ldquo;全限定类名&rdquo;) 获取字节码文件？ 1 2 3 4 5 6 7  public class TestDemo { public static void main(String[] args) throws ClassNotFoundException { // 第一种 Class.forName（&#34;全类名&#34;）  Class personCls = Class.forName(&#34;idea.Person&#34;); System.out.println(personCls); } }   如何用 类名.class 获取字节码文件？ 1 2 3 4 5 6 7 8 9 10 11  public class TestDemo { public static void main(String[] args) throws ClassNotFoundException { // 第一种 Class.]]></description>
</item><item>
    <title>Aop</title>
    <link>http://fengqigang.cn/posts/aop/</link>
    <pubDate>Mon, 28 Jun 2021 23:14:37 &#43;0800</pubDate>
    <author>Author</author>
    <guid>http://fengqigang.cn/posts/aop/</guid>
    <description><![CDATA[AOP编程实战   引入依赖
  注册委托类组件
  提供一个通知组件并注册(MethdoInterceptor 是来自于 org.aopalliance.intercept)
  ASPECT 强化advisor - pointcut advisor 的时间属性   Before
  After
  Around
  AfterReturning
  AfterThrowing
  joinPoint 的参数 ProceedingJoinPoint extends 于 JoinPint
  getSignature() 方法信息
  getName() 方法名
  getArgs() 参数
  getThis() proxy
  getTarget() 委托类对象
  CustomAspect  指定组件为切面组件 @Aspect , 保留@Component  配置切入点 @Pointcut(&ldquo;execution(* cn.]]></description>
</item><item>
    <title>Spring02</title>
    <link>http://fengqigang.cn/posts/spring02/</link>
    <pubDate>Fri, 25 Jun 2021 23:23:09 &#43;0800</pubDate>
    <author>Author</author>
    <guid>http://fengqigang.cn/posts/spring02/</guid>
    <description><![CDATA[02_Spring
builder 设计模式  注意
 如果setIq 和 sethair 方法中的 head, 如果没有初始化的话会出现空指针异常
  处理方法:
  HumanBuilder
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15  public class HumanBuilder { Human human = new Human(); public Head setIq(Integer iq) { Head head = human.getHead(); head.setIq(iq); return head; } public Head setHair(String hair) { Head head = human.getHead(); head.setHair(hair); return head; } }   Human]]></description>
</item><item>
    <title>Spring01</title>
    <link>http://fengqigang.cn/posts/spring01/</link>
    <pubDate>Thu, 24 Jun 2021 23:51:14 &#43;0800</pubDate>
    <author>Author</author>
    <guid>http://fengqigang.cn/posts/spring01/</guid>
    <description><![CDATA[单例模式 构造方法后没有;
public class 后没有()
线程不安全的立即加载单例模式 高并发下并不安全
1 2 3 4 5 6 7 8 9 10 11  public class TestSigteon { static TestSigteon testSigteon; private TestSigteon(){} public static TestSigteon getSigteonInstance(){ if(testSigteon == null){ testSigteon = new TestSigteon(); } return testSigteon; } }   线程安全的立即加载单例模式 将 synchronized 放在 public 与 static 之间
1 2 3 4 5 6 7 8 9 10 11  public class TestSigteon { static TestSigteon testSigteon; private TestSigteon(){} public synchronized static TestSigteon getSigteonInstance(){ if(testSigteon == null){ testSigteon = new TestSigteon(); } return testSigteon; } }   什么是懒加载和立即加载?]]></description>
</item><item>
    <title>Picgo</title>
    <link>http://fengqigang.cn/posts/picgo/</link>
    <pubDate>Wed, 09 Jun 2021 16:04:58 &#43;0800</pubDate>
    <author>Author</author>
    <guid>http://fengqigang.cn/posts/picgo/</guid>
    <description><![CDATA[什么是PicGo?  github
如何安装PicGo? win   exe 安装
  choco 安装
  1  choco install picgo    scoop 安装  1  coop bucket add helbing https://github.com/helbing/scoop-bucket &amp; scoop install picgo   Linux  arch  1  yay -S picgo-appimage    AppImage  1 2  chomod a+x PicGo-2.3.0-beta.6.AppImage ./PicGo-2.3.0-beta.6.AppImage   MacOS  brew  1  brew install picgo --cask   PicGo + 阿里云oss?]]></description>
</item><item>
    <title>Day39</title>
    <link>http://fengqigang.cn/posts/day39/</link>
    <pubDate>Mon, 17 May 2021 23:31:44 &#43;0800</pubDate>
    <author>Author</author>
    <guid>http://fengqigang.cn/posts/day39/</guid>
    <description><![CDATA[引入css有哪几种方式?  在 div 后写 style  写在 head 标签内， 用 style 包裹  导入外部文件，用link标签(可使用相对路径，也可使用绝对路径)  有哪些方式可以挑选选择器?  标签选择器  类选择器(在一个 html 页面上， 每一个标签的 class 可以有多个)  ID选择器(在一个 html 页面上，每一个标签的 id 是唯一的)   层级复合选择器   属性选择器  选择器的优先级是什么样的? 如何强制升到最高的优先级? 行内 &gt; ID &gt; 伪类|类 属性选择 &gt; 标签 &gt; 统配符
文件中 css 与导入的 css (优先级一样), 需要 满足就近原则
强制升到最高的优先级
当前位置所设置的属性为最高级
什么是标准流(标准文档流, 文档流)?   在一个 HTML 页面中，页面会根据页面的(行和块)特性，会从上到下，从左到右按顺序排列
  每一个 HTML 标签， 要在页面上占据空间]]></description>
</item></channel>
</rss>
