<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>All Posts - xiaonan&#39;s Blog</title>
        <link>http://fengqigang.cn/posts/</link>
        <description>All Posts | xiaonan&#39;s Blog</description>
        <generator>Hugo -- gohugo.io</generator><language>zh-cn</language><managingEditor>gaungsizhongbin@gmail.com (fengxiaonan)</managingEditor>
            <webMaster>gaungsizhongbin@gmail.com (fengxiaonan)</webMaster><lastBuildDate>Tue, 07 Sep 2021 23:32:23 &#43;0800</lastBuildDate><atom:link href="http://fengqigang.cn/posts/" rel="self" type="application/rss+xml" /><item>
    <title>03 ERD实体关系图</title>
    <link>http://fengqigang.cn/posts/03-erd%E5%AE%9E%E4%BD%93%E5%85%B3%E7%B3%BB%E5%9B%BE/</link>
    <pubDate>Tue, 07 Sep 2021 23:32:23 &#43;0800</pubDate>
    <author>Author</author>
    <guid>http://fengqigang.cn/posts/03-erd%E5%AE%9E%E4%BD%93%E5%85%B3%E7%B3%BB%E5%9B%BE/</guid>
    <description><![CDATA[ERD 的全称是什么? Entity Relationship Diagrams
ERD 的关系 ERD 图实例 Primary Key and Foreign Key A Primary Key is an attribute (or field) that uniquely identifies every record in a certain table.
Primary Key Rules   Unique
  Never changing
  Never null
  composite key composite Key Rules   Use the fewest number of attributes possible.
  Don&rsquo;t use attributes that are apt to change.]]></description>
</item><item>
    <title>02 UML用例图</title>
    <link>http://fengqigang.cn/posts/02-uml%E7%94%A8%E4%BE%8B%E5%9B%BE/</link>
    <pubDate>Mon, 06 Sep 2021 22:58:09 &#43;0800</pubDate>
    <author>Author</author>
    <guid>http://fengqigang.cn/posts/02-uml%E7%94%A8%E4%BE%8B%E5%9B%BE/</guid>
    <description><![CDATA[用例图的四个元素 Systems   Website
  Software Component
  Business Process
  Application
  Actors  Primary Actors  Initiate the use of the system
 Secondary Actors  Reactionary
Use Cases Represents an action that accomplishes some sort of task within the system.
Relationships  Association   Include  The base use case requires an included use case in order to be complete.
 Extend  You have the option to extend the behavior of the base use case.]]></description>
</item><item>
    <title>01 Uml类图</title>
    <link>http://fengqigang.cn/posts/01-uml%E7%B1%BB%E5%9B%BE/</link>
    <pubDate>Sun, 05 Sep 2021 23:26:34 &#43;0800</pubDate>
    <author>Author</author>
    <guid>http://fengqigang.cn/posts/01-uml%E7%B1%BB%E5%9B%BE/</guid>
    <description><![CDATA[UML类图例子 可见性修饰   -private
  +public
  #protected
  ~package/default
  关系  Inheritace 继承  Association 联系(sb eat sb)  Aggregation  A group of tortoises is called a creep.
Composition  Multiplicity
         0..1 zero to one(optional)   n specific number   n&hellip;* zero to many   1..* one to many   m.]]></description>
</item><item>
    <title>02 Nats所支持的协议</title>
    <link>http://fengqigang.cn/posts/02-nats%E6%89%80%E6%94%AF%E6%8C%81%E7%9A%84%E5%8D%8F%E8%AE%AE/</link>
    <pubDate>Thu, 26 Aug 2021 23:00:07 &#43;0800</pubDate>
    <author>Author</author>
    <guid>http://fengqigang.cn/posts/02-nats%E6%89%80%E6%94%AF%E6%8C%81%E7%9A%84%E5%8D%8F%E8%AE%AE/</guid>
    <description><![CDATA[NATS 可以支持 nats 或 tls 协议
NATS 可以是单个服务，也可以是集群
nats 协议 nats://demo.nats.io, 4222是NATS的默认协议
tls 协议 tls://demo.nats.io:4443]]></description>
</item><item>
    <title>01 Nats以主题为基础的消息</title>
    <link>http://fengqigang.cn/posts/01-nats%E4%BB%A5%E4%B8%BB%E9%A2%98%E4%B8%BA%E5%9F%BA%E7%A1%80%E7%9A%84%E6%B6%88%E6%81%AF/</link>
    <pubDate>Thu, 26 Aug 2021 22:58:12 &#43;0800</pubDate>
    <author>Author</author>
    <guid>http://fengqigang.cn/posts/01-nats%E4%BB%A5%E4%B8%BB%E9%A2%98%E4%B8%BA%E5%9F%BA%E7%A1%80%E7%9A%84%E6%B6%88%E6%81%AF/</guid>
    <description><![CDATA[主题的等级 用.去区分不同的等级
1 2 3 4 5  time.us time.us.east time.us.east.atlanta time.eu.east time.eu.warsaw   通配符  * 匹配一个 token  如 time.*.east 可以匹配 time.us.east 和 time.eu.east
&gt; 匹配多个 tokens  如 time.us.&gt; 可以匹配 time.us.east 和 time.us.east.atlanta
混合*与&gt;  如*.*.east.&gt; 可以匹配 time.us.east.atlanta]]></description>
</item><item>
    <title>02 Spring测试源码学习环境是否搭建成功</title>
    <link>http://fengqigang.cn/posts/02-spring%E6%B5%8B%E8%AF%95%E6%BA%90%E7%A0%81%E5%AD%A6%E4%B9%A0%E7%8E%AF%E5%A2%83%E6%98%AF%E5%90%A6%E6%90%AD%E5%BB%BA%E6%88%90%E5%8A%9F/</link>
    <pubDate>Tue, 24 Aug 2021 23:57:01 &#43;0800</pubDate>
    <author>Author</author>
    <guid>http://fengqigang.cn/posts/02-spring%E6%B5%8B%E8%AF%95%E6%BA%90%E7%A0%81%E5%AD%A6%E4%B9%A0%E7%8E%AF%E5%A2%83%E6%98%AF%E5%90%A6%E6%90%AD%E5%BB%BA%E6%88%90%E5%8A%9F/</guid>
    <description><![CDATA[新建module  新建 moudle  选择 gradle 项目(spring-study)  查看项目是否导入成功 在整个项目的 settings.gradle 是否引入 spring-study 项目
设置项目依赖 在新建的 moudle 下打开 build.gradle 引入下面的依赖 spring-beans, spring-context, spring-core, spring-expression, spring-instrument
新建测试 bean  cn.fengqigang.bean.Person  1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39  package cn.]]></description>
</item><item>
    <title>01 Spring源码环境搭建</title>
    <link>http://fengqigang.cn/posts/01-spring%E6%BA%90%E7%A0%81%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/</link>
    <pubDate>Tue, 24 Aug 2021 23:54:53 &#43;0800</pubDate>
    <author>Author</author>
    <guid>http://fengqigang.cn/posts/01-spring%E6%BA%90%E7%A0%81%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/</guid>
    <description><![CDATA[克隆spring 5.1.x 源代码 1  git clone -b 5.1.x https://github.com/spring-projects/spring-framework.git   查看导入idea的需要注意的事项，并执行  Precompile spring-oxm with ./gradlew :spring-oxm:compileTestJava  import-into-idea.md
在 spring-framework 文件夹下运行以下命令
1  ./gradlew :spring-oxm:complieTestJavals   等待大约7分钟
 Import into IntelliJ (File -&gt; New -&gt; Project from Existing Sources -&gt; Navigate to directory -&gt; Select build.gradle)
  When prompted exclude the spring-aspects module (or after the import via File-&gt; Project Structure -&gt; Modules)
  code away  ]]></description>
</item><item>
    <title>Db05jdbc</title>
    <link>http://fengqigang.cn/posts/db05jdbc/</link>
    <pubDate>Tue, 06 Jul 2021 16:56:02 &#43;0800</pubDate>
    <author>Author</author>
    <guid>http://fengqigang.cn/posts/db05jdbc/</guid>
    <description><![CDATA[数据库的访问过程是什么样的?  客户端与 Mysql 服务器之间建立连接   加载驱动  DriverManager.registerDriver(new Driver())
 获取连接对象  Connection connection = DriverManager.getConnection(url, name, password);
客户端与 Mysql 服务器发送数据库请求  Statement statement = connection.createStatement();
Mysql 服务器处理客户端的相应，并返回结果给客户端  statement.executeUpdate() statement.executeQuery()
 客户端接受 Mysql服务器的相应，并按照自己的业务逻辑做相应处理
  释放相关资源
  statement
connection
resultSet
如何设置 jdbc 使用 mydatabase 数据库？ 开始使用参数用? 再接参数时使用&amp;
1  url=jdbc:mysql://localhost:3306/mydatabase;   如何设置 jdbc 使用 mydatabase 数据库, 并不使用SSL? 开始使用参数用? 再接参数时使用&amp;
1  url=jdbc:mysql://localhost:3306/mydatabase?useSSL=false;   如何设置 jdbc 使用 mydatabase 数据库, 并不使用SSL, 设置编码格式为utf8?]]></description>
</item><item>
    <title>Db04事务</title>
    <link>http://fengqigang.cn/posts/db04%E4%BA%8B%E5%8A%A1/</link>
    <pubDate>Tue, 06 Jul 2021 12:55:20 &#43;0800</pubDate>
    <author>Author</author>
    <guid>http://fengqigang.cn/posts/db04%E4%BA%8B%E5%8A%A1/</guid>
    <description><![CDATA[什么是事务? 指逻辑上的一组操作单元， 组成这个逻辑操作的各个单元， 要么都成功，要么都不成功
事务控制有哪些api?  connection.rollback();  回滚事务
connection.commit();  提交事务
connection.setAutoCommit(true);  开启事务
事务的特性是什么? ACID
 原子性  一个事务，事务中的各个操作单元，要么就都成功，要么都不成功
一致性  事务必须使数据库从一个一致性变成另一个一致性状态
隔离性  事务与事务之间是互相隔离的，互不干扰的，互不影响的
持久性  事务引起的数据库的改变应该是永久化的，而不是短暂的
事务的隔离级别有哪些?   read uncommitted 读未提交
  read Commited 读已提交
  repeatable read 可重复读
  Serializable 串行化
  什么是 read uncommitted 读未提交?   出现脏读
  出现不可重复读
  出现虚幻读
  什么是 read committed 读已提交?]]></description>
</item><item>
    <title>db03索引</title>
    <link>http://fengqigang.cn/posts/db03%E7%B4%A2%E5%BC%95/</link>
    <pubDate>Sun, 04 Jul 2021 16:43:25 &#43;0800</pubDate>
    <author>Author</author>
    <guid>http://fengqigang.cn/posts/db03%E7%B4%A2%E5%BC%95/</guid>
    <description><![CDATA[什么是索引? 索引是可以帮助MySQL高效获取数据的数据结构。
即索引是数据结构。
数据库在执行查询的时候，如果没有索引存在的情况下，会采用全表扫描的方式进行查找。
如果存在索引，则会先去索引列表中定位到特定的行或者直接定位到数据，从而可以极大地减少查询的行数， 增加查询速度
在MySQL中，常见的数据库引擎是什么? MyISAM
InnoDB(默认)
InnoDB 与 MyISAM 有什么区别?  事务:  InnoDB 支持事务, MyISAM 不支持事务
外键:  InnoDB 支持外键, MyISAM 不支持外键
是否是聚集索引:  InnoDB 是聚集索引(数据文件和索引在一起) MyISAM 不是聚集索引(索引和数据文件是分开的)
是否保存表的行数:  InnoDB 不保存表的行数， 查询某张表的行数会全表扫描 MyISAM 会保存整个表的行数， 执行速度很快
是否支持表锁和行锁  InnoDB 支持表锁和行锁(默认) MyISAM 支持表锁
是否有主键  InnoDB 表必须要有一个主键(如果用户不设置， 那么引擎会自行设定一列当做主键) MyISAM则可以没有
存储文件个数  InnoDB 的存储文件是 frm 和 ibd MyISAM 的存储文件是 frm, myd, myi三个文件
什么是表锁和行锁? 表锁比行锁更粗, 锁的是整张表
但是行锁锁的是一行记录，所以我们的表锁的效率是不及行行锁的，但是表锁的安全性是比行锁要高的
如何定义一个table t1它的engine 为 MYISAM?]]></description>
</item></channel>
</rss>
