<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>王道 - Category - xiaonan&#39;s Blog</title>
        <link>http://fengqigang.cn/categories/%E7%8E%8B%E9%81%93/</link>
        <description>王道 - Category - xiaonan&#39;s Blog</description>
        <generator>Hugo -- gohugo.io</generator><language>en</language><managingEditor>gaungsizhongbin@gmail.com (xiaonan)</managingEditor>
            <webMaster>gaungsizhongbin@gmail.com (xiaonan)</webMaster><lastBuildDate>Wed, 14 Apr 2021 23:01:03 &#43;0800</lastBuildDate><atom:link href="http://fengqigang.cn/categories/%E7%8E%8B%E9%81%93/" rel="self" type="application/rss+xml" /><item>
    <title>Day14</title>
    <link>http://fengqigang.cn/posts/day14/</link>
    <pubDate>Wed, 14 Apr 2021 23:01:03 &#43;0800</pubDate>
    <author>Author</author>
    <guid>http://fengqigang.cn/posts/day14/</guid>
    <description><![CDATA[什么是单分支的 try&hellip;catch, 其语法是什么? try { //可能出现异常的，正常的代码逻辑 } catch (要捕捉的异常对象){ //在catch分支中处理具体类型的代码异常 }
在 try&hellip;catch 中 的 catch 如何写? 1 2 3 4 5 6 7 8 9 10 11 12  public class Sort { public static void main(String[] args) { try { System.out.println(&#34;1111&#34;); System.out.println(10/0); System.out.println(&#34;2222&#34;); } catch (ArithmeticException ae){ System.out.println(&#34;发生了算数除0异常&#34;); } System.out.println(&#34;3333&#34;); } }   catch 中必须是一个抛出异常类的对象声明
try..catch 中代码是如何执行的?  如果 try 当中没有异常  那么 try 中的代码会正常执行完毕， catch 也叫异常处理器，如果没有异常，那么它不会工作，既然没有异常，整个 try&hellip;catch 后的代码正常执行]]></description>
</item><item>
    <title>Day13</title>
    <link>http://fengqigang.cn/posts/day13/</link>
    <pubDate>Tue, 13 Apr 2021 21:42:49 &#43;0800</pubDate>
    <author>Author</author>
    <guid>http://fengqigang.cn/posts/day13/</guid>
    <description><![CDATA[在进行深拷贝时，如何实现一个空接口？ Cloneable 并不是自己实现的
如何将byte数组转成 String, 并输出它 在 JDK 源码当中， 涉及区间的方法，一般都是怎么规定区间的? 左闭右开
这种做法是为了适配数组从0开始的下标
会输出什么? 会直接输出整个 String
String 对象中的不可变性，JVM 内存图是什么样的? 静态常量池 是干什么的? 在用字面值常量给 String 对象赋值时，在编译时期就加入了 常量池
当常量池中已存在某位字符串对象时，当需要使用时，就不需要在堆上重新创建对象了，而是直接去指向这个常量池中的字符串对象
它们的值是什么? s.equals(s2) 是根据值来判断的
它们会输出什么? s3 == (s1 + s2) 肯定不能编译确定取值，必须运行期确定，那么它的对象就一定不在常量池，而在堆上
判断一个字符串是否为空可以采取什么样的方法? equals
1 2 3 4 5 6  public class supertest { public static void main(String[] args) { String s = &#34;abc&#34;; System.out.println(&#34;&#34;.equals(s)); } }   如果s是null, 会导致报错
如何比较这两个字符串，并忽略大小写? a.equalsIgnoreCase(b)
1 2 3 4 5 6 7  public class supertest { public static void main(String[] args) { String s = &#34;abc&#34;; String s1 = &#34;ABC&#34;; System.]]></description>
</item><item>
    <title>Day12</title>
    <link>http://fengqigang.cn/posts/day12/</link>
    <pubDate>Mon, 12 Apr 2021 23:48:15 &#43;0800</pubDate>
    <author>Author</author>
    <guid>http://fengqigang.cn/posts/day12/</guid>
    <description><![CDATA[什么是 API ? Application Programming Interface(API)
应用程序编程接口，在Java 当中指的是一些先定义好的类和方法
作用
开发者可以在不关注具体实现细节的前提下，使用和这些已经预先定义好的类和方法实现自己的需求
Object 类有什么特点?   Object 类所有类继承层次的祖先类, 所有类(包括数组)都 直接或间接的继承 自该类，都实现了该类的方法
  在自定义类时，并不需要特别标注 extends Object
  如果一个类没有明确的的指出它的父类，Object 类就默认被认为是这个类的父类，extends Object 则被省略了
  为什么所有类都有一个默认无参?   当一个类没有定义构造方法的时候，就会自动添加默认构造方法
  一旦有默认构造方法，在创建子类对象的时候，就会执行子类对象的隐匿初始化
  隐式初始化，默认调用父类的无参构造
  最终，一定能保证，调用到 Object 类的无参构造方法，先初始化 Object 这个父类
  为什么不能访问 clone 方法 clone 方法是 protect 修饰的， 只能在自己的子类中访问
方法声明中 public final Class&lt;?&gt; getClass() 分另代表什么意思?   public 访问权限，调用时不必考虑权限问题
  final 该方法可以被继承但是不能被重写]]></description>
</item><item>
    <title>Day11</title>
    <link>http://fengqigang.cn/posts/day11/</link>
    <pubDate>Sat, 10 Apr 2021 22:36:59 &#43;0800</pubDate>
    <author>Author</author>
    <guid>http://fengqigang.cn/posts/day11/</guid>
    <description><![CDATA[new 类名().new 类名() 与 new 类名.new 这两种方式有什么区别? new 类名().new 类名()
创建成员内部类
new 外围类类名.new 静态内部类类名()
创建静态内部类
局部内部类有什么优缺点? 优点
绝对的封装性，并且可以少创建一个 class, 相对来说简单一点
缺点
局部内部类作用域仅限于方法，如果别的类， 别的方法也想用这个类 做不到
可以进行吗?为什么? 可以，任何时候都有父类，哪怕是实现了一个接口
, 为什么 a++ 无法执行?  生命周期的问题  方法的局部变量的生命周期和方法同生共死, 方法出栈就销毁
但是 局部内部类的方法会创建对象
于是出现方法出栈后，局部变量销毁了，但是对象仍然需要使用该局部变量的情况
为了解决这种生命周期的冲突，jvm 会在创建局部内部类对象时，把方法的局部变量作为对象的成员变量加了进去
这个成员变量和局部变量值同步的问题  如果在局部内部类当中， 把这个局部变量给修改了，那就必须同步这个修改，否则程序就有问题
但是这样显然太复杂了，java 的开发都觉得不想做了，于是直接把这个局部变量声明为 final 做为一个常量，直接不修改，就不需要考虑同步问题
Java8 之前，如果想用局部内部类访问方法的局部变量， 该局部变量必须声明为 final
Java8 之后， 这个限制被解除了，改为在底层直接加上 final, 不需要程序再加了
这就是 语法糖
匿名内部类 和 lambda 的局部变量有什么特殊的地方? 匿名内部类 和 lambda 本质的是 局部内部类
它们的局部变量仍然是 final 修饰的]]></description>
</item><item>
    <title>Day10</title>
    <link>http://fengqigang.cn/posts/day10/</link>
    <pubDate>Fri, 09 Apr 2021 23:09:08 &#43;0800</pubDate>
    <author>Author</author>
    <guid>http://fengqigang.cn/posts/day10/</guid>
    <description><![CDATA[子类对象初始化成员变量赋值的顺序是什么样的?   默认初始化, 默认值
  去找创建子类对象会调用的构造方法，看第一行有没有 this(), super(), 如果有就去执行，如果没有，默认有 super() 仍然去执行
  肯定要跳到 父类构造器 ，然后从 上到下 执行父类中的 显示赋值 和 构造代码块 ，最后执行父类的构造器
  如果子类构造器中有 this, 回到子类 this 构造器. 如果没有 this, 直接就回去，从上到下执行子类中的显示赋值和构造代码块，然后执行 this 构造器，然后跳到最开始的构造器
  直接执行该构造器，而不会显式赋值和构造代码块
  如何定义接口? 语法:
与 class 定义一样，接口是和 class 同等级别的数据类型
[访问权限修饰符] interface 接口名{}
接口的命名规范是什么? 采取 大驼峰式 的
有些程序员，喜欢在接口名的第一个单词之前加一个&quot;I&quot; 用来区分这是一个接口
1 2 3 4 5  interface ISpecialSkills{ public void walkUpright(){ } }   如何在接口中定义方法?]]></description>
</item><item>
    <title>Day9</title>
    <link>http://fengqigang.cn/posts/day9/</link>
    <pubDate>Thu, 08 Apr 2021 16:50:57 &#43;0800</pubDate>
    <author>Author</author>
    <guid>http://fengqigang.cn/posts/day9/</guid>
    <description><![CDATA[其jvm内存结构图是什么样的? 什么是隐式初始化? 隐式初始化，子类构造器中没有显式调用 super() 父类构造器
对于编译而言，怎么才能保证编译不报错? 两个引用之间是父子关系
什么是 instanceof 关键字?如何使用? 引用 instanceof 类名，表示该引用指向的对象，是否是后面类的对象(或子类对象)
如果是就返回 true, 否则就返回 false
怎么才能保证运行时不报错? 该父类引用指向的子类对象，就是这个要强制的子类的对象
否则会报 ClassCastException 类型转换异常的错误
null instalceof 任何类其结果是什么? false
对于这段程序其执行 会出现什么? 成员变量 编译时看左边，运行时看左边
###对于段程序其执行 会出现什么?
方法 编译时看左边，运行时看右边
为什么要有抽象方法? 如在 Animal 中的 shout 方法是不会被调用的，这个方法只是用来被重写的
  Animal 类只用来被继承，不用来创建对象
  Animal 类中 shout 方法，不应该有方法体
  抽象方法如何声明? 语法:
[访问权限修饰符] abstract 返回值类型 方法名();
Class &lsquo;Animal&rsquo; must either be declared abstract or implement abstract method &lsquo;shout()&rsquo; in &lsquo;Animal&rsquo;]]></description>
</item><item>
    <title>Day8</title>
    <link>http://fengqigang.cn/posts/day8/</link>
    <pubDate>Wed, 07 Apr 2021 23:12:51 &#43;0800</pubDate>
    <author>Author</author>
    <guid>http://fengqigang.cn/posts/day8/</guid>
    <description><![CDATA[Day 8
若想限制创建 Student 类个数, 其思路是什么?   如果允许外部直接创建对象，显然 无法控制创建对象的个数
  需要计数器指示外部创建对象的个数
   若想限制创建 Student 类个数, 其思路是什么?   如果允许外部直接创建对象，显然 无法控制创建对象的个数
  需要计数器指示外部创建对象的个数
   解决方法:
  私有化构造方法
  提供一个方法来创建对象, 访问权限是 public
  这个方法必须是 静态方法
  控制创建对象的计数器，应该是 静态成员变量 ，被所有对象共享
  在 set, get方法怎样赋值比较好( 如width )? 用 this 好
如何不希望外界创建数组 =null 的对象，应该如何做? 私有化无参构造
在增删改时，如果结果成功或失败了，可以在方法中输出成功或失败的消息吗? 不可以， 输出成功或失败 不应该 是在 增删改 方法里该做的事情
为了防止 studs 出现空指针异常， 可以习惯性怎么做?]]></description>
</item><item>
    <title>Day7</title>
    <link>http://fengqigang.cn/posts/day7/</link>
    <pubDate>Tue, 06 Apr 2021 23:03:23 &#43;0800</pubDate>
    <author>Author</author>
    <guid>http://fengqigang.cn/posts/day7/</guid>
    <description><![CDATA[什么是 package 关键字? 作用:
用来声明当前类(当前的java文件中的所有类) 属于哪个包, package 后面跟上当前的包名
  包名的书写，用逗号隔开
  语法上，该声明语句一定位于一个 Java 源文件的有效代码的第一行, 否则会报错
  什么是 import 关键字? 作用:
就量用来导包的
当一个别的类中的成员(方法和变量)时，编译器会优先从当前包中检索，如果找得到就去调用，如果找不到，它就会报错
语法:
import + 全限定类名
位置:
最好写在 package 下面，不可用写在有效代码下面
如何实现智能导包? import + 包名 + *
什么叫有需求导包? 如果不导包就报错，那么它就会自动导包
如果同包下已经有同名的类，那么它就不会去导包了
什么是默认导包, 隐式导包? java.lang 包下的所有类，是 java 的核心类，它会自动隐式导入，不需要再写导包语句
如果同包下和不同包下同名类都想使用，怎么办? 真的存在这种需求，建议改名一个
用全限定类名去使用
什么是面向过程与面向对象? 面向过程 procedureal oriented programming
面向对象 oop
面向过程的编程思想
即程序是&quot;动词&quot;的集合，即程序功能是由一系列有序的动作来完成
面向对象的编程思想
即程序是由一系列的对象+对象之间交互(消息)组成
面向过程有什么优缺点? 优点:
代码执行效率高
缺点:
面向过程程序是一条线下来的，对程序员要求很高，需要程序员详细了解每个功能的细节，这就意味着，不利于合作开发，不利于处理复杂的大型项目
应用场景:
需要高效率的场景，比如说操作系统内核OS, 嵌入式开发，算法]]></description>
</item><item>
    <title>Day6</title>
    <link>http://fengqigang.cn/posts/day6/</link>
    <pubDate>Sun, 04 Apr 2021 15:16:47 &#43;0800</pubDate>
    <author>Author</author>
    <guid>http://fengqigang.cn/posts/day6/</guid>
    <description><![CDATA[如何在一个构造函数中调用另一个构造函数 用 this
1 2 3 4 5  public Student(String name, int age, String gender, int stuId) { this(name, age, gender); this.stuId = stuId; }   在一个 java 文件下， 所有的 class 是什么关系? 同一个包 的关系
不可以重名
什么是匿名对象? 如何创建匿名对象? 匿名对象:
没有名字的对象，没有引用指向它的对象
创建匿名对象:
new 类名();
什么时候用匿名对象?  用 匿名对象调用方法  好处
方便简洁， 如果只想调用一次该对象的成员方法
没有引用的对象是垃圾，会等待垃圾回收，理想情况下，可以提升内存利用率
坏处
如果想用对象多次访问成员，调用方法，那么匿名肯定不适用，创建多个匿名对象， 浪费空间，效率底
 如果方法的形式参数中需要一个对象，可以 传入一个匿名对象
  如果一个方法返回值类型是一个类，要返回一个对象，可以 返回一个匿名对象
  什么是代码块? 可以分为多少种? 在java中, 使用大括号 {} 括起来的代码被称为 代码块]]></description>
</item><item>
    <title>Day5</title>
    <link>http://fengqigang.cn/posts/day5/</link>
    <pubDate>Sat, 03 Apr 2021 23:12:33 &#43;0800</pubDate>
    <author>Author</author>
    <guid>http://fengqigang.cn/posts/day5/</guid>
    <description><![CDATA[什么是显式赋值? 直接赋值的方式
1  String brand = &#34;华为&#34;;   其输出结果会是什么样? i 与 i8 会是一样的
在相同的类中，整个程序的执行期间，类加载会执行多少次？ 只加载一次
类加类是什么时候被触发(类加载的时机)?   new 对象的时候
  启动一个类的 main() 方法时
  像 String, System 这种显然也是类，但是在 jdk 当中也会加载吗？ 它们仍然会被加载
类加载都是懒加载，不是必用时，它不会加载
局部变量 与 成员变量 有什么区别？  在类中定义的位置  局部变量:
局部位置(包含方法，大括号之间往往都是局部位置)
成员变量:
成员位置(类中方法外)
 在内存中的位置  局部变量
栈帧中
成员变量
堆上的对象
 生命周期不同  局部变量
和方法的栈帧同生共死，方法调用，局部变量生效，方法执行完毕出栈，局部变量销毁
成员变量
和对象同生共死，是不确定的，但是只要是对象的引用被销毁了，这些对象中的成员变量也没有意义了
 初始化值不同  局部变量
没有默认初始化值， 必须手动初始化
成员变量
有默认初始值]]></description>
</item></channel>
</rss>
