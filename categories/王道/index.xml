<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>王道 - Category - xiaonan&#39;s Blog</title>
        <link>http://fengqigang.cn/categories/%E7%8E%8B%E9%81%93/</link>
        <description>王道 - Category - xiaonan&#39;s Blog</description>
        <generator>Hugo -- gohugo.io</generator><language>en</language><managingEditor>gaungsizhongbin@gmail.com (xiaonan)</managingEditor>
            <webMaster>gaungsizhongbin@gmail.com (xiaonan)</webMaster><lastBuildDate>Tue, 11 May 2021 23:26:09 &#43;0800</lastBuildDate><atom:link href="http://fengqigang.cn/categories/%E7%8E%8B%E9%81%93/" rel="self" type="application/rss+xml" /><item>
    <title>Day36</title>
    <link>http://fengqigang.cn/posts/day36/</link>
    <pubDate>Tue, 11 May 2021 23:26:09 &#43;0800</pubDate>
    <author>Author</author>
    <guid>http://fengqigang.cn/posts/day36/</guid>
    <description><![CDATA[set 特点  Set 接口是 Collection 的子接口 描述的是集合这种数据结构 它的一些自实现是有序的(LinkedHashSet, TreeSet) 有些子实现是无序的(HashSet) 有些子实现允许存储null(LinkedHashSet, HashSet), 有些子实现不允许存储 null(TreeSet) 都是不允许重复元素  set Api  初始化  collection 是 add 方法, map 是 poll 方法
 addAll   clear   containsAll      iterator()  map 不能使用增强for循环, 可以用interset,
set 可以使用增强for循环
HashSet特点  HashSet 是 Set 接口一个具体子实现 HashSet 的底层持有一个 HashMap 对象, HashMap 的底层是一个数组 + 链表 + 红黑树结构, 所以存储到 HashSet 中的元素， 实际上都存储到 HashSet 所持有 HashMap 中作为 Key 存在 由于它的底层持有的是 HashMap 对象，所以无序 不允许存储重复元素： 存储的元素 hash 值一样，并且两个元素直接相等或者相 equals.]]></description>
</item><item>
    <title>Day35</title>
    <link>http://fengqigang.cn/posts/day35/</link>
    <pubDate>Tue, 11 May 2021 23:25:23 &#43;0800</pubDate>
    <author>Author</author>
    <guid>http://fengqigang.cn/posts/day35/</guid>
    <description><![CDATA[day35_linkedHashMap
LinkedHashMap的特点   LinkedHashMap 是 HashMap 一个子类
  LinkedHashMap 基本上完全复用了 HashMap 的底层结构， 参数，方法
  LinkedHashMap的特点基本遵从于 HashMap
  LinkedHashMap 底层在 HashMap 的基础上(数组 + 链表 + 红黑树) 额外维护了一个双向链表: 这个双向链表用来记录存储
  LinkedHashMap 如何额外维护一个双向链表? 构造方法?  默认的构造方法  accessOrder(如果我们给accessOrder 设置为真，那么我们如果访问了这个LinkedHashMap中的某一个Key-value数据，那么这份Key-value数据就会在双向链表中的位置移到最后， 它在红黑树上的位置不变)   API TreeMap 有什么特点?  TreeMap 是 Map 一个子实现 描述数据结构是树/二叉搜索树/红黑树 底层是链表 TreeMap 大小有序(中序遍历是有序的) 不允许重复的 key 不允许null键 线程不安全 Treemap 的重复的定义: 大小比较结果是0, 自然顺序/比较器 如果我们希望在TreeMap中存储数据 ，key-value, 我们可以有两个选择：   让key本身可以比较(继承Comparabe接口实现 compareTo 方法)（但会让代码看一起来不清爽） 不想让 key 本身实现 Comparable 接口实现, 手动用比较器实现  1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19  public class DemoTreeMap { public static void main(String[] args) { TreeMap&lt;User3, Integer&gt; map = new TreeMap&lt;&gt;(); map.]]></description>
</item><item>
    <title>Day34</title>
    <link>http://fengqigang.cn/posts/day34/</link>
    <pubDate>Mon, 10 May 2021 23:36:10 &#43;0800</pubDate>
    <author>Author</author>
    <guid>http://fengqigang.cn/posts/day34/</guid>
    <description><![CDATA[套壳 Java 集合体系是什么样的? 两个
Collection 集合体系
Map 集合体系
都是 Object 的子类
Map 特点  Map 接口是Map 集合体系的顶级接口 和 Collection 接口以及 Collection 下面子实现不同的是, Map 所存储的数据不再是单个数据的，而是 Key-value 的数据(键值对) Map 的子实现有些是有序的，有些是无序的 Map 的子实现不允许存储重复key(重复元素的定义不同) Map 有些子实现可以存储 null, 有些子实现不允许存储 null (指key值)  Map 的 Api? put
1 2 3 4 5 6 7 8 9 10 11 12 13  public class TestMap { public static void main(String[] args) { HashMap map = new HashMap&lt;String, Integer&gt;(2); // put  map.]]></description>
</item><item>
    <title>Day33</title>
    <link>http://fengqigang.cn/posts/day33/</link>
    <pubDate>Sat, 08 May 2021 23:40:30 &#43;0800</pubDate>
    <author>Author</author>
    <guid>http://fengqigang.cn/posts/day33/</guid>
    <description><![CDATA[Queue接口的特点  Queue 接口是 Collection 接口的一个子接口中 Queue 代表/ 描述的是队列(什么是队列: 一个操作受到限制的线性表, 在添加的时候只能在一端添加，删除是在另一端删除 -&gt; 先进先出，后进后出) 有序 能存储重复元素 不能存储null  (poll) 方法， 如果没有元素可以删除,null返回， 如果允许null存储，poll方法就没办法分辨返回的null是没有元素可删除的标记，还是原本存储的null, 因些不让存null
API Deque 接口  Deque 接口是Queue接口的一个子接口 Deque 在Queue接口上进行了扩展: 不仅仅可以作为普通队列，还定义了双端队列，栈 有序 允许重复 不能存储 null(LinkedList) 除外  ArrayDeque 特点  ArrayDeque 是 Deque(双端队列)的一个子实现 可以作为 普通队列/ 双端队列/ 栈 底层数组(循环数组) 默认的初始容量16， 扩容机制(扩充2倍) 方便取余运算  如果不大于8， 直接创建一个为8的数组
有序 允许重复 不允许存储null 线程不安全 我们可以在构造方法里指定底层数组长度，但是给定的数组长度并不真的是我们给定的值 ，而是一个大于我们给定值 的最小2的幂值 -&gt; 底层数组的长度永远是2的幂值  取模运算
构造方法
BlockingQueue
是接口
1 2 3 4 5 6 7 8 9 10  public class DemoBlockingQueue { public static void main(String[] args) { ArrayBlockingQueue&lt;String&gt; queue = new ArrayBlockingQueue&lt;String&gt;(2); queue.]]></description>
</item><item>
    <title>Day32</title>
    <link>http://fengqigang.cn/posts/day32/</link>
    <pubDate>Sat, 08 May 2021 09:20:43 &#43;0800</pubDate>
    <author>Author</author>
    <guid>http://fengqigang.cn/posts/day32/</guid>
    <description><![CDATA[ArrayList的特点?   ArrayList 是 List 接口的一个具体实现(线性表)
  底层是一个数组
  数组的默认长度(10)， 数组的扩容机制(1.5倍)
  有序
  允许重复元素
  允许null
  线程不安全
  在默认的创建 ArrayList 对象的时候，如果不添加，那么构造方法并没有真正创建一个长度为10的数组，而是构建空数组
但是面试的时候，首先你要说的就是默认长度为10
ArrayList 实战 1 2 3 4 5 6 7 8 9 10 11 12 13 14  public class TestLink { public static void main(String[] args) { ArrayList&lt;String&gt; list = new ArrayList&lt;&gt;(); list.add(&#34;zs&#34;); list.add(&#34;ls&#34;); list.add(&#34;wu&#34;); list.add(&#34;zs&#34;); list.add(null); System.out.println(list); } }   构造方法  指定集合  API add]]></description>
</item><item>
    <title>Day31</title>
    <link>http://fengqigang.cn/posts/day31/</link>
    <pubDate>Fri, 07 May 2021 23:31:41 &#43;0800</pubDate>
    <author>Author</author>
    <guid>http://fengqigang.cn/posts/day31/</guid>
    <description><![CDATA[List的特点   List 的是 Collection 的子接口
  List 是 Collection 的一个 线性表 子接口 -&gt; (有序, 有下标操作)
  有序
  允许重复元素存在
  允许 null
  API? add
1 2 3 4 5 6 7 8 9 10 11  public class TestLink { public static void main(String[] args) { ArrayList&lt;String&gt; list = new ArrayList&lt;&gt;(); list.add(&#34;zs&#34;); list.add(&#34;ls&#34;); list.add(&#34;wu&#34;); list.add(&#34;zl&#34;); System.out.println(list); } }   addAll
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20  public class TestLink { public static void main(String[] args) { ArrayList&lt;String&gt; list = new ArrayList&lt;&gt;(); list.]]></description>
</item><item>
    <title>Day30</title>
    <link>http://fengqigang.cn/posts/day30/</link>
    <pubDate>Thu, 06 May 2021 23:31:19 &#43;0800</pubDate>
    <author>Author</author>
    <guid>http://fengqigang.cn/posts/day30/</guid>
    <description><![CDATA[集合类的分类?  Collection  List (线性表子接口)  ArrayList: 1 LinkedList: 2 Vector -&gt; Stack   Queue (队列子接口)  Deque BlockingQueue   Set (集合子接口)  HashSet: 2 LinkedHashSet: 3 TreeSet:　3     Map (Key-value)  HashMap: 1 LinkedHashMap： 3 TreeMap： 3    如何解释一个集合类（HashMap）的特点, 要解释那些东西?   这个集合类是谁的子类/接口
  这个集合类表示是的是一种什么数据结构
  这个集合类他的底层结构是什么(数组，链表，数组+链表)
  如果底层结构是数组，谈数组的默认初始容量，数组的扩容机制
  这个集合类是否有序(位序) 有序: 添加的位置是不是可以预期的
  这个集合类是否允许存储重复元素(二叉搜索树不允许有重复元素)]]></description>
</item><item>
    <title>Day29</title>
    <link>http://fengqigang.cn/posts/day29/</link>
    <pubDate>Wed, 05 May 2021 23:31:59 &#43;0800</pubDate>
    <author>Author</author>
    <guid>http://fengqigang.cn/posts/day29/</guid>
    <description><![CDATA[集合类的分类?  Collection  List (线性表子接口)  ArrayList: 1 LinkedList: 2 Vector -&gt; Stack   Queue (队列子接口)  Deque BlockingQueue   Set (集合子接口)  HashSet: 2 LinkedHashSet: 3 TreeSet:　3     Map (Key-value)  HashMap: 1 LinkedHashMap： 3 TreeMap： 3    如何解释一个集合类（HashMap）的特点, 要解释那些东西?   这个集合类是谁的子类/接口
  这个集合类表示是的是一种什么数据结构
  这个集合类他的底层结构是什么(数组，链表，数组+链表)
  如果底层结构是数组，谈数组的默认初始容量，数组的扩容机制
  这个集合类是否有序(位序) 有序: 添加的位置是不是可以预期的
  这个集合类是否允许存储重复元素(二叉搜索树不允许有重复元素)]]></description>
</item><item>
    <title>Day28</title>
    <link>http://fengqigang.cn/posts/day28/</link>
    <pubDate>Tue, 04 May 2021 23:45:09 &#43;0800</pubDate>
    <author>Author</author>
    <guid>http://fengqigang.cn/posts/day28/</guid>
    <description><![CDATA[1 10 -5 2 7 100 30 -10 -50 -25 -20 25 转换成二叉搜索树是什么样的? 左子树的所有节点的值均 小于 它的根节点
右子树的所有节点的值均 大于 它的根节点
The meaning of &lt;T extends Comparable &gt;? This means that the type parameter must support comparison with other instances of its own type , via the Comparable interface.
What is different between ? If you try to pass an array of unknow types of Comparable objects
one method will give you an error at compile time that this won&rsquo;t work,]]></description>
</item><item>
    <title>红黑树</title>
    <link>http://fengqigang.cn/posts/%E7%BA%A2%E9%BB%91%E6%A0%91/</link>
    <pubDate>Sun, 02 May 2021 23:35:24 &#43;0800</pubDate>
    <author>Author</author>
    <guid>http://fengqigang.cn/posts/%E7%BA%A2%E9%BB%91%E6%A0%91/</guid>
    <description><![CDATA[自平衡二叉搜索树与红黑树是什么关系? 自平衡二叉搜索树是 算法和逻辑
红黑树是 实现
什么是自平衡的二叉搜索树? 叶节点的层级差的绝对值不超过1
什么是 2-3-4 树? 在二叉查找树上进行了扩展，它允许有多个键(1~3)个
树保持完美平衡
子树比键值多一个
2-3-4树如何查找? 2-3-4树如何插入? 什么是二节点，三节点, 四节点? 1 个元素是二节点
2 个元素是三节点
3 个元素是四节点
2-3-4 树, 4结点如何分裂？ 对于 2-3-4 树，多个4结点如何分裂? 分裂结点的办法有哪些? 自底向上分裂
自上向底分裂 (遇到四节点(3个Key)先向上分裂，再向下添加)
2-3-4 树的实现? 将3结点转化成二叉树? 将4结点转化成二叉树? 把2-3-4树转化成红黑树? 把 2-3-4 树的3, 4节点分裂，把下移的结点或上移的结点的中间的边变为红色
2-3-4树转化成红黑树只能有一种情况吗? 什么是左倾红黑树? 就是在 2-3-4 树的3 节点分裂的时候，左元素下移，右元素上移]]></description>
</item></channel>
</rss>
