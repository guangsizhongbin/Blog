[{"categories":["java"],"content":"如何查看当前 java 版本? archlinux-jav status ","date":"2021-03-13","objectID":"/posts/java%E7%AC%AC%E4%B8%80%E7%AB%A0/:0:1","tags":["java"],"title":"Java第一章","uri":"/posts/java%E7%AC%AC%E4%B8%80%E7%AB%A0/"},{"categories":["java"],"content":"如何编写 Hello.java? public class Hello { public static void mian(String args[]){ System.out.println(\"Hello World!\"); } } ","date":"2021-03-13","objectID":"/posts/java%E7%AC%AC%E4%B8%80%E7%AB%A0/:0:2","tags":["java"],"title":"Java第一章","uri":"/posts/java%E7%AC%AC%E4%B8%80%E7%AB%A0/"},{"categories":["java"],"content":"public 定义的的class有什么特点? 类名称必须与文件名称保持一致 在一个 *.java 中只能有一个public class ","date":"2021-03-13","objectID":"/posts/java%E7%AC%AC%E4%B8%80%E7%AB%A0/:0:3","tags":["java"],"title":"Java第一章","uri":"/posts/java%E7%AC%AC%E4%B8%80%E7%AB%A0/"},{"categories":["java"],"content":"普通的class有什么特点? 类的名称可以和文件名不致， 但是生成的class定义的名称 一个*.java程序中可以同时存在多个class定义，编译后会分为不同的*.class文件 ","date":"2021-03-13","objectID":"/posts/java%E7%AC%AC%E4%B8%80%E7%AB%A0/:0:4","tags":["java"],"title":"Java第一章","uri":"/posts/java%E7%AC%AC%E4%B8%80%E7%AB%A0/"},{"categories":["java"],"content":"System.out.print 与 System.out.println 有什么区别? System.out.print 输出后不换行 System.out.println 输出后换行 ","date":"2021-03-13","objectID":"/posts/java%E7%AC%AC%E4%B8%80%E7%AB%A0/:0:5","tags":["java"],"title":"Java第一章","uri":"/posts/java%E7%AC%AC%E4%B8%80%E7%AB%A0/"},{"categories":["java"],"content":"类的命名规范是什么样的? 每一个单词的开关首字母大写 TestDemo ","date":"2021-03-13","objectID":"/posts/java%E7%AC%AC%E4%B8%80%E7%AB%A0/:0:6","tags":["java"],"title":"Java第一章","uri":"/posts/java%E7%AC%AC%E4%B8%80%E7%AB%A0/"},{"categories":["java"],"content":"CLASSPATH 与 JVM 有什么关系? 而 JVM 在运行的时候，需要通过 CLASSPATH 加载所需要的类 CLASSPATH 是指类的运行路径, 默认情况下 CLASSPATH 指向当前目录 ","date":"2021-03-13","objectID":"/posts/java%E7%AC%AC%E4%B8%80%E7%AB%A0/:0:7","tags":["java"],"title":"Java第一章","uri":"/posts/java%E7%AC%AC%E4%B8%80%E7%AB%A0/"},{"categories":["java"],"content":"PATH 与 CLASSPATH 的区别是什么? PATH 是操作系统的环境属性，指的是可以执行命令的程序路径。 CLASSPATH 是所有 *.class 文件的执行路径， Java 命令执行时将利用此路径加载所需要的 *.class 文件. ","date":"2021-03-13","objectID":"/posts/java%E7%AC%AC%E4%B8%80%E7%AB%A0/:0:8","tags":["java"],"title":"Java第一章","uri":"/posts/java%E7%AC%AC%E4%B8%80%E7%AB%A0/"},{"categories":["java"],"content":"Java 源程序文件的后缀和 Java字节码文件的后缀 分别是什么? 源程序文件: *.java 字节码文件: *.class ","date":"2021-03-13","objectID":"/posts/java%E7%AC%AC%E4%B8%80%E7%AB%A0/:0:9","tags":["java"],"title":"Java第一章","uri":"/posts/java%E7%AC%AC%E4%B8%80%E7%AB%A0/"},{"categories":["java"],"content":"Java Application 与 Java Applet 程序有什么区别? Java Applet 主要是在网页中嵌入的 Java 程序 Application 是指有 main 方法的程序 ","date":"2021-03-13","objectID":"/posts/java%E7%AC%AC%E4%B8%80%E7%AB%A0/:0:10","tags":["java"],"title":"Java第一章","uri":"/posts/java%E7%AC%AC%E4%B8%80%E7%AB%A0/"},{"categories":["鸟哥的私房菜"],"content":"什么是压缩的原理是什么? 压缩 : 如果数据为\"111…“共用100个, 压缩技术会记录为\"100个1\"而不是真的有100个1的位存在 ","date":"2021-03-11","objectID":"/posts/linux%E7%AC%AC%E5%85%AB%E7%AB%A0/:0:1","tags":["linux"],"title":"Linux第八章","uri":"/posts/linux%E7%AC%AC%E5%85%AB%E7%AB%A0/"},{"categories":["鸟哥的私房菜"],"content":"如何用 tar 备份 /etc (tar.gz)? 切换成 root 用户 time tar -zpcv -f /root/etc.tar.gz /etc -z, –gzip, –gunzip, –ungzip Filter the archive through gzip -p, –preserve-permissions, –same-permissions extract information about file permissions(default for superuser) -c, –create Cteate a new archive. Arguments supply the names of the files to be archived. Directories are archived recursively, unless the –no-recursion option is given. -v, –verbose Verbosely list files processed. Each instance of this option on the command line increases the verbosity level by one. The maximum verbosity level is 3. -f, –file=ARCHIVE Use archive file or device ARCHIVE ","date":"2021-03-11","objectID":"/posts/linux%E7%AC%AC%E5%85%AB%E7%AB%A0/:0:2","tags":["linux"],"title":"Linux第八章","uri":"/posts/linux%E7%AC%AC%E5%85%AB%E7%AB%A0/"},{"categories":["鸟哥的私房菜"],"content":"用 tar 备份时， .tar.gz, tar.bz2, tar.xz 分别要对应什么参数? .tar.gz time tar -zpcv -f /root/etc.tar.gz /etc -z, –gzip, –gunzip, –unzip Filter the archive through gzip. tar.bz2 time tar -jpcv -f /root/etc.tar.bz2 /etc -j, –bzip2 Filter the archive through bzip2 tar.xz time tar -Jpcv -f /root/etc.tar.xz /etc -J, –xz Filter the archive through xz ","date":"2021-03-11","objectID":"/posts/linux%E7%AC%AC%E5%85%AB%E7%AB%A0/:0:3","tags":["linux"],"title":"Linux第八章","uri":"/posts/linux%E7%AC%AC%E5%85%AB%E7%AB%A0/"},{"categories":["鸟哥的私房菜"],"content":"如何查看 /root/etc.tar.bz2 内的文件? tar -jtv -f /root/etc.tar.bz2 -t, –list List the contents of an archive. Arguments are optional. When given, they specify the names of the members to list. ","date":"2021-03-11","objectID":"/posts/linux%E7%AC%AC%E5%85%AB%E7%AB%A0/:0:4","tags":["linux"],"title":"Linux第八章","uri":"/posts/linux%E7%AC%AC%E5%85%AB%E7%AB%A0/"},{"categories":["鸟哥的私房菜"],"content":"为什么查看 /root/etc.tar.bz2 里面的文件，都没有根目录? 如果拿掉根目录，假设备份数据在 /tmp 解开，那么解压缩的文件就会变成 /tmp/etc/ 如果没有拿掉根目录,解压缩的文件名就会是绝对路径，数据一定会放置到 /etc 中去 ","date":"2021-03-11","objectID":"/posts/linux%E7%AC%AC%E5%85%AB%E7%AB%A0/:0:5","tags":["linux"],"title":"Linux第八章","uri":"/posts/linux%E7%AC%AC%E5%85%AB%E7%AB%A0/"},{"categories":["鸟哥的私房菜"],"content":"tar -jcvf filename 和 tar -jvfc filename 是一样的吗? 不一样 -jvfc 会导致产生的文件名变成 c 最好将 -f filename 与其他选项项独立出来 ","date":"2021-03-11","objectID":"/posts/linux%E7%AC%AC%E5%85%AB%E7%AB%A0/:0:6","tags":["linux"],"title":"Linux第八章","uri":"/posts/linux%E7%AC%AC%E5%85%AB%E7%AB%A0/"},{"categories":["鸟哥的私房菜"],"content":"如何将 /root/etc.tar.bz2 解压到 /tmp 下? tar -jxv -f /root/etc.tar.bz2 -C /tmp -C, –directory=DIR Change to DIR before performing any operations. This option is order0sensitive, i.e. it affects all options that follow. -j, –bzip2 Filter the archive through bzip2 -v, –verbose Verbosely list files processed. Each instance of this option on the command line increases the verbosity level by one. The maximum verbosity level is 3. ","date":"2021-03-11","objectID":"/posts/linux%E7%AC%AC%E5%85%AB%E7%AB%A0/:0:7","tags":["linux"],"title":"Linux第八章","uri":"/posts/linux%E7%AC%AC%E5%85%AB%E7%AB%A0/"},{"categories":["鸟哥的私房菜"],"content":"如何将 /root/etc.tar.bz2 中的 etc/shadow 解压出来? 找一找看有没有 shadow tar -jtv -f /root/etc.tar.bz2 | grep ‘shadow’ -j, –bzip2 Filter the archive through bzip2 -t, –list List the contents of an archive. Arguments are optional. When given, they specify the names of the members to list. -v, –verbose Verbosely list files processed. Each instance of this option on the command line increases the verbosity level by one. The maximum verbosity level is 3. 解压 etc/shadow tar -jxv -f /root/etc.tar.bz2 etc/shadow ","date":"2021-03-11","objectID":"/posts/linux%E7%AC%AC%E5%85%AB%E7%AB%A0/:0:8","tags":["linux"],"title":"Linux第八章","uri":"/posts/linux%E7%AC%AC%E5%85%AB%E7%AB%A0/"},{"categories":["鸟哥的私房菜"],"content":"若想用 tar 打包 /etc /root 但不想打包 /root/etc* 开头的文件，该如何做? –exclude= tar -jcv -f /root/system.tar.bz2 –exclude=/root/etc* –exclude=/root/system.tar.bz2 /etc /root 不包括 /root/etc, 同时不能包括自己 ","date":"2021-03-11","objectID":"/posts/linux%E7%AC%AC%E5%85%AB%E7%AB%A0/:0:9","tags":["linux"],"title":"Linux第八章","uri":"/posts/linux%E7%AC%AC%E5%85%AB%E7%AB%A0/"},{"categories":["鸟哥的私房菜"],"content":"如何用 tar 备份 /etc/passwd 中比 /etc/passwd 还要新的文件? 找出比 /etc/passwd 还要新的文件 find /etc -newer /etc/passwd 查看 /etc/passwd 的 mtime 打包 tar -jcv -f /root/etc.newer.then.passwd.tar.bz2 –newer-mtime=“2021/03/01” /etc/* 显示出文件 tar -jtv -f /root/etc.newer.then.passwd.tar.bz2 | grep -v “/$” 调出非 / 的文件名 ","date":"2021-03-11","objectID":"/posts/linux%E7%AC%AC%E5%85%AB%E7%AB%A0/:0:10","tags":["linux"],"title":"Linux第八章","uri":"/posts/linux%E7%AC%AC%E5%85%AB%E7%AB%A0/"},{"categories":["鸟哥的私房菜"],"content":"如何将 /home, /root, /etc 备份到磁带机 /dev/st0 上? tar -cv -f /dev/st0 /home /root /etc ","date":"2021-03-11","objectID":"/posts/linux%E7%AC%AC%E5%85%AB%E7%AB%A0/:0:11","tags":["linux"],"title":"Linux第八章","uri":"/posts/linux%E7%AC%AC%E5%85%AB%E7%AB%A0/"},{"categories":["鸟哥的私房菜"],"content":"如何用 tar 一边将 /etc 整个目录打包一边在 /tmp 解开? tar -cvf - /etc | tar -xvf - - 表示被打包的文件 ","date":"2021-03-11","objectID":"/posts/linux%E7%AC%AC%E5%85%AB%E7%AB%A0/:0:12","tags":["linux"],"title":"Linux第八章","uri":"/posts/linux%E7%AC%AC%E5%85%AB%E7%AB%A0/"},{"categories":["鸟哥的私房菜"],"content":"如何用 tar 对系统备份? /etc/ (配置文件) /home/ (使用者的主文件夹) /var/spool/mail/ (系统中，所有账号的邮件信箱) /var/spool/cron/ (所有账号的工作排成配置文件) /root (系统管理员的主文件夹) 设置备份数据的目录与权限 mkdir /backups chmod 700 /backups ls -d /backups 备份 tar -jcv -f /bakups/backup-system-20210312.tar.bz2 /etc /home /var/spool/mail /var/spool/cron /root ","date":"2021-03-11","objectID":"/posts/linux%E7%AC%AC%E5%85%AB%E7%AB%A0/:0:13","tags":["linux"],"title":"Linux第八章","uri":"/posts/linux%E7%AC%AC%E5%85%AB%E7%AB%A0/"},{"categories":["鸟哥的私房菜"],"content":"如何将 ** /etc/passwd ** 备份到 ** /tmp/passwd.back ** 当中? dd if=/etc/passwd of=/tmp/passwd.back ","date":"2021-03-11","objectID":"/posts/linux%E7%AC%AC%E5%85%AB%E7%AB%A0/:0:14","tags":["linux"],"title":"Linux第八章","uri":"/posts/linux%E7%AC%AC%E5%85%AB%E7%AB%A0/"},{"categories":["鸟哥的私房菜"],"content":"如何将 ** /boot ** 整个文件系统通过 dd 备份下来? df -h /boot dd if=/dev/sda1 of=/tmp/vda1.img ls -lh /tmp/vda2.img 文件大小 会跟整颗磁盘的最大量一样大 ","date":"2021-03-11","objectID":"/posts/linux%E7%AC%AC%E5%85%AB%E7%AB%A0/:0:15","tags":["linux"],"title":"Linux第八章","uri":"/posts/linux%E7%AC%AC%E5%85%AB%E7%AB%A0/"},{"categories":["鸟哥的私房菜"],"content":"为什么硬盘在分区后需要进行格式化呢? 因为每个操作系统所设置的文件属性/权限并不相同，为了存放这些文件所需的数据，因此就需要将分区进行格式化, 以成为操作系统能够利用的文件系统格式。 ","date":"2021-03-06","objectID":"/posts/linux%E7%AC%AC%E4%B8%83%E7%AB%A0/:0:1","tags":["linux"],"title":"Linux第七章","uri":"/posts/linux%E7%AC%AC%E4%B8%83%E7%AB%A0/"},{"categories":["鸟哥的私房菜"],"content":"在ext2中, superblock, inode和block是什么样的关系? superblock : 记录此 filesystem的整体信息，包括inode/block的总量、使用量、剩余量，以及文件系统的格式与相关信息。 inode: 记录文件的属性，一个文件占用一个inode, 同时记录此文件的数据所在的block号码。 block: 实际记录文件的内容，若文件太大时，会占用多个block ","date":"2021-03-06","objectID":"/posts/linux%E7%AC%AC%E4%B8%83%E7%AB%A0/:0:2","tags":["linux"],"title":"Linux第七章","uri":"/posts/linux%E7%AC%AC%E4%B8%83%E7%AB%A0/"},{"categories":["鸟哥的私房菜"],"content":"为什么在window系统下常听到需要磁盘整理？ 如U盘，其文件格式是FAT, 这种文件格式没有inode存在，因此FAT没法将这个文件的所有block在一开始就读取出来 其采取的方法是这样的 当数据过于离散的时候，读取一个文件有可能要转好几圈。 ","date":"2021-03-06","objectID":"/posts/linux%E7%AC%AC%E4%B8%83%E7%AB%A0/:0:3","tags":["linux"],"title":"Linux第七章","uri":"/posts/linux%E7%AC%AC%E4%B8%83%E7%AB%A0/"},{"categories":["鸟哥的私房菜"],"content":"若Ext2文件系统使用4K block, 而该文件系统中有10000个小文件，每个文件大小均为50Bytes, 请问此时磁盘会浪费多少容量? 在Ext2文件系统中一个block仅能容纳一个文件， 则一个文件将浪费4096 - 50 = 4046 Bytes. 4046 * 10000 / 1024 / 1024 = 38. 58MB ","date":"2021-03-06","objectID":"/posts/linux%E7%AC%AC%E4%B8%83%E7%AB%A0/:0:4","tags":["linux"],"title":"Linux第七章","uri":"/posts/linux%E7%AC%AC%E4%B8%83%E7%AB%A0/"},{"categories":["鸟哥的私房菜"],"content":"如何找出目前系统有被格式化的设备? blkid **** locate/print block device attributes **** ","date":"2021-03-06","objectID":"/posts/linux%E7%AC%AC%E4%B8%83%E7%AB%A0/:0:5","tags":["linux"],"title":"Linux第七章","uri":"/posts/linux%E7%AC%AC%E4%B8%83%E7%AB%A0/"},{"categories":["鸟哥的私房菜"],"content":"每个inode大小均固定为128bytes, 而inode记录一个block号码要花掉4byte, 假设一个文件有400MB, 且每个block为4KB，那么至少也要10万条block号码的记录，inode哪有这么多的可以记录的信息？它采用了什么样的方法解决这个问题? 系统将indoe 记录的block号码的区域定义为12个直接，一个间接，一个双间接，与一个三间接记录区 则若一个block为1KB, 12个直接: 12 x 1KB = 12KB 1个间接: 256 x 1KB = 256KB 每条block号码的记录会花去 4bytes, 因此1KB 的大小能记录256条记录 1个双间接: 256 x 256 x 1KB = $256^2$ KB 1个三间接: 256 x 256 x 256 x 1KB = $256^3$ KB 即: 当文件系统将block格式化为1K大小时，能够容纳最大文件为16GB ","date":"2021-03-06","objectID":"/posts/linux%E7%AC%AC%E4%B8%83%E7%AB%A0/:0:6","tags":["linux"],"title":"Linux第七章","uri":"/posts/linux%E7%AC%AC%E4%B8%83%E7%AB%A0/"},{"categories":["鸟哥的私房菜"],"content":"若在Linux下的ext2文件系统新建一个目录，ext2会做什么？ ext2 至少会分配一个 inode 与至少一块 block 给该目录 inode 记录该目录的相关权限与属性, 并记录分配到的那块block号码 block 则是记录在这个目录下的文件名与该文件名占用的 inode 号码数据 ","date":"2021-03-06","objectID":"/posts/linux%E7%AC%AC%E4%B8%83%E7%AB%A0/:0:7","tags":["linux"],"title":"Linux第七章","uri":"/posts/linux%E7%AC%AC%E4%B8%83%E7%AB%A0/"},{"categories":["鸟哥的私房菜"],"content":"如何查看root目录内的文件所占用的inode号码? ls -li -i, –inode print the index number of each file ","date":"2021-03-06","objectID":"/posts/linux%E7%AC%AC%E4%B8%83%E7%AB%A0/:0:8","tags":["linux"],"title":"Linux第七章","uri":"/posts/linux%E7%AC%AC%E4%B8%83%E7%AB%A0/"},{"categories":["鸟哥的私房菜"],"content":"为什么这些文件夹的大小都是1024的倍数? 因为 /dev/sda2 采用的 Block size 为 4096 ","date":"2021-03-06","objectID":"/posts/linux%E7%AC%AC%E4%B8%83%E7%AB%A0/:0:9","tags":["linux"],"title":"Linux第七章","uri":"/posts/linux%E7%AC%AC%E4%B8%83%E7%AB%A0/"},{"categories":["鸟哥的私房菜"],"content":"为什么 /proc 文件夹的大小为0? 因为这个目录是一个虚拟文件系统(virtual filestem). 它放置的数据都是在内存当中。 因为这个目录下的数据都是在内存当中，所以本身不占任何硬盘空间。 ","date":"2021-03-06","objectID":"/posts/linux%E7%AC%AC%E4%B8%83%E7%AB%A0/:0:10","tags":["linux"],"title":"Linux第七章","uri":"/posts/linux%E7%AC%AC%E4%B8%83%E7%AB%A0/"},{"categories":["鸟哥的私房菜"],"content":"若在ext2下新建一个100KB的文件，block为4KB, ext2会怎么做? 在linux下的ext2新建一个文件时，ext2分分配一个inode与相对于该文件大小的block数量给该文件。 当文件为100KB时，linux会分配一个 inode, 与25个 block来记录数据 但inode仅有12个直接指向 block记录 ，因此还要多一个block间接指向另外的13个 block记录 ","date":"2021-03-06","objectID":"/posts/linux%E7%AC%AC%E4%B8%83%E7%AB%A0/:0:11","tags":["linux"],"title":"Linux第七章","uri":"/posts/linux%E7%AC%AC%E4%B8%83%E7%AB%A0/"},{"categories":["鸟哥的私房菜"],"content":"ext2是如何读取 /etc/passwd这个文件的? **/** 的 inode: 通过挂载点的信息找到inode号码为2的根目录inode, 且 inode 规范的权限让我们可以读该block的内容(有r与x) **/** 的 block: 通过上个步骤取得block的号码，并找到该内容有 /etc inode号码(5767169) **etc/** 的 inode: 读取5767169号 inode 得知feng具有r与x权限，因此可以读取 etc/ 的block内容 **etc/** 的 block: 经过上个步骤取得block号码，并找到有 passwd 文件的 inode 号码 (5775935) passwd 的inode: 读取 5775935 号inode得知feng具有r的权限，因此可以读取passwd的内容 passwd 的block: 最后将该block内容的数据读出来 ","date":"2021-03-06","objectID":"/posts/linux%E7%AC%AC%E4%B8%83%E7%AB%A0/:0:12","tags":["linux"],"title":"Linux第七章","uri":"/posts/linux%E7%AC%AC%E4%B8%83%E7%AB%A0/"},{"categories":["鸟哥的私房菜"],"content":"如何需要新建一个文件或目录时，Ext2是如何处理的呢? 先确定用户对欲添加文件的目录是否具有w与x的权限，若有的话才能添加 根据 inode bitmap 找到没有使用的 inode 号码， 并将新文件的权限/属性写入 根据 block bit map 找到没有使用的 block 号码， 并将实际的数据写入 block 中， 且更新 inode 的 block 指向数据 将刚才写入的 inode 与 block 数据同步更新 inode bitmap 与 block bitmap, 并更新superblock的内容 ","date":"2021-03-06","objectID":"/posts/linux%E7%AC%AC%E4%B8%83%E7%AB%A0/:0:13","tags":["linux"],"title":"Linux第七章","uri":"/posts/linux%E7%AC%AC%E4%B8%83%E7%AB%A0/"},{"categories":["鸟哥的私房菜"],"content":"若在新建一个文件的时候，仅写入 inode table 及 data block ， 但因突然停电 inode bitmap 与 block bitmap, superblock都没有更新，此时linux是如何解决这个问题的? 文件系统中会规划出一个块，该块专门记录写入或修订文件时的步骤 预备: 当系统要写入一个文件时，会先在日志记录块中记录某个文件准备要写入的信息 实际写入: 开始写入文件的权限与数据；开始更新meta data的数据 结束: 完成数据与 meta data 的更新后，在日志记录块当中完成文件的记录 ","date":"2021-03-06","objectID":"/posts/linux%E7%AC%AC%E4%B8%83%E7%AB%A0/:0:14","tags":["linux"],"title":"Linux第七章","uri":"/posts/linux%E7%AC%AC%E4%B8%83%E7%AB%A0/"},{"categories":["鸟哥的私房菜"],"content":"/ /. /.. 是什么关系? / /. /.. 三个文件所对应的 inode 是2, 它们都是相同的，所以这几个文件是相同的 ","date":"2021-03-06","objectID":"/posts/linux%E7%AC%AC%E4%B8%83%E7%AB%A0/:0:15","tags":["linux"],"title":"Linux第七章","uri":"/posts/linux%E7%AC%AC%E4%B8%83%E7%AB%A0/"},{"categories":["鸟哥的私房菜"],"content":"如何将系统内所有的文件系统列出来? df ","date":"2021-03-06","objectID":"/posts/linux%E7%AC%AC%E4%B8%83%E7%AB%A0/:0:16","tags":["linux"],"title":"Linux第七章","uri":"/posts/linux%E7%AC%AC%E4%B8%83%E7%AB%A0/"},{"categories":["鸟哥的私房菜"],"content":"如何将系统内所有的文件系统更出来同时容量结果以易读的容量格式显示出来? df -h -h, –human-readable print sizes in powers of 1024 ","date":"2021-03-06","objectID":"/posts/linux%E7%AC%AC%E4%B8%83%E7%AB%A0/:0:17","tags":["linux"],"title":"Linux第七章","uri":"/posts/linux%E7%AC%AC%E4%B8%83%E7%AB%A0/"},{"categories":["鸟哥的私房菜"],"content":"如何将系统内所有特殊文件格式入名称及名称都列出来, 如 /proc 挂载点的文件? df -aT -a, –all include pseudo, duplicate, inaccessible file systems -T, –print-type print file system type ","date":"2021-03-06","objectID":"/posts/linux%E7%AC%AC%E4%B8%83%E7%AB%A0/:0:18","tags":["linux"],"title":"Linux第七章","uri":"/posts/linux%E7%AC%AC%E4%B8%83%E7%AB%A0/"},{"categories":["鸟哥的私房菜"],"content":"如何将 /etc 下面的可用的磁盘容量以容量以易读的容量格式显示? df -h /etc ","date":"2021-03-06","objectID":"/posts/linux%E7%AC%AC%E4%B8%83%E7%AB%A0/:0:19","tags":["linux"],"title":"Linux第七章","uri":"/posts/linux%E7%AC%AC%E4%B8%83%E7%AB%A0/"},{"categories":["鸟哥的私房菜"],"content":"如何将目前各个分区当中可用的 inode 数量列出? df -ih ","date":"2021-03-06","objectID":"/posts/linux%E7%AC%AC%E4%B8%83%E7%AB%A0/:0:20","tags":["linux"],"title":"Linux第七章","uri":"/posts/linux%E7%AC%AC%E4%B8%83%E7%AB%A0/"},{"categories":["鸟哥的私房菜"],"content":"如何列出目录下所有目录的容量，包括自己? du ","date":"2021-03-06","objectID":"/posts/linux%E7%AC%AC%E4%B8%83%E7%AB%A0/:0:21","tags":["linux"],"title":"Linux第七章","uri":"/posts/linux%E7%AC%AC%E4%B8%83%E7%AB%A0/"},{"categories":["鸟哥的私房菜"],"content":"如何列出目录下所有文件的容量? du -a -a, –all write counts for all files, not just directories ","date":"2021-03-06","objectID":"/posts/linux%E7%AC%AC%E4%B8%83%E7%AB%A0/:0:22","tags":["linux"],"title":"Linux第七章","uri":"/posts/linux%E7%AC%AC%E4%B8%83%E7%AB%A0/"},{"categories":["鸟哥的私房菜"],"content":"如何检查根目录下面每个目录所占用的容量? sudo du -sm /* -s, –summarize display only a total for each argument -m like –block-size=1M ","date":"2021-03-06","objectID":"/posts/linux%E7%AC%AC%E4%B8%83%E7%AB%A0/:0:23","tags":["linux"],"title":"Linux第七章","uri":"/posts/linux%E7%AC%AC%E4%B8%83%E7%AB%A0/"},{"categories":["鸟哥的私房菜"],"content":"hard link的原理是什么样的? 因为: 每个文件都会占用一个 inode, 文件内容由 inode 的记录来指向 想要读取该文件，必须要经过目录记录的文件名来指向到正确的 inode 号码才能读取 文件名只与目录有关，但是文件内容则与 inode 有关 1 和 2 都是通过自己的目录的 inode 指定的 block 找到两个不同的文件名，最终都可以通过 real 的 指向的 inode 来读取数据 ","date":"2021-03-06","objectID":"/posts/linux%E7%AC%AC%E4%B8%83%E7%AB%A0/:0:24","tags":["linux"],"title":"Linux第七章","uri":"/posts/linux%E7%AC%AC%E4%B8%83%E7%AB%A0/"},{"categories":["鸟哥的私房菜"],"content":"可以用 hard link制作目录吗? 为什么呢? 不行 hard link 链接到目录时，链接的数据需要连同被链接目录下面的所有数据都创建链接，会造成环境相当大的复杂度。 ","date":"2021-03-06","objectID":"/posts/linux%E7%AC%AC%E4%B8%83%E7%AB%A0/:0:25","tags":["linux"],"title":"Linux第七章","uri":"/posts/linux%E7%AC%AC%E4%B8%83%E7%AB%A0/"},{"categories":["鸟哥的私房菜"],"content":"symbolic link的原理是什么样的? 两个文件指向不同的 inode , 所以这是两个不同的文件 456.md 有6 Bytes，是因为 456.md 占6个Bytes. Symbolic Link 相当于 Window 的快捷方式 ","date":"2021-03-06","objectID":"/posts/linux%E7%AC%AC%E4%B8%83%E7%AB%A0/:0:26","tags":["linux"],"title":"Linux第七章","uri":"/posts/linux%E7%AC%AC%E4%B8%83%E7%AB%A0/"},{"categories":["鸟哥的私房菜"],"content":"在创建一个新的目录的时候，它的默认link是多少? 新的目录会有 /video , /video/. , /video/.. 其中 /video 与 /video/. 相同 /video 指代上一目录 因此， 在创建新目录时, 新目录的 link 为2, 而上层目录的 link 数会增加1 ","date":"2021-03-06","objectID":"/posts/linux%E7%AC%AC%E4%B8%83%E7%AB%A0/:0:27","tags":["linux"],"title":"Linux第七章","uri":"/posts/linux%E7%AC%AC%E4%B8%83%E7%AB%A0/"},{"categories":["鸟哥的私房菜"],"content":"如何列出当前系统上的所有磁盘列表? lsblk list block device ","date":"2021-03-06","objectID":"/posts/linux%E7%AC%AC%E4%B8%83%E7%AB%A0/:0:28","tags":["linux"],"title":"Linux第七章","uri":"/posts/linux%E7%AC%AC%E4%B8%83%E7%AB%A0/"},{"categories":["鸟哥的私房菜"],"content":"如何只列出 /dev/sda 设备内的所有数据的完整文件名? lsblk -ip /dev/sda -i, –ascii Use ASCII characters for tree formatting -p, –paths Print full device paths ","date":"2021-03-06","objectID":"/posts/linux%E7%AC%AC%E4%B8%83%E7%AB%A0/:0:29","tags":["linux"],"title":"Linux第七章","uri":"/posts/linux%E7%AC%AC%E4%B8%83%E7%AB%A0/"},{"categories":["鸟哥的私房菜"],"content":"什么是设备的UUID?如何获取? UUID 是全域单一识别码 (universally unique identifier) Linux会将系统内的所有设备都给予一个独一无二的识别码, 这个识别码就可以拿来作为挂载或者是使用这个设备/文件系统之用了 ","date":"2021-03-06","objectID":"/posts/linux%E7%AC%AC%E4%B8%83%E7%AB%A0/:0:30","tags":["linux"],"title":"Linux第七章","uri":"/posts/linux%E7%AC%AC%E4%B8%83%E7%AB%A0/"},{"categories":["鸟哥的私房菜"],"content":"如何输出 /dev/sda 的分区信息? sudo parted /dev/sda print print Display the partition table. ","date":"2021-03-06","objectID":"/posts/linux%E7%AC%AC%E4%B8%83%E7%AB%A0/:0:31","tags":["linux"],"title":"Linux第七章","uri":"/posts/linux%E7%AC%AC%E4%B8%83%E7%AB%A0/"},{"categories":["鸟哥的私房菜"],"content":"MBR 分区表和 GPT 分区表使用什么工具来分区? MBR 分区表使用 fdisk GPT 分区表使用 gdisk ","date":"2021-03-06","objectID":"/posts/linux%E7%AC%AC%E4%B8%83%E7%AB%A0/:0:32","tags":["linux"],"title":"Linux第七章","uri":"/posts/linux%E7%AC%AC%E4%B8%83%E7%AB%A0/"},{"categories":["鸟哥的私房菜"],"content":"如何将 /vdb 分成GPT分区表，创建 /vdb1 和 /vdb2 各10G的ext4格式的分区? 建立 GPT 分区表 分区 格式化 ","date":"2021-03-06","objectID":"/posts/linux%E7%AC%AC%E4%B8%83%E7%AB%A0/:0:33","tags":["linux"],"title":"Linux第七章","uri":"/posts/linux%E7%AC%AC%E4%B8%83%E7%AB%A0/"},{"categories":["鸟哥的私房菜"],"content":"如何挂载centos光盘到 /data/cdrom 吗? mount /dev/sr0 /data/cdrom ","date":"2021-03-06","objectID":"/posts/linux%E7%AC%AC%E4%B8%83%E7%AB%A0/:0:34","tags":["linux"],"title":"Linux第七章","uri":"/posts/linux%E7%AC%AC%E4%B8%83%E7%AB%A0/"},{"categories":["鸟哥的私房菜"],"content":"如何找出 /dev/vdb1 的UUID, 并以UUID挂载到/data/xfs 找出UUID 挂载 ","date":"2021-03-06","objectID":"/posts/linux%E7%AC%AC%E4%B8%83%E7%AB%A0/:0:35","tags":["linux"],"title":"Linux第七章","uri":"/posts/linux%E7%AC%AC%E4%B8%83%E7%AB%A0/"},{"categories":["鸟哥的私房菜"],"content":"如何将 /var 挂载到另外一个目录去，而不是挂载整个 /? sudo mount –bind /var /data/var -B, –bind Remount a subtree somewhere else (so that its contents are available in both places). ","date":"2021-03-06","objectID":"/posts/linux%E7%AC%AC%E4%B8%83%E7%AB%A0/:0:36","tags":["linux"],"title":"Linux第七章","uri":"/posts/linux%E7%AC%AC%E4%B8%83%E7%AB%A0/"},{"categories":["鸟哥的私房菜"],"content":"如何将 /data/var 设备卸载? umount /data/var ","date":"2021-03-06","objectID":"/posts/linux%E7%AC%AC%E4%B8%83%E7%AB%A0/:0:37","tags":["linux"],"title":"Linux第七章","uri":"/posts/linux%E7%AC%AC%E4%B8%83%E7%AB%A0/"},{"categories":["鸟哥的私房菜"],"content":"假设要将 /dev/nvme0n1p1 每次开机才自动挂载到 /data/var, 该如何进行? 填写 /etc/fstab 测试是否能载入 ","date":"2021-03-06","objectID":"/posts/linux%E7%AC%AC%E4%B8%83%E7%AB%A0/:0:38","tags":["linux"],"title":"Linux第七章","uri":"/posts/linux%E7%AC%AC%E4%B8%83%E7%AB%A0/"},{"categories":["鸟哥的私房菜"],"content":"万一 /etc/fstab 输入的数据错误， 导致无法顺利开机成功，而进入单人维护模式当中， / 是 read only, 无法修改 /etc/fstab , 该怎么办? /etc/fstab 是开机时的配置文件，不过，实际 filesystem 的挂载是记录到 /etc/mtab 与 /proc/mounts 这两个文件当中的, 每次在更动 filestem 的挂载时，也会同时更动这两个文件. mount -n -o remount, rw / -n, –no-mtab Mount without writing in /etc/mtab. This is necessary for example when /etc is on a read-only filesystem. -o, –options opts Use the specified mount option. THe opts argument is a comma-separeated list. remount Attempt to remount an already-mounted filesystem. This is commonly used to change the mount flags for filesystem, especially to make a readonly filesystem writable. ","date":"2021-03-06","objectID":"/posts/linux%E7%AC%AC%E4%B8%83%E7%AB%A0/:0:39","tags":["linux"],"title":"Linux第七章","uri":"/posts/linux%E7%AC%AC%E4%B8%83%E7%AB%A0/"},{"categories":["鸟哥的私房菜"],"content":"如何创建一个 512M 的文件在 /tmp 下? dd if=/dev/zero of=/tmp/512 bs=1M count=512 bs=BYTES read and write up to BYTES bytes at a time(default: 512); overrides ibs and obs count=N copy only N input blocks ","date":"2021-03-06","objectID":"/posts/linux%E7%AC%AC%E4%B8%83%E7%AB%A0/:0:40","tags":["linux"],"title":"Linux第七章","uri":"/posts/linux%E7%AC%AC%E4%B8%83%E7%AB%A0/"},{"categories":["鸟哥的私房菜"],"content":"如何在原本的分区不更动原有的环境下制作出一个新的分区? 注意一开始就要使用root用户 新创建一个分区, 假设是512M的文件 dd if=/dev/zero of=/tmp/512 bs=1M count=512 格式化 mkfs.xfs -f /tmp/512 挂载 mount -o loop UUID=“6fcbfc5b-f7b6-4e11-a845-adadb3d4dce0” /mnt 查看是否挂载上 df /mnt ","date":"2021-03-06","objectID":"/posts/linux%E7%AC%AC%E4%B8%83%E7%AB%A0/:0:41","tags":["linux"],"title":"Linux第七章","uri":"/posts/linux%E7%AC%AC%E4%B8%83%E7%AB%A0/"},{"categories":["鸟哥的私房菜"],"content":"** swap ** 分区是干什么用的? CPU 所读取的数据都来自于内存，那当内存不足的时候，为了让后续的程序可以顺利的运行, 因此在内存中暂时不使用的程序与数据就会被挪 swap 中了。 此时内存就会空出来给需要执行的程序载入。 由于 swap 是用磁盘来暂时放置内存中的信息, 所以用到 swap 时, 主机磁盘灯就会开始闪个不停。 ","date":"2021-03-06","objectID":"/posts/linux%E7%AC%AC%E4%B8%83%E7%AB%A0/:0:42","tags":["linux"],"title":"Linux第七章","uri":"/posts/linux%E7%AC%AC%E4%B8%83%E7%AB%A0/"},{"categories":["鸟哥的私房菜"],"content":"如何分出 512M 磁盘分区作为 swap ? 分区 创建 swap 格式 观察并载入 ","date":"2021-03-06","objectID":"/posts/linux%E7%AC%AC%E4%B8%83%E7%AB%A0/:0:43","tags":["linux"],"title":"Linux第七章","uri":"/posts/linux%E7%AC%AC%E4%B8%83%E7%AB%A0/"},{"categories":["鸟哥的私房菜"],"content":"如何使用文件创建 swap (/home/feng/swap)下 dd if=/dev/zero of=/home/feng/swap bs=1M count=128 mkswap /tmp/feng/swap swapon /tmp/feng/swap swapon -s ","date":"2021-03-06","objectID":"/posts/linux%E7%AC%AC%E4%B8%83%E7%AB%A0/:0:44","tags":["linux"],"title":"Linux第七章","uri":"/posts/linux%E7%AC%AC%E4%B8%83%E7%AB%A0/"},{"categories":["鸟哥的私房菜"],"content":"如何取消掉 swap , 并设置自动启用? 设置 /etc/fstab swapoff /home/feng/swap ","date":"2021-03-06","objectID":"/posts/linux%E7%AC%AC%E4%B8%83%E7%AB%A0/:0:45","tags":["linux"],"title":"Linux第七章","uri":"/posts/linux%E7%AC%AC%E4%B8%83%E7%AB%A0/"},{"categories":["鸟哥的私房菜"],"content":"为什么 4Bytes 的文件要占用4K的容量? 整个文件系统中包括 superblock , indoe , table与其他中介数据都会浪费磁盘容量. crontab 虽然只有 4Bytes, 但它会用整个 block (每个block为4K) ","date":"2021-03-06","objectID":"/posts/linux%E7%AC%AC%E4%B8%83%E7%AB%A0/:0:46","tags":["linux"],"title":"Linux第七章","uri":"/posts/linux%E7%AC%AC%E4%B8%83%E7%AB%A0/"},{"categories":["鸟哥的私房菜"],"content":"如何回到之前的目录？ cd - ","date":"2021-03-02","objectID":"/posts/linux%E7%AC%AC%E5%85%AD%E7%AB%A0/:0:1","tags":["linux"],"title":"Linux第六章","uri":"/posts/linux%E7%AC%AC%E5%85%AD%E7%AB%A0/"},{"categories":["鸟哥的私房菜"],"content":"如何显示其正确的完整路径，而不是其链接的数据显示? pwd -P ","date":"2021-03-02","objectID":"/posts/linux%E7%AC%AC%E5%85%AD%E7%AB%A0/:0:2","tags":["linux"],"title":"Linux第六章","uri":"/posts/linux%E7%AC%AC%E5%85%AD%E7%AB%A0/"},{"categories":["鸟哥的私房菜"],"content":"如何创建一次创建 test1/test2/test3/test4 这样的目录，/test1~4均未创建? mkdir -p test1/test2/test3/test4 -p –parents: no error if existing, make parent directories as needed. ","date":"2021-03-02","objectID":"/posts/linux%E7%AC%AC%E5%85%AD%E7%AB%A0/:0:3","tags":["linux"],"title":"Linux第六章","uri":"/posts/linux%E7%AC%AC%E5%85%AD%E7%AB%A0/"},{"categories":["鸟哥的私房菜"],"content":"如何创建一个权限为rwx–x–x的目录test2? mkdir -m 711 test2 -m –mode=MODE: set file mode (as in chomd), not a=rwx - umask ","date":"2021-03-02","objectID":"/posts/linux%E7%AC%AC%E5%85%AD%E7%AB%A0/:0:4","tags":["linux"],"title":"Linux第六章","uri":"/posts/linux%E7%AC%AC%E5%85%AD%E7%AB%A0/"},{"categories":["鸟哥的私房菜"],"content":"如何在任何目录均可执行 /root 下面的命令? PATH = “${PATH}:/root” ","date":"2021-03-02","objectID":"/posts/linux%E7%AC%AC%E5%85%AD%E7%AB%A0/:0:5","tags":["linux"],"title":"Linux第六章","uri":"/posts/linux%E7%AC%AC%E5%85%AD%E7%AB%A0/"},{"categories":["鸟哥的私房菜"],"content":"如何复制 /var/log/wtmp文件到 ~/wtmp_2, 并且它的文件权限一模一样? cp -a -a, –archive ","date":"2021-03-02","objectID":"/posts/linux%E7%AC%AC%E5%85%AD%E7%AB%A0/:0:6","tags":["linux"],"title":"Linux第六章","uri":"/posts/linux%E7%AC%AC%E5%85%AD%E7%AB%A0/"},{"categories":["鸟哥的私房菜"],"content":"如何创建bashrc的实体链接(hard link)和符号链接(symbolic link)? ","date":"2021-03-02","objectID":"/posts/linux%E7%AC%AC%E5%85%AD%E7%AB%A0/:0:7","tags":["linux"],"title":"Linux第六章","uri":"/posts/linux%E7%AC%AC%E5%85%AD%E7%AB%A0/"},{"categories":["鸟哥的私房菜"],"content":"如何当 ~/.bashrc 比 /tmp/bashrc 新时则复制? cp -u ~/.bashrc /tmp/bashrc -u, –update copy only when the SOURCE file is newer than the destination file or when the destination file is missing ","date":"2021-03-02","objectID":"/posts/linux%E7%AC%AC%E5%85%AD%E7%AB%A0/:0:8","tags":["linux"],"title":"Linux第六章","uri":"/posts/linux%E7%AC%AC%E5%85%AD%E7%AB%A0/"},{"categories":["鸟哥的私房菜"],"content":"若 bashrc_slink 是软链接文件，则复制的是什么？ 没有加任何选项时，cp复制的是原始文件，而非链接文件的属性 若加 -d 选项，则复制的是链接文件的属性 -d same as –no-dereference –preserve=links ","date":"2021-03-02","objectID":"/posts/linux%E7%AC%AC%E5%85%AD%E7%AB%A0/:0:9","tags":["linux"],"title":"Linux第六章","uri":"/posts/linux%E7%AC%AC%E5%85%AD%E7%AB%A0/"},{"categories":["鸟哥的私房菜"],"content":"能否使用feng的身份，完整的复制 /var/log/wtmp 文件到 /tmp 下面？ 因为feng身份并不能随意修改文件的拥有者与群组，因此虽然能够复制wtmp的相关权限与时间等属性，但是与拥有者、群组相关的，feng无法身份无法进行操作。 ","date":"2021-03-02","objectID":"/posts/linux%E7%AC%AC%E5%85%AD%E7%AB%A0/:0:10","tags":["linux"],"title":"Linux第六章","uri":"/posts/linux%E7%AC%AC%E5%85%AD%E7%AB%A0/"},{"categories":["鸟哥的私房菜"],"content":"如何获取 /etc/sysconfig/network 中最后的文件名？ basename /etc/sysconfig/network ","date":"2021-03-02","objectID":"/posts/linux%E7%AC%AC%E5%85%AD%E7%AB%A0/:0:11","tags":["linux"],"title":"Linux第六章","uri":"/posts/linux%E7%AC%AC%E5%85%AD%E7%AB%A0/"},{"categories":["鸟哥的私房菜"],"content":"如何获取 /etc/sysconfig/network 的目录名？ dirname /etc/sysconfig/network ","date":"2021-03-02","objectID":"/posts/linux%E7%AC%AC%E5%85%AD%E7%AB%A0/:0:12","tags":["linux"],"title":"Linux第六章","uri":"/posts/linux%E7%AC%AC%E5%85%AD%E7%AB%A0/"},{"categories":["鸟哥的私房菜"],"content":"如何使 cat /etc/issue 能够显示行号？ cat -n /etc/issue -n, –number number all output lines ","date":"2021-03-02","objectID":"/posts/linux%E7%AC%AC%E5%85%AD%E7%AB%A0/:0:13","tags":["linux"],"title":"Linux第六章","uri":"/posts/linux%E7%AC%AC%E5%85%AD%E7%AB%A0/"},{"categories":["鸟哥的私房菜"],"content":"如果只想列出 /etc/man_db.conf 前20行， 该如何操作？ head - n 20 /etc/man_db.conf ","date":"2021-03-02","objectID":"/posts/linux%E7%AC%AC%E5%85%AD%E7%AB%A0/:0:14","tags":["linux"],"title":"Linux第六章","uri":"/posts/linux%E7%AC%AC%E5%85%AD%E7%AB%A0/"},{"categories":["鸟哥的私房菜"],"content":"如何只想列出 /etc/man_db.conf 最后20行，该如何操作？ tail -n 20 /etc/man_db.conf – ","date":"2021-03-02","objectID":"/posts/linux%E7%AC%AC%E5%85%AD%E7%AB%A0/:0:15","tags":["linux"],"title":"Linux第六章","uri":"/posts/linux%E7%AC%AC%E5%85%AD%E7%AB%A0/"},{"categories":["鸟哥的私房菜"],"content":"不知道 /etc/man_db.conf 有几行，但想列出120行后的数据，该如何操作？ tail -n +120 /etc/man_db.conf ","date":"2021-03-02","objectID":"/posts/linux%E7%AC%AC%E5%85%AD%E7%AB%A0/:0:16","tags":["linux"],"title":"Linux第六章","uri":"/posts/linux%E7%AC%AC%E5%85%AD%E7%AB%A0/"},{"categories":["鸟哥的私房菜"],"content":"如何想显示 /etc/man_db.conf的第11到第20行，该如何操作？ head -n 20 /etc/man_db.conf | tail -n 10 ","date":"2021-03-02","objectID":"/posts/linux%E7%AC%AC%E5%85%AD%E7%AB%A0/:0:17","tags":["linux"],"title":"Linux第六章","uri":"/posts/linux%E7%AC%AC%E5%85%AD%E7%AB%A0/"},{"categories":["鸟哥的私房菜"],"content":"如何想显示 /etc/man_db.conf的第11到第20行，且行号存在， 该如何操作？ cat -n /etc/man_db.conf | head -n 20 | tail -n 10 ","date":"2021-03-02","objectID":"/posts/linux%E7%AC%AC%E5%85%AD%E7%AB%A0/:0:18","tags":["linux"],"title":"Linux第六章","uri":"/posts/linux%E7%AC%AC%E5%85%AD%E7%AB%A0/"},{"categories":["鸟哥的私房菜"],"content":"如何将 /usr/bin/passwd 的内容用ASCII方式展现？ od -t c /usr/bin/passwd ","date":"2021-03-02","objectID":"/posts/linux%E7%AC%AC%E5%85%AD%E7%AB%A0/:0:19","tags":["linux"],"title":"Linux第六章","uri":"/posts/linux%E7%AC%AC%E5%85%AD%E7%AB%A0/"},{"categories":["鸟哥的私房菜"],"content":"如何将 /etc/issue 这个文件内容以8进位列出储存值与ASCII的对照表? od -t oCc /etc/issue -t: -t, –format=Type Select output format or formats C: SIZE may also be C for sizeof(char) c: printable character or backslash escape o: octal, SIZE bytes per integer ","date":"2021-03-02","objectID":"/posts/linux%E7%AC%AC%E5%85%AD%E7%AB%A0/:0:20","tags":["linux"],"title":"Linux第六章","uri":"/posts/linux%E7%AC%AC%E5%85%AD%E7%AB%A0/"},{"categories":["鸟哥的私房菜"],"content":"如何立即找到password这几个字的ASCII对照， 该如何通过od来判断？ echo password | od -t oCc echo ","date":"2021-03-02","objectID":"/posts/linux%E7%AC%AC%E5%85%AD%E7%AB%A0/:0:21","tags":["linux"],"title":"Linux第六章","uri":"/posts/linux%E7%AC%AC%E5%85%AD%E7%AB%A0/"},{"categories":["鸟哥的私房菜"],"content":"当复制一个文件时，复制所有的属性，ctime这个属性可以复制吗？ 不可以， ctime 是记录这个文件最近的状态(status)被改变的时间 mtime: 文件的\"内容数据\"变更时，就会更新这个时间 ctime: 文件的状态更改时，就会更新这个时间 atime: 当文件被取用时，会更新这个时间 ","date":"2021-03-02","objectID":"/posts/linux%E7%AC%AC%E5%85%AD%E7%AB%A0/:0:22","tags":["linux"],"title":"Linux第六章","uri":"/posts/linux%E7%AC%AC%E5%85%AD%E7%AB%A0/"},{"categories":["鸟哥的私房菜"],"content":"若你的系统有个一般身份使用者 feng, 他的群组属于 feng, 他的主文件夹在 /home/feng, 你是root, 你想将你的~/.bashrc复制给他，可以怎么作？ cp ~/.bashrc ~feng/bashrc chown feng:feng ~feng/bashrc ","date":"2021-03-02","objectID":"/posts/linux%E7%AC%AC%E5%85%AD%E7%AB%A0/:0:23","tags":["linux"],"title":"Linux第六章","uri":"/posts/linux%E7%AC%AC%E5%85%AD%E7%AB%A0/"},{"categories":["鸟哥的私房菜"],"content":"我想在 /tmp 下面创建一个目录，这个目录名称为 chapter6_1, 并且这个目录拥有者为 feng, 群组为feng, 此外，任何人都可以进入该目录浏览文件，不过除了feng之外，其他人都不能修改这目录下的文件 整个目录权限应为 drwxr-xr-x mkdir /tmp/chapter6_1 chown -R feng:feng /tmp/chapter6_1 chmod -R 755 /tmp/chapter6_1 ","date":"2021-03-02","objectID":"/posts/linux%E7%AC%AC%E5%85%AD%E7%AB%A0/:0:24","tags":["linux"],"title":"Linux第六章","uri":"/posts/linux%E7%AC%AC%E5%85%AD%E7%AB%A0/"},{"categories":["鸟哥的私房菜"],"content":"如何查看使用者在创建文件或目录时候的权限默认值? umask 和 umask -S -S Display readline key sequences bound to macros and the strings they output ","date":"2021-03-02","objectID":"/posts/linux%E7%AC%AC%E5%85%AD%E7%AB%A0/:0:25","tags":["linux"],"title":"Linux第六章","uri":"/posts/linux%E7%AC%AC%E5%85%AD%E7%AB%A0/"},{"categories":["鸟哥的私房菜"],"content":"umask的分数指的是什么？为什么它们会不一样？ 首先创建文件目录是不一样的: 创建\"文件\"默认没有可执行(x)权限， 只有rw这两个权限， 最大为666分， 默认权限为: -rw-rw-rw- 创建\"目录\"时, x权限是否可以进入此目录有关，因此默认所有权限均开放, 最大为777分， 默认权限为: drwxrwxrwx umask 的分数是指文件或目录需要减去的分数 如umask 为022, 则创建文件时的分数为 666-022 = 644, 即-rw-r–r– 则创建目录时的分数为 777-022 = 755, 即drwxr-xr-x 注意这样直接相减的结果不一定正确 ","date":"2021-03-02","objectID":"/posts/linux%E7%AC%AC%E5%85%AD%E7%AB%A0/:0:26","tags":["linux"],"title":"Linux第六章","uri":"/posts/linux%E7%AC%AC%E5%85%AD%E7%AB%A0/"},{"categories":["鸟哥的私房菜"],"content":"若想自己创建的文件给群组的使用者共同编辑时，umask应如何设置？ 默认 umask: 022; 意味着 G没有w权限 将 umask 改成 002即可 ","date":"2021-03-02","objectID":"/posts/linux%E7%AC%AC%E5%85%AD%E7%AB%A0/:0:27","tags":["linux"],"title":"Linux第六章","uri":"/posts/linux%E7%AC%AC%E5%85%AD%E7%AB%A0/"},{"categories":["鸟哥的私房菜"],"content":"假设你的umask为003, 请问该umask情况下，创建的文件与目录权限为？ umask 为 003, 所以拿掉的权限为——–wx 文件: (-rw-rw-rw-) - (——–wx) = -rw-rw-r– 目录: (drwxrwxrwx) - (d——-wx) = drwxrwxr– 注意不要用666 - 003 = 663, 即文件的权限为-rw-rw–wx, 原来没有x权限，这样一减就有了x权限， 这是不对的 ","date":"2021-03-02","objectID":"/posts/linux%E7%AC%AC%E5%85%AD%E7%AB%A0/:0:28","tags":["linux"],"title":"Linux第六章","uri":"/posts/linux%E7%AC%AC%E5%85%AD%E7%AB%A0/"},{"categories":["鸟哥的私房菜"],"content":"如何使一个文件不能删除、改名、设置链接也无法写入或新增数据? chattr +i ","date":"2021-03-02","objectID":"/posts/linux%E7%AC%AC%E5%85%AD%E7%AB%A0/:0:29","tags":["linux"],"title":"Linux第六章","uri":"/posts/linux%E7%AC%AC%E5%85%AD%E7%AB%A0/"},{"categories":["鸟哥的私房菜"],"content":"如何使一个文件只能增加数据，而不能删除也不能修改数据？ chattr +a ","date":"2021-03-02","objectID":"/posts/linux%E7%AC%AC%E5%85%AD%E7%AB%A0/:0:30","tags":["linux"],"title":"Linux第六章","uri":"/posts/linux%E7%AC%AC%E5%85%AD%E7%AB%A0/"},{"categories":["鸟哥的私房菜"],"content":"如何查看当前文件的隐藏属性？ lsattr ","date":"2021-03-02","objectID":"/posts/linux%E7%AC%AC%E5%85%AD%E7%AB%A0/:0:31","tags":["linux"],"title":"Linux第六章","uri":"/posts/linux%E7%AC%AC%E5%85%AD%E7%AB%A0/"},{"categories":["鸟哥的私房菜"],"content":"这里的s是什么权限？ 例如: /etc/shadow 只有root用户才可以修改 feng用户对于 /usr/bin/passwd 有x权限，表示feng可以执行passwd passwd的拥有者是root这个账号 因为 /usr/bin/passwd 中的 s 权限， feng在执行passwd的过程中，会暂时获得root权限 /etc/shadow 就可以被feng所执行的passwd修改 ","date":"2021-03-02","objectID":"/posts/linux%E7%AC%AC%E5%85%AD%E7%AB%A0/:0:32","tags":["linux"],"title":"Linux第六章","uri":"/posts/linux%E7%AC%AC%E5%85%AD%E7%AB%A0/"},{"categories":["鸟哥的私房菜"],"content":"什么是SUID和SGID呢？ 当s标志在文件拥有者的x项目为SUID (Set UID) 当s在群组的x时则称为SGID (Set GID) ","date":"2021-03-02","objectID":"/posts/linux%E7%AC%AC%E5%85%AD%E7%AB%A0/:0:33","tags":["linux"],"title":"Linux第六章","uri":"/posts/linux%E7%AC%AC%E5%85%AD%E7%AB%A0/"},{"categories":["鸟哥的私房菜"],"content":"这里的t是对应的什么权限? t 是Sticky Bit, 仅对目录有效 /tmp 的权限是 drwxrwxrwt 任何人都可以在 /tmp 内新增、修改文件 但仅有该文件/目录创建者与root能够删除自己的目录或文件 ","date":"2021-03-02","objectID":"/posts/linux%E7%AC%AC%E5%85%AD%E7%AB%A0/:0:34","tags":["linux"],"title":"Linux第六章","uri":"/posts/linux%E7%AC%AC%E5%85%AD%E7%AB%A0/"},{"categories":["鸟哥的私房菜"],"content":"如何设置SUID、SGID、SBIT这三个权限？ 只对文件设置: 4 为 SUID 2 为 SGID 只对目录设置: 1 为 SBIT ","date":"2021-03-02","objectID":"/posts/linux%E7%AC%AC%E5%85%AD%E7%AB%A0/:0:35","tags":["linux"],"title":"Linux第六章","uri":"/posts/linux%E7%AC%AC%E5%85%AD%E7%AB%A0/"},{"categories":["鸟哥的私房菜"],"content":"为什么这里的S和T是大写的? s,t 是替代x权限的，而666中 user , group , others 都没有x权限，ST代表为空 ","date":"2021-03-02","objectID":"/posts/linux%E7%AC%AC%E5%85%AD%E7%AB%A0/:0:36","tags":["linux"],"title":"Linux第六章","uri":"/posts/linux%E7%AC%AC%E5%85%AD%E7%AB%A0/"},{"categories":["鸟哥的私房菜"],"content":"如何给 test 文件加上SGID和SBIT权限? ","date":"2021-03-02","objectID":"/posts/linux%E7%AC%AC%E5%85%AD%E7%AB%A0/:0:37","tags":["linux"],"title":"Linux第六章","uri":"/posts/linux%E7%AC%AC%E5%85%AD%E7%AB%A0/"},{"categories":["鸟哥的私房菜"],"content":"如何查看 ~/.bashrc 的基本数据， 是属于ASCII或者是data，还是binary? file ","date":"2021-03-02","objectID":"/posts/linux%E7%AC%AC%E5%85%AD%E7%AB%A0/:0:38","tags":["linux"],"title":"Linux第六章","uri":"/posts/linux%E7%AC%AC%E5%85%AD%E7%AB%A0/"},{"categories":["鸟哥的私房菜"],"content":"为什么history找不到？ 因为 history 是bash的内置命令， 不在 PATH 中 ","date":"2021-03-02","objectID":"/posts/linux%E7%AC%AC%E5%85%AD%E7%AB%A0/:0:39","tags":["linux"],"title":"Linux第六章","uri":"/posts/linux%E7%AC%AC%E5%85%AD%E7%AB%A0/"},{"categories":["鸟哥的私房菜"],"content":"如何用 find 找出过去系统上面24小时内有更动过内容(mtime)的文件? find / -mtime 0 ","date":"2021-03-02","objectID":"/posts/linux%E7%AC%AC%E5%85%AD%E7%AB%A0/:0:40","tags":["linux"],"title":"Linux第六章","uri":"/posts/linux%E7%AC%AC%E5%85%AD%E7%AB%A0/"},{"categories":["鸟哥的私房菜"],"content":"如何用 find 找出3天前系统上面24小时内有更动过内容(mtime)的文件? find / -mtime 3 ","date":"2021-03-02","objectID":"/posts/linux%E7%AC%AC%E5%85%AD%E7%AB%A0/:0:41","tags":["linux"],"title":"Linux第六章","uri":"/posts/linux%E7%AC%AC%E5%85%AD%E7%AB%A0/"},{"categories":["鸟哥的私房菜"],"content":"如何在 /etc 下面的文件，如果其日期比 /etc/passwd 新就列出? find /etc -newer /etc/passwd ","date":"2021-03-02","objectID":"/posts/linux%E7%AC%AC%E5%85%AD%E7%AB%A0/:0:42","tags":["linux"],"title":"Linux第六章","uri":"/posts/linux%E7%AC%AC%E5%85%AD%E7%AB%A0/"},{"categories":["鸟哥的私房菜"],"content":"如何在 /home 下找到属于feng的文件? find /home -user feng ","date":"2021-03-02","objectID":"/posts/linux%E7%AC%AC%E5%85%AD%E7%AB%A0/:0:43","tags":["linux"],"title":"Linux第六章","uri":"/posts/linux%E7%AC%AC%E5%85%AD%E7%AB%A0/"},{"categories":["鸟哥的私房菜"],"content":"如何找出系统中不属于任何人的文件? find / -nouser ","date":"2021-03-02","objectID":"/posts/linux%E7%AC%AC%E5%85%AD%E7%AB%A0/:0:44","tags":["linux"],"title":"Linux第六章","uri":"/posts/linux%E7%AC%AC%E5%85%AD%E7%AB%A0/"},{"categories":["鸟哥的私房菜"],"content":"如何找出 /run 目录下，文件类型为 Socket 的文件名有哪些？ find /run -type s ","date":"2021-03-02","objectID":"/posts/linux%E7%AC%AC%E5%85%AD%E7%AB%A0/:0:45","tags":["linux"],"title":"Linux第六章","uri":"/posts/linux%E7%AC%AC%E5%85%AD%E7%AB%A0/"},{"categories":["鸟哥的私房菜"],"content":"如何找出文件中含有SGID 或 SUID 或 SBIT的属性? find / -perm /7000 7000 就是 —s–s–t 只要含有s或t的就列出， 使用/7000 同时含有三个权限，使用-7000 ","date":"2021-03-02","objectID":"/posts/linux%E7%AC%AC%E5%85%AD%E7%AB%A0/:0:46","tags":["linux"],"title":"Linux第六章","uri":"/posts/linux%E7%AC%AC%E5%85%AD%E7%AB%A0/"},{"categories":["鸟哥的私房菜"],"content":"如何找出 /usr/bin, /usr/sbin 下， 只要具有 SUID 或 SGID 的文件? find /usr/bin /usr/sbin -perm /6000 ","date":"2021-03-02","objectID":"/posts/linux%E7%AC%AC%E5%85%AD%E7%AB%A0/:0:47","tags":["linux"],"title":"Linux第六章","uri":"/posts/linux%E7%AC%AC%E5%85%AD%E7%AB%A0/"},{"categories":["鸟哥的私房菜"],"content":"如何找出 /usr/bin, /usr/sbin 下， 只要具有 SUID 或 SGID 的文件, 并将找到的文件用ls -l列出来？ find /usr/bin /usr/sbin -perm /7000 -exec ls -l {} ; {} 代表由 find 找到的内容， -exec 是开始位置， ; 是结束位置 ","date":"2021-03-02","objectID":"/posts/linux%E7%AC%AC%E5%85%AD%E7%AB%A0/:0:48","tags":["linux"],"title":"Linux第六章","uri":"/posts/linux%E7%AC%AC%E5%85%AD%E7%AB%A0/"},{"categories":["鸟哥的私房菜"],"content":"让一个使用者feng能够进行\"cp /dir1/file1 /dir2\"的指令时，则说明dir1, file1, dir2的最小所需权限为何? dir1: x fiel1: r dir2: w, x ","date":"2021-03-02","objectID":"/posts/linux%E7%AC%AC%E5%85%AD%E7%AB%A0/:0:49","tags":["linux"],"title":"Linux第六章","uri":"/posts/linux%E7%AC%AC%E5%85%AD%E7%AB%A0/"},{"categories":["鸟哥的私房菜"],"content":"箭头和方框所指的是什么意思？ 第一个箭头是指连接到此文件的数量 第二个箭头指的是文件的容量 方框所指的是文件最后修改的时间 ","date":"2021-03-02","objectID":"/posts/linux%E7%AC%AC%E4%BA%94%E7%AB%A0/:0:1","tags":["linux"],"title":"Linux第五章","uri":"/posts/linux%E7%AC%AC%E4%BA%94%E7%AB%A0/"},{"categories":["鸟哥的私房菜"],"content":"如何用ls命令列出全部文件最后修改的确切时间？ ls -al --full-time ","date":"2021-03-02","objectID":"/posts/linux%E7%AC%AC%E4%BA%94%E7%AB%A0/:0:2","tags":["linux"],"title":"Linux第五章","uri":"/posts/linux%E7%AC%AC%E4%BA%94%E7%AB%A0/"},{"categories":["鸟哥的私房菜"],"content":"请问testgroup这个群组的成员与其他人(others)是否可以进入本目录？ test1 是本目录的拥有者，有[rwx]权限，可以对该目录进行任何操作 testgroup 这个群组[r-x], 即该组的成员可以进入本目录进行工作，但是不能在本目录下进行写入动作。 other [r–], 由于没有x的权限，因此others的使用者，并不能进入此目录 ","date":"2021-03-02","objectID":"/posts/linux%E7%AC%AC%E4%BA%94%E7%AB%A0/:0:3","tags":["linux"],"title":"Linux第五章","uri":"/posts/linux%E7%AC%AC%E4%BA%94%E7%AB%A0/"},{"categories":["鸟哥的私房菜"],"content":"系统有个帐号名称为vbird, 这个帐号并没有支持root群组，请问vbird对这个目录有何权限? vbird 对此目录只有r的权限，但没有x权限，表示vbird没法进入该目录，即便有r权限，也无法执行。 ","date":"2021-03-02","objectID":"/posts/linux%E7%AC%AC%E4%BA%94%E7%AB%A0/:0:4","tags":["linux"],"title":"Linux第五章","uri":"/posts/linux%E7%AC%AC%E4%BA%94%E7%AB%A0/"},{"categories":["鸟哥的私房菜"],"content":"普通用户dmtsai对这目录/文件的权限为何？ 其有r权限，可以查询到文件名，由于没有权限，会有一堆问号 ","date":"2021-03-02","objectID":"/posts/linux%E7%AC%AC%E4%BA%94%E7%AB%A0/:0:5","tags":["linux"],"title":"Linux第五章","uri":"/posts/linux%E7%AC%AC%E4%BA%94%E7%AB%A0/"},{"categories":["鸟哥的私房菜"],"content":"为什么很多时候没有/dir1 的r权限，也可以对里面的数据进行操作？ 因为， r 代表\"这个抽屉里有灯光\", 可以看到各个文件在哪里 但当有 x 权限的时候，就知道里面的数据在哪里，不需要有灯光，摸黑也可以找到 只是，没有 r 的话，使用 [tab] 时，无法补齐文件名 ","date":"2021-03-02","objectID":"/posts/linux%E7%AC%AC%E4%BA%94%E7%AB%A0/:0:6","tags":["linux"],"title":"Linux第五章","uri":"/posts/linux%E7%AC%AC%E4%BA%94%E7%AB%A0/"},{"categories":["鸟哥的私房菜"],"content":"在FHS(filesystem hierarchy standard)规定下，各个文件夹都是放什么的?？1 /bin (User Binaries) 与 /sbin (System Binaries) /bin 与 /sbin目录下均是二进制执行文件(binary executables) /etc (Configuration Files) 所有程序的配置文件都在此 如passwd, shadow /dev (Device Files) 所有设备文件都在此 /proc (Process Information) 系统进程的信息都在此 如: /proc/uptime /var (Variable Files) 包含着一些会增加的文件 如: /var/log, /var/lib, /var/mail, /var/tmp /tmp (Temporary Files) 保存着系统和用户生成的临时文件 当系统重启，这里的文件会被删除 /usr (User Programs) 包含着 /usr/bin, /usr/sbin, /usr/lib, /usr/local /home (Home Directories) 所有用户的家目录在此 如/home/feng /boot (Boot Loader Files) 所有的boot文件在此 如 efi, grub文件 /lib (System Libraries) bin 和 /sbin所需要的依赖都在此 如: *.so /opt (Optional add-on Apps) 第三方软件放置的地方 如: google, netease /mnt (Mount Directory) 文件挂载的地方 /media (Removable Devices) 可移动媒体设备挂载的地方 /srv (Service Data) 服务数据放置的地方 Linux Directory Structure (File System Structure) Explained with Examples ↩︎ ","date":"2021-03-02","objectID":"/posts/linux%E7%AC%AC%E4%BA%94%E7%AB%A0/:0:7","tags":["linux"],"title":"Linux第五章","uri":"/posts/linux%E7%AC%AC%E4%BA%94%E7%AB%A0/"},{"categories":["java"],"content":"基础概念问答 请问Java语言是跨平台的吗？JVM是跨平台的吗？为什么？ Java语言是跨平台的，但JVM不是跨平台的，不同的平台有不同的JVM。 首先, 后缀为 \"*.java\" 的文件，经过javac命令编译后会生成public class定义类名称的.class文件(字节码文件)。然后, 不同平台的JVM会根据不同操作系统所提供的接口，实现.class文件中的功能。 例如: Hello.java所对应的程序 public class Hello { public static void main(String args[]){ System.out.println(\"Hello, World!\"); } } 编译后(Hello.class): 再经过linux中的jre-openjdk中的jvm执行hello.class使得java看起来具有跨平台的能力。 ","date":"2021-02-26","objectID":"/posts/java%E5%9F%BA%E7%A1%80%E7%BB%83%E4%B9%A0%E9%A2%98/:1:0","tags":["java"],"title":"Java基础练习题","uri":"/posts/java%E5%9F%BA%E7%A1%80%E7%BB%83%E4%B9%A0%E9%A2%98/"},{"categories":["java"],"content":"环境变量 设置环境变量使QQ或者微信可以在任意平台下，通过命令行执行 linux平台下: export 文件路径:$PATH 使用永久化: echo \"export 文件路径:$PATH\" \u003e\u003e .zshrc ","date":"2021-02-26","objectID":"/posts/java%E5%9F%BA%E7%A1%80%E7%BB%83%E4%B9%A0%E9%A2%98/:2:0","tags":["java"],"title":"Java基础练习题","uri":"/posts/java%E5%9F%BA%E7%A1%80%E7%BB%83%E4%B9%A0%E9%A2%98/"},{"categories":["java"],"content":"3.[入门题目] 独立编写Hello World程序，并在命令行下运行 hello.java public class Hello{ public static void main(String args[]){ System.out.println(\"Hello,world\"); } } public class hello{ public static void main(String args[]){ System.out.println(\"Hello,world\"); } } ","date":"2021-02-26","objectID":"/posts/java%E5%9F%BA%E7%A1%80%E7%BB%83%E4%B9%A0%E9%A2%98/:3:0","tags":["java"],"title":"Java基础练习题","uri":"/posts/java%E5%9F%BA%E7%A1%80%E7%BB%83%E4%B9%A0%E9%A2%98/"},{"categories":["java"],"content":"4.进制转换 将67转换为二进制，八进制，十六进制，将0b10100101,0345,0xef转换为十进制 67 将67除以2, 商33余数为1 将商33除以2, 商16余数为1 将商16除以2, 商8余数为0 将商8除以2, 商4余数为0 将商4除以2, 商2余数为0 将商2除以2, 商1余数为0 将商1除以2, 商0余数为1 则67转换为二进制为100 0011 所对应的十六进制为43 1 000 011 对应的八进制是103 0b10100101 二进制:0b 1010 0101 $12^{7} + 12^{5} + 12^{2} 12^{0} = 165$ 八进制:0345 $38^{2} + 48^{1} + 5*8^{0} = 229$ 十六进制:0xef $1416^{1} + 1516^{0} = 239$ ","date":"2021-02-26","objectID":"/posts/java%E5%9F%BA%E7%A1%80%E7%BB%83%E4%B9%A0%E9%A2%98/:4:0","tags":["java"],"title":"Java基础练习题","uri":"/posts/java%E5%9F%BA%E7%A1%80%E7%BB%83%E4%B9%A0%E9%A2%98/"},{"categories":["java"],"content":"5.原码反码补码 字长为8, 已知原码 0110 1010 和1100 0110, 求他们的补码，已知补码0110 1010 和1100 0110求它们的原码 正数的补码是其本身 负数的补码是在原码的基础上，符号位不变，其余各位取反后+1 0110 1010，它是正数, 其补码为其本身 0110 1010 1100 0110, 它是负数, 其补码为1011 1010 正数补码是其本身 负数补码的原码是在其被码的基础上，符号位不变，其余各位取反后+1 0110 1010, 它是正数，其原码为其本身 0110 1010 1100 0110, 它是负数，其补码为1011 1010 ","date":"2021-02-26","objectID":"/posts/java%E5%9F%BA%E7%A1%80%E7%BB%83%E4%B9%A0%E9%A2%98/:5:0","tags":["java"],"title":"Java基础练习题","uri":"/posts/java%E5%9F%BA%E7%A1%80%E7%BB%83%E4%B9%A0%E9%A2%98/"},{"categories":["java"],"content":"6. 基本数据类型 语句 byte b = 300; 编译能通过吗？ 如果不能，如何让它通过？转换之后其值是多少？ 不能， byte 为 8 位， 考虑符号位， 它能表示$2^7$个数, 即0 ~ 127, -128 ~ (-1) ","date":"2021-02-26","objectID":"/posts/java%E5%9F%BA%E7%A1%80%E7%BB%83%E4%B9%A0%E9%A2%98/:6:0","tags":["java"],"title":"Java基础练习题","uri":"/posts/java%E5%9F%BA%E7%A1%80%E7%BB%83%E4%B9%A0%E9%A2%98/"},{"categories":["java"],"content":"7. 位运算 用位运算求一个整数的绝对值 public class number { public static void main(String args[]){ int num = -10; if (num\u003e=0){ System.out.println(\"其绝对值为:\" + num); }else{ int negativenum = ~num + 1; System.out.println(\"其绝对值为:\" + negativenum); } } } public class number { public static void main(String args[]){ int num = -10; int absolute = num \u003e 0? num : ~num + 1; System.out.println(absolute); } } ","date":"2021-02-26","objectID":"/posts/java%E5%9F%BA%E7%A1%80%E7%BB%83%E4%B9%A0%E9%A2%98/:7:0","tags":["java"],"title":"Java基础练习题","uri":"/posts/java%E5%9F%BA%E7%A1%80%E7%BB%83%E4%B9%A0%E9%A2%98/"},{"categories":["java"],"content":"8.逻辑运算 有三个int变量，a, b, c 假设三个变量中有两个变量的值相同，请问如何快速求出，那个和其他两个变量不同的第三个变量的值? public class diffnum{ public static void main(String args[]){ int a = 1; int b = 2; int c = 1; if (a == b){ System.out.println(\"c是不同的那个\"); }else if(a == c){ System.out.println(\"b是不同的那个\"); }else{ System.out.println(\"a是不同的那个\"); } } } ","date":"2021-02-26","objectID":"/posts/java%E5%9F%BA%E7%A1%80%E7%BB%83%E4%B9%A0%E9%A2%98/:8:0","tags":["java"],"title":"Java基础练习题","uri":"/posts/java%E5%9F%BA%E7%A1%80%E7%BB%83%E4%B9%A0%E9%A2%98/"},{"categories":["java"],"content":"9.左移右移 public class TestOdd { public static void main(String args[]){ int num = 10; if (num %2 == 0){ System.out.println( num + \"是2的整数次幂\" ); } else{ System.out.println( num + \"不是2的整数次幂\" ); } } } ","date":"2021-02-26","objectID":"/posts/java%E5%9F%BA%E7%A1%80%E7%BB%83%E4%B9%A0%E9%A2%98/:9:0","tags":["java"],"title":"Java基础练习题","uri":"/posts/java%E5%9F%BA%E7%A1%80%E7%BB%83%E4%B9%A0%E9%A2%98/"},{"categories":["java"],"content":"10.键盘录入 public class WeekDay{ public static void main(String args[]){ int day = 1; switch (day) { case 1: { System.out.println(\"星期一\"); break; } case 2: { System.out.println(\"星期二\"); break; } case 3: { System.out.println(\"星期三\"); break; } case 4: { System.out.println(\"星期四\"); break; } case 5: { System.out.println(\"星期五\"); break; } case 6: { System.out.println(\"星期六\"); break; } case 7: { System.out.println(\"星期日\"); break; } default: { System.out.println(\"没有这天\"); } } } } ","date":"2021-02-26","objectID":"/posts/java%E5%9F%BA%E7%A1%80%E7%BB%83%E4%B9%A0%E9%A2%98/:10:0","tags":["java"],"title":"Java基础练习题","uri":"/posts/java%E5%9F%BA%E7%A1%80%E7%BB%83%E4%B9%A0%E9%A2%98/"},{"categories":["java"],"content":"11.回文数 public class palnum{ public static void main(String args[]){ int num = 12322; int digit = num % 10; //个位数 int tens = (num % 100 - num % 10) / 10; //十位数 int thou = (num % 10000 - num % 1000) / 1000; //千分位 int ten_t = (num % 100000 - num % 10000) / 10000; //万分位 /* System.out.println(digit); System.out.println(tens); System.out.println(thou); System.out.println(ten_t); */ if (digit == ten_t \u0026\u0026 tens == thou) System.out.println( num + \"是回文数\" ); else System.out.println( num + \"不是回文数\"); } } ","date":"2021-02-26","objectID":"/posts/java%E5%9F%BA%E7%A1%80%E7%BB%83%E4%B9%A0%E9%A2%98/:11:0","tags":["java"],"title":"Java基础练习题","uri":"/posts/java%E5%9F%BA%E7%A1%80%E7%BB%83%E4%B9%A0%E9%A2%98/"},{"categories":["java"],"content":"12.switch分支 public class score{ public static void main(String args[]) { int score = 100; // 获取十位数 int tens = (score % 100 - score % 10) / 10; switch (tens){ case 1,2,3,4,5: { System.out.println(\"不及格\"); break; } case 6: { System.out.println(\"及格\"); break; } case 7: { System.out.println(\"中\"); break; } case 8:{ System.out.println(\"良\"); } case 9, 0:{ System.out.println(\"优\"); } } } } ","date":"2021-02-26","objectID":"/posts/java%E5%9F%BA%E7%A1%80%E7%BB%83%E4%B9%A0%E9%A2%98/:12:0","tags":["java"],"title":"Java基础练习题","uri":"/posts/java%E5%9F%BA%E7%A1%80%E7%BB%83%E4%B9%A0%E9%A2%98/"},{"categories":["java"],"content":"13.水仙花数 public class dafnum{ public static void main(String args[]){ for (int num = 100; num \u003c= 999; num ++){ int digit = num % 10; //个位数 int tens = (num % 100 - digit) / 10; //十位数 int hundreds = (num - (num % 100)) / 100; //百位数 /* System.out.println(digit); System.out.println(tens); System.out.println(hundreds); */ if (digit * digit * digit + tens * tens * tens + hundreds * hundreds * hundreds == num){ System.out.println( num + \"是水仙花数\" ); } } } } ","date":"2021-02-26","objectID":"/posts/java%E5%9F%BA%E7%A1%80%E7%BB%83%E4%B9%A0%E9%A2%98/:13:0","tags":["java"],"title":"Java基础练习题","uri":"/posts/java%E5%9F%BA%E7%A1%80%E7%BB%83%E4%B9%A0%E9%A2%98/"},{"categories":["java"],"content":"14.输出素数 import java.lang.Math; public class prime{ public static void main(String args[]){ boolean flag = false; for (int num = 101; num \u003c= 200; num++){ flag = false; for (int a = 2; a \u003c= Math.sqrt(num); a++){ if ( num % a == 0 ){ flag = true; break;} } if ( flag == false ){System.out.println(num + \"是素数\");} } } } ","date":"2021-02-26","objectID":"/posts/java%E5%9F%BA%E7%A1%80%E7%BB%83%E4%B9%A0%E9%A2%98/:14:0","tags":["java"],"title":"Java基础练习题","uri":"/posts/java%E5%9F%BA%E7%A1%80%E7%BB%83%E4%B9%A0%E9%A2%98/"},{"categories":["java"],"content":"15.简单排序 public class sort{ public static void main(String args[]){ int a = 1; int b = 2; int c = 3; if ((a \u003e b) \u0026\u0026 (a \u003e c)) { if (b \u003e c){ System.out.println(\"a \u003e b \u003e c\"); } else { System.out.println(\"a \u003e c \u003e b\"); } }else if ((a \u003e b) \u0026\u0026 (a \u003c c)){ System.out.println(\"c \u003e a \u003e b\"); }else if ((a \u003c b) \u0026\u0026 (a \u003c c)){ if (b \u003e c){ System.out.println(\"b \u003e c \u003e a\"); } else { System.out.println(\"c \u003e b \u003e a\"); } }else if ((a \u003c b) \u0026\u0026 (c \u003e a)){ if (b \u003e c){ System.out.println(\"b \u003e c \u003e a\"); } else { System.out.println(\"c \u003e b \u003e a\"); } } } } ","date":"2021-02-26","objectID":"/posts/java%E5%9F%BA%E7%A1%80%E7%BB%83%E4%B9%A0%E9%A2%98/:15:0","tags":["java"],"title":"Java基础练习题","uri":"/posts/java%E5%9F%BA%E7%A1%80%E7%BB%83%E4%B9%A0%E9%A2%98/"},{"categories":["java"],"content":"16.打印三角形图案 public class intrangle{ public static void main(String args[]){ int num = (7+1)/2 -1; for(int i = 1; i \u003c= 7; i++){ if (i%2 == 0){ System.out.println(\"\"); continue; }else{ for(int j = num; j \u003e 0; j--) System.out.print(\" \"); num-=1; } for(int k = 1; k \u003c= i; k++){ System.out.print(\"*\"); } System.out.println(\"\"); } } } ","date":"2021-02-26","objectID":"/posts/java%E5%9F%BA%E7%A1%80%E7%BB%83%E4%B9%A0%E9%A2%98/:16:0","tags":["java"],"title":"Java基础练习题","uri":"/posts/java%E5%9F%BA%E7%A1%80%E7%BB%83%E4%B9%A0%E9%A2%98/"},{"categories":["java"],"content":"17.打印9*9乘法表 public class NtimesN{ public static void main(String args[]){ for(int i=1;i\u003c=9;i++){ for(int j=1;j\u003c=i;j++){ System.out.print( i + \"*\" + j + \"=\" + ( i * j ) + \"\\t\" ); } System.out.println(); } } } ","date":"2021-02-26","objectID":"/posts/java%E5%9F%BA%E7%A1%80%E7%BB%83%E4%B9%A0%E9%A2%98/:17:0","tags":["java"],"title":"Java基础练习题","uri":"/posts/java%E5%9F%BA%E7%A1%80%E7%BB%83%E4%B9%A0%E9%A2%98/"},{"categories":["java"],"content":"18. 求完数 public class factor{ public static void main(String args[]){ for (int num =1; num\u003c100; num++){ int count = 0; for(int i = 1; i \u003c num; i++) { if(num % i == 0 ){ count += i; } } if (count == num){ System.out.println(num + \"是完数\"); } } } } ","date":"2021-02-26","objectID":"/posts/java%E5%9F%BA%E7%A1%80%E7%BB%83%E4%B9%A0%E9%A2%98/:18:0","tags":["java"],"title":"Java基础练习题","uri":"/posts/java%E5%9F%BA%E7%A1%80%E7%BB%83%E4%B9%A0%E9%A2%98/"},{"categories":["java"],"content":"19. 求不重复数字 public class NotRepeat{ public static void main(String args[]){ for (int i = 1; i \u003c= 4; i++){ for (int j = 1; j \u003c=4; j++){ for (int k = 1; k \u003c=4; k++){ if (i == j | i == k | j == k) continue; System.out.println(i*100 + j*10 + k); } } } } } ","date":"2021-02-26","objectID":"/posts/java%E5%9F%BA%E7%A1%80%E7%BB%83%E4%B9%A0%E9%A2%98/:19:0","tags":["java"],"title":"Java基础练习题","uri":"/posts/java%E5%9F%BA%E7%A1%80%E7%BB%83%E4%B9%A0%E9%A2%98/"},{"categories":["java"],"content":"20. 求日期 public class daysum{ public static void main(String args[]){ int year = 2012; int month = 12; int day = 5; int day_count = 0; int Jan = 31; int Feb = 28; int Mar = 31; int Apr = 30; int May = 31; int Jun = 30; int Jul = 31; int Aug = 31; int Sept = 30; int Oct = 31; int Nov = 30; if ((year % 4 == 0 \u0026\u0026 year % 100 != 0) || (year % 400 == 0)){ System.out.println(\"该年是闰年\"); Feb = 29; } switch (month){ case 1: { day_count = day; break; } case 2: { day_count = Jan + day; break; } case 3: { day_count = Jan + Feb + day; break; } case 4: { day_count = Jan + Feb + Mar + day; break; } case 5: { day_count = Jan + Feb + Mar + Apr + day; break; } case 6: { day_count = Jan + Feb + Mar + Apr + May + day; break; } case 7: { day_count = Jan + Feb + Mar + Apr + May + Jun + day; break; } case 8: { day_count = Jan + Feb + Mar + Apr + May + Jun + Jul + day; break; } case 9: { day_count = Jan + Feb + Mar + Apr + May + Jun + Jul + Aug + day; break; } case 10: { day_count = Jan + Feb + Mar + Apr + May + Jun + Jul + Aug + Sept + day; break; } case 11: { day_count = Jan + Feb + Mar + Apr + May + Jun + Jul + Aug + Sept + Oct + day; break; } case 12: { day_count = Jan + Feb + Mar + Apr + May + Jun + Jul + Aug + Sept + Oct + Nov + day; break; } } System.out.println(day_count); } } ","date":"2021-02-26","objectID":"/posts/java%E5%9F%BA%E7%A1%80%E7%BB%83%E4%B9%A0%E9%A2%98/:20:0","tags":["java"],"title":"Java基础练习题","uri":"/posts/java%E5%9F%BA%E7%A1%80%E7%BB%83%E4%B9%A0%E9%A2%98/"},{"categories":["java"],"content":"21. 根据条件求数字 import java.lang.Math; public class findnum{ public static void main(String args[]){ for(int num = 0 ; num \u003c= 100000 ; num ++){ if (Math.round(Math.sqrt(Math.sqrt(num + 100)+ 268)) == num) System.out.println(num); } } } ","date":"2021-02-26","objectID":"/posts/java%E5%9F%BA%E7%A1%80%E7%BB%83%E4%B9%A0%E9%A2%98/:21:0","tags":["java"],"title":"Java基础练习题","uri":"/posts/java%E5%9F%BA%E7%A1%80%E7%BB%83%E4%B9%A0%E9%A2%98/"},{"categories":["java"],"content":"22. 根据输入求输出 public class rev{ public static void main(String args[]){ int num = 12345; digts(num); } public static void digts(int num){ int first = num % 10; int second = (num % 100 - first) / 10; int third = (num % 1000 - second) / 100; int four = (num % 10000 - third) / 1000; int five = (num % 100000 - four) / 10000; System.out.println(\"原来的数:\" + num); if(num % 10 == num){ System.out.println(\"此数为一位数\"); }else if(num % 100 == num){ System.out.println(\"此数为二位数\"); }else if(num % 1000 == num){ System.out.println(\"此数为三位数\"); }else if(num % 10000 == num){ System.out.println(\"此数为四位数\"); }else {System.out.println(\"此数五位数\");} System.out.println(\"转换后的数:\" + first + second + third + third + five ); } } ","date":"2021-02-26","objectID":"/posts/java%E5%9F%BA%E7%A1%80%E7%BB%83%E4%B9%A0%E9%A2%98/:22:0","tags":["java"],"title":"Java基础练习题","uri":"/posts/java%E5%9F%BA%E7%A1%80%E7%BB%83%E4%B9%A0%E9%A2%98/"},{"categories":["java"],"content":"23. 求前20项之和 public class sum{ public static void main(String args[]){ number(20); } public static void number(int num){ double a = 2; double b = 1; double c = a; double member; double denominator; double sum = 0; for(int i = 1; i \u003c= num; i++){ member = a; denominator = b; sum += a/b; c = a + b; b = a; a = c; } System.out.println(sum); } } ","date":"2021-02-26","objectID":"/posts/java%E5%9F%BA%E7%A1%80%E7%BB%83%E4%B9%A0%E9%A2%98/:23:0","tags":["java"],"title":"Java基础练习题","uri":"/posts/java%E5%9F%BA%E7%A1%80%E7%BB%83%E4%B9%A0%E9%A2%98/"},{"categories":["java"],"content":"24. 求阶乘 public class factorial{ public static void main(String args[]){ int count = 0; for(int i = 1; i \u003c= 20; i++){ count = count + sum(i); } System.out.println(count); } public static int sum(int num){ if (num == 1){ return 1; } return num * sum(num - 1); } } ","date":"2021-02-26","objectID":"/posts/java%E5%9F%BA%E7%A1%80%E7%BB%83%E4%B9%A0%E9%A2%98/:24:0","tags":["java"],"title":"Java基础练习题","uri":"/posts/java%E5%9F%BA%E7%A1%80%E7%BB%83%E4%B9%A0%E9%A2%98/"},{"categories":["java"],"content":"25.回文数 public class palnum{ public static void main(String args[]){ int num = 12322; int digit = num % 10; //个位数 int tens = (num % 100 - num % 10) / 10; //十位数 int thou = (num % 10000 - num % 1000) / 1000; //千分位 int ten_t = (num % 100000 - num % 10000) / 10000; //万分位 /* System.out.println(digit); System.out.println(tens); System.out.println(thou); System.out.println(ten_t); */ if (digit == ten_t \u0026\u0026 tens == thou) System.out.println( num + \"是回文数\" ); else System.out.println( num + \"不是回文数\"); } } ","date":"2021-02-26","objectID":"/posts/java%E5%9F%BA%E7%A1%80%E7%BB%83%E4%B9%A0%E9%A2%98/:25:0","tags":["java"],"title":"Java基础练习题","uri":"/posts/java%E5%9F%BA%E7%A1%80%E7%BB%83%E4%B9%A0%E9%A2%98/"},{"categories":["java"],"content":"26.求星期几 public class week{ public static void main(String args[]){ char first_word = 'T'; char second_word = 'u'; weekday (first_word, second_word); /* * Monday * Tuesday * Wednesday * Thursday * Friday * Saturday * Sunday */ } public static void weekday(char firstword, char secondword){ switch (firstword){ case 'M' :{ System.out.println(\"星期一\"); break; } case 'T' : { switch(secondword){ case 'u' :{ System.out.println(\"星期二\"); break; } case 'h' :{ System.out.println(\"星期四\"); break; } } break; } case 'W' : { System.out.println(\"星期四\"); break; } case 'F' : { System.out.println(\"星期五\"); break; } case 'S' : { switch(secondword){ case 'a' :{ System.out.println(\"星期二\"); break; } case 'u' :{ System.out.println(\"星期四\"); break; } } break; } } } } ","date":"2021-02-26","objectID":"/posts/java%E5%9F%BA%E7%A1%80%E7%BB%83%E4%B9%A0%E9%A2%98/:26:0","tags":["java"],"title":"Java基础练习题","uri":"/posts/java%E5%9F%BA%E7%A1%80%E7%BB%83%E4%B9%A0%E9%A2%98/"},{"categories":["java"],"content":"27.求素数 import java.lang.Math; public class prime{ public static void main(String args[]){ boolean flag = false; for (int num = 1; num \u003c= 100; num++){ flag = false; for (int a = 2; a \u003c= Math.sqrt(num); a++){ if ( num % a == 0 ){ flag = true; break;} } if ( flag == false ){System.out.println(num + \"是素数\");} } } } ","date":"2021-02-26","objectID":"/posts/java%E5%9F%BA%E7%A1%80%E7%BB%83%E4%B9%A0%E9%A2%98/:27:0","tags":["java"],"title":"Java基础练习题","uri":"/posts/java%E5%9F%BA%E7%A1%80%E7%BB%83%E4%B9%A0%E9%A2%98/"},{"categories":["java"],"content":"28.排序算法 public class sort{ public static void main(String args[]){ int data[] = new int[]{1, 5, 3, 2, 6, 4, 7, 8, 9, 10}; traverse(data); int [] sort_data = sortnum(data); traverse(sort_data); } public static int[] sortnum(int[] data) { int min = 0; int temp; for(int x = 0;x \u003c data.length; x++){ for(int y = x + 1; y \u003c data.length; y++){ if(data[y] \u003c data[min]) { min = y; } } temp = data[x]; data[x] = data[min]; data[min] = temp; min = x+1; } return data; } public static void traverse(int[] data){ for(int x = 0; x \u003c data.length; x++){ System.out.print(data[x] + \" \"); } System.out.println(); } } ","date":"2021-02-26","objectID":"/posts/java%E5%9F%BA%E7%A1%80%E7%BB%83%E4%B9%A0%E9%A2%98/:28:0","tags":["java"],"title":"Java基础练习题","uri":"/posts/java%E5%9F%BA%E7%A1%80%E7%BB%83%E4%B9%A0%E9%A2%98/"},{"categories":["java"],"content":"29.杨辉三角 public class triangle{ public static void main(String args[]){ int a[] = {0, 1, 0}; for(int i = 1; i \u003c 10; i++){ for(int y = 10 - i; y \u003e 1; y--){ System.out.print(\" \"); } traverse(a); a = tri(a); } } public static int[] tri(int[] data){ // int data[] = new int[] {0, 1, 0}; int dataNew[] = new int[data.length + 1]; dataNew[0] = 0; dataNew[dataNew.length - 1] = 0; for(int x = 0, y = 1; y \u003c data.length; x++, y++){ dataNew[y] = (data[x] + data[y]); } return dataNew; } public static void traverse(int[] data){ for(int x = 1; x \u003c data.length - 1; x++) { System.out.print(data[x] + \" \"); } System.out.println(); } } ","date":"2021-02-26","objectID":"/posts/java%E5%9F%BA%E7%A1%80%E7%BB%83%E4%B9%A0%E9%A2%98/:29:0","tags":["java"],"title":"Java基础练习题","uri":"/posts/java%E5%9F%BA%E7%A1%80%E7%BB%83%E4%B9%A0%E9%A2%98/"},{"categories":["java"],"content":"30.被9整除 public class number3{ public static void main(String args[]){ int num = 81; if (num % 9 == 0){ int count = 1; if (num/9 == 9) { count += 1; } System.out.println(num + \"能被\" + count + \"个\" + \"9除净\"); }else {System.out.println(num + \"不能被9整除\");} } } ","date":"2021-02-26","objectID":"/posts/java%E5%9F%BA%E7%A1%80%E7%BB%83%E4%B9%A0%E9%A2%98/:30:0","tags":["java"],"title":"Java基础练习题","uri":"/posts/java%E5%9F%BA%E7%A1%80%E7%BB%83%E4%B9%A0%E9%A2%98/"},{"categories":["java"],"content":"31.三个数排序 public class ArrayDemo{ public static void main(String args[]){ int temp; int data[] = new int[]{1, 2, 3, 4}; int i = 0; int j = data.length - 1; while (i \u003c j){ temp = data[i]; data[i] = data[j]; data[j] = temp; i+=1; j-=1; } for(int x = 0; x \u003c data.length; x++){ System.out.print(data[x] + \"、\"); } } } ","date":"2021-02-26","objectID":"/posts/java%E5%9F%BA%E7%A1%80%E7%BB%83%E4%B9%A0%E9%A2%98/:31:0","tags":["java"],"title":"Java基础练习题","uri":"/posts/java%E5%9F%BA%E7%A1%80%E7%BB%83%E4%B9%A0%E9%A2%98/"},{"categories":["java"],"content":"32.加密 public class encry{ public static void main(String args[]){ int num = 1234; encryNum(num); } public static void encryNum(int num){ int first = num % 10; int second = (num % 100 - first) / 10; int third = (num % 1000 - second) / 100; int four = (num % 10000) / 1000; System.out.println(first + \" \" + second + \" \" + third + \" \" + four); first = (first + 5)%10; second = (second + 5)%10; third = (third + 5)%10; four = (four + 5)%10; System.out.println(first + \" \" + second + \" \" + third + \" \" + four); int temp; temp = first; first = four; four = temp; temp = second; second = third; third = temp; System.out.println(first * 1000 + second * 100 + third * 10 + four); } } ","date":"2021-02-26","objectID":"/posts/java%E5%9F%BA%E7%A1%80%E7%BB%83%E4%B9%A0%E9%A2%98/:32:0","tags":["java"],"title":"Java基础练习题","uri":"/posts/java%E5%9F%BA%E7%A1%80%E7%BB%83%E4%B9%A0%E9%A2%98/"},{"categories":["java"],"content":"33.数组排序 public class reverse{ public static void main(String args[]){ int Array_origial[] = new int []{1, 2, 3, 5}; Array_origial = reverseArray(Array_origial); traverse(Array_origial); } public static int[] reverseArray(int Array_origial[]){ int temp [] = new int [Array_origial.length]; int foot = temp.length - 1; for(int x = 0; x \u003c temp.length; x++){ temp[x] = Array_origial[foot]; foot --; } return temp; } public static void traverse(int temp[]){ for(int x = 0; x \u003c temp.length; x++) { System.out.print(temp[x] + \" \"); } } } ","date":"2021-02-26","objectID":"/posts/java%E5%9F%BA%E7%A1%80%E7%BB%83%E4%B9%A0%E9%A2%98/:33:0","tags":["java"],"title":"Java基础练习题","uri":"/posts/java%E5%9F%BA%E7%A1%80%E7%BB%83%E4%B9%A0%E9%A2%98/"},{"categories":["java"],"content":"34.左移右移 public class selectnum{ public static void main(String args[]){ int num = 1234567; System.out.println(select(num)); } public static int select(int num){ int fourToseven = (((num % 10000000) - num % 1000) / 1000); return fourToseven; } } ","date":"2021-02-26","objectID":"/posts/java%E5%9F%BA%E7%A1%80%E7%BB%83%E4%B9%A0%E9%A2%98/:34:0","tags":["java"],"title":"Java基础练习题","uri":"/posts/java%E5%9F%BA%E7%A1%80%E7%BB%83%E4%B9%A0%E9%A2%98/"},{"categories":["java"],"content":"35.求奇数的个数 ","date":"2021-02-26","objectID":"/posts/java%E5%9F%BA%E7%A1%80%E7%BB%83%E4%B9%A0%E9%A2%98/:35:0","tags":["java"],"title":"Java基础练习题","uri":"/posts/java%E5%9F%BA%E7%A1%80%E7%BB%83%E4%B9%A0%E9%A2%98/"},{"categories":["java"],"content":"36.打印星号 public class asterisk{ public static void main(String args[]){ int data[] = {1, 2, 3, 4, 5, 6, 7}; for(int y = 0; y \u003c data.length; y++){ printaster(data[y]); } } public static void printaster(int num){ for(int x = 1; x \u003c= num; x++){ System.out.print(\"*\"); } System.out.println(\"\"); } } ","date":"2021-02-26","objectID":"/posts/java%E5%9F%BA%E7%A1%80%E7%BB%83%E4%B9%A0%E9%A2%98/:36:0","tags":["java"],"title":"Java基础练习题","uri":"/posts/java%E5%9F%BA%E7%A1%80%E7%BB%83%E4%B9%A0%E9%A2%98/"},{"categories":["java"],"content":"37.最大最小交换 public class arrayChange{ public static void main(String args[]){ int Array [] = new int[] {11, 1, 0, 6, 5}; int positionMax = findMax(Array); int positionMin = findMin(Array); int changeMax [] = changeMax(Array, positionMax); System.out.println(\"替换最大的元素后:\"); traverse(changeMax); int changeMin [] = changeMin(changeMax, positionMin); System.out.println(); System.out.println(\"替换最小的元素后:\"); traverse(changeMin); } public static int findMax(int temp[]){ int max = 0; for(int x = 1; x \u003c temp.length; x++) { if(temp[x] \u003e temp[max]){max = x;}; } return max; } public static int findMin(int temp[]){ int min = 0; for(int x = 1; x \u003c temp.length; x++) { if(temp[x] \u003c temp[min]){min = x;}; } return min; } public static int[] changeMax(int temp[], int position){ int tempNum = temp[0]; temp[0] = temp[position]; temp[position] = tempNum; return temp; } public static int[] changeMin(int temp[], int position){ int tempNum = temp[temp.length - 1]; temp[temp.length - 1] = temp[position]; temp[position] = tempNum; return temp; } public static void traverse(int temp[]){ for(int x = 0 ;x \u003c temp.length; x++) { System.out.print(temp[x] + \" \"); } } } ","date":"2021-02-26","objectID":"/posts/java%E5%9F%BA%E7%A1%80%E7%BB%83%E4%B9%A0%E9%A2%98/:37:0","tags":["java"],"title":"Java基础练习题","uri":"/posts/java%E5%9F%BA%E7%A1%80%E7%BB%83%E4%B9%A0%E9%A2%98/"},{"categories":["java"],"content":"38.输入数字求和 public class numsum{ public static void main(String args[]){ System.out.println(num(2,5)); } public static int num (int a, int b){ if (b == 1) return a; if (b == 2) return a*10 + a + num(a, 1) ; else{return num(a, b-1)*10 + a + num(a, b - 2);} } } ","date":"2021-02-26","objectID":"/posts/java%E5%9F%BA%E7%A1%80%E7%BB%83%E4%B9%A0%E9%A2%98/:38:0","tags":["java"],"title":"Java基础练习题","uri":"/posts/java%E5%9F%BA%E7%A1%80%E7%BB%83%E4%B9%A0%E9%A2%98/"},{"categories":["java"],"content":"39.求最大公约数及最小公倍数 public class elimination{ public static void main(String args[]){ int m = 12; int n = 30; System.out.println(eli(m, n) + \"是最大公约数\"); System.out.println(((m * n) / eli(m, n)) + \"是最小公倍数\"); } public static int eli(int m, int n){ int c = m % n; if (c == 0){ return n; }else {return eli(n, c);} } } ","date":"2021-02-26","objectID":"/posts/java%E5%9F%BA%E7%A1%80%E7%BB%83%E4%B9%A0%E9%A2%98/:39:0","tags":["java"],"title":"Java基础练习题","uri":"/posts/java%E5%9F%BA%E7%A1%80%E7%BB%83%E4%B9%A0%E9%A2%98/"},{"categories":["java"],"content":"40.分数累加 public class acc{ public static void main(String args[]){ int num1=2; int num2=3; System.out.println(sum(num1)); System.out.println(sum(num2)); } public static double sum(int num){ double sum = 0; if (num % 2 == 0){ for(double i = 2.0; i \u003c= num; i+=2) { sum += (1)/i; } }else{ for(double i = 1.0; i \u003c= num; i+=2){ sum += (1)/i; } } return sum; } } ","date":"2021-02-26","objectID":"/posts/java%E5%9F%BA%E7%A1%80%E7%BB%83%E4%B9%A0%E9%A2%98/:40:0","tags":["java"],"title":"Java基础练习题","uri":"/posts/java%E5%9F%BA%E7%A1%80%E7%BB%83%E4%B9%A0%E9%A2%98/"},{"categories":["java"],"content":"41.自由落体 public class rec{ public static void main(String args[]){ double meter = 100; int num = 10; for(int x = 1; x \u003c= num-1; x++) { meter += high(x) * 2; } System.out.println(\"第10次落地时共经过了\" + meter + \"米\"); System.out.println(\"第10次反弹有\" + high(10) + \"米\"); } public static double high(int num) { if (num == 1) return 50; else {return (high( num - 1) / 2);} } } ","date":"2021-02-26","objectID":"/posts/java%E5%9F%BA%E7%A1%80%E7%BB%83%E4%B9%A0%E9%A2%98/:41:0","tags":["java"],"title":"Java基础练习题","uri":"/posts/java%E5%9F%BA%E7%A1%80%E7%BB%83%E4%B9%A0%E9%A2%98/"},{"categories":["java"],"content":"42.不死神兔子 public class rabbit{ public static void main(String args[]){ int sum = 0; for(int day = 1; day \u003c= 31; day++){ sum += count(day); } System.out.println(sum); } public static int count(int day) { if (day == 1){ return 1; }else if (day == 2){ return 1; }else{return count(day - 1) + count(day - 2);} } } ","date":"2021-02-26","objectID":"/posts/java%E5%9F%BA%E7%A1%80%E7%BB%83%E4%B9%A0%E9%A2%98/:42:0","tags":["java"],"title":"Java基础练习题","uri":"/posts/java%E5%9F%BA%E7%A1%80%E7%BB%83%E4%B9%A0%E9%A2%98/"},{"categories":["java"],"content":"43.猴子吃桃子问题 public class monkey{ public static void main(String args[]){ System.out.println(peach(10)); } public static int peach(int day){ if (day == 1){return 1;} else { return peach( day - 1 ) * 2 + 1; } } } ","date":"2021-02-26","objectID":"/posts/java%E5%9F%BA%E7%A1%80%E7%BB%83%E4%B9%A0%E9%A2%98/:43:0","tags":["java"],"title":"Java基础练习题","uri":"/posts/java%E5%9F%BA%E7%A1%80%E7%BB%83%E4%B9%A0%E9%A2%98/"},{"categories":["java"],"content":"44.球赛 ","date":"2021-02-26","objectID":"/posts/java%E5%9F%BA%E7%A1%80%E7%BB%83%E4%B9%A0%E9%A2%98/:44:0","tags":["java"],"title":"Java基础练习题","uri":"/posts/java%E5%9F%BA%E7%A1%80%E7%BB%83%E4%B9%A0%E9%A2%98/"},{"categories":["java"],"content":"45.递归求阶乘 public class renum{ public static void main(String args[]){ System.out.println(rec(5)); } public static int rec(int num) { if(num == 1) { return 1; }else{return rec(num - 1) * num;} } } ","date":"2021-02-26","objectID":"/posts/java%E5%9F%BA%E7%A1%80%E7%BB%83%E4%B9%A0%E9%A2%98/:45:0","tags":["java"],"title":"Java基础练习题","uri":"/posts/java%E5%9F%BA%E7%A1%80%E7%BB%83%E4%B9%A0%E9%A2%98/"},{"categories":["java"],"content":"46.求岁数 public class age{ public static void main(String args[]){ System.out.println(whatAge(5)); } public static int whatAge(int people){ if(people == 1){ return 10; } else{ return whatAge(people - 1) + 2; } } } ","date":"2021-02-26","objectID":"/posts/java%E5%9F%BA%E7%A1%80%E7%BB%83%E4%B9%A0%E9%A2%98/:46:0","tags":["java"],"title":"Java基础练习题","uri":"/posts/java%E5%9F%BA%E7%A1%80%E7%BB%83%E4%B9%A0%E9%A2%98/"},{"categories":["java"],"content":"47.插入数字 ","date":"2021-02-26","objectID":"/posts/java%E5%9F%BA%E7%A1%80%E7%BB%83%E4%B9%A0%E9%A2%98/:47:0","tags":["java"],"title":"Java基础练习题","uri":"/posts/java%E5%9F%BA%E7%A1%80%E7%BB%83%E4%B9%A0%E9%A2%98/"},{"categories":["java"],"content":"48.移动位置 public class move{ public static void main(String args[]){ int data[] = {1, 2, 3, 4, 5, 6, 7}; movePosition(data); } public static void movePosition(int data[]){ int middle; if(data.length % 2 == 0){ middle = data.length / 2; int tmpData[] = new int[middle]; for(int i = 0, x = middle; i \u003c middle; i++, x++) { tmpData[i] = data[i]; data[i] = data[x]; data[x] = tmpData[i]; } } else { middle = (data.length - 1) / 2; int tmpData[] = new int[middle]; for(int i = 0, x = middle+1; i \u003c middle; i++, x++) { tmpData[i] = data[i]; data[i] = data[x]; data[x] = tmpData[i]; } }; travel(data); } public static void travel(int data[]){ for(int j = 0; j \u003c data.length; j++){ System.out.print(data[j] + \" \"); } } } ","date":"2021-02-26","objectID":"/posts/java%E5%9F%BA%E7%A1%80%E7%BB%83%E4%B9%A0%E9%A2%98/:48:0","tags":["java"],"title":"Java基础练习题","uri":"/posts/java%E5%9F%BA%E7%A1%80%E7%BB%83%E4%B9%A0%E9%A2%98/"},{"categories":["java"],"content":"49.报数 ","date":"2021-02-26","objectID":"/posts/java%E5%9F%BA%E7%A1%80%E7%BB%83%E4%B9%A0%E9%A2%98/:49:0","tags":["java"],"title":"Java基础练习题","uri":"/posts/java%E5%9F%BA%E7%A1%80%E7%BB%83%E4%B9%A0%E9%A2%98/"},{"categories":["java"],"content":"50.猴子分桃 public class monkey{ public static void main(String args[]){ boolean flag = false; for(int i = 1; i\u003c=5000; i++) { if(peach(i, flag) == true){break;} } } public static boolean peach(int i, boolean flag){ if((1.25 * i + 1) % 5 == 1 ){ //第一只猴子分之前 if((1.25 * (1.25 * i + 1) + 1) % 5 == 1){ //第二只猴子分之前 if((1.25 * (1.25 * (1.25 * i + 1) + 1) + 1) % 5 == 1){ //第三只猴子分之前 if((1.25 * (1.25 * (1.25 * (1.25 * i + 1) + 1) + 1) + 1) % 5 == 1){ //第四只猴子分之前 if((1.25 * (1.25 * (1.25 * (1.25 * (1.25 * i + 1) + 1) + 1) + 1)+1) % 5 == 1){ //第五只猴子分之前 System.out.println(i); flag = true; } else {return flag;}; } else {return flag;}; } else {return flag;}; } else {return flag;}; } return flag; } } ","date":"2021-02-26","objectID":"/posts/java%E5%9F%BA%E7%A1%80%E7%BB%83%E4%B9%A0%E9%A2%98/:50:0","tags":["java"],"title":"Java基础练习题","uri":"/posts/java%E5%9F%BA%E7%A1%80%E7%BB%83%E4%B9%A0%E9%A2%98/"},{"categories":["鸟哥的私房菜"],"content":"主机规划与磁盘分区 ","date":"2021-02-25","objectID":"/posts/linux_5/:0:0","tags":["linux"],"title":"Linux_5","uri":"/posts/linux_5/"},{"categories":["鸟哥的私房菜"],"content":"Linux与硬件的搭配 ","date":"2021-02-25","objectID":"/posts/linux_5/:1:0","tags":["linux"],"title":"Linux_5","uri":"/posts/linux_5/"},{"categories":["鸟哥的私房菜"],"content":"各硬件设备在Linux中的文件名 虚拟机中的磁盘名称是什么? 在虚拟机的环境下，为了加速会使用/dev/vd[a-p]这种设备文件名。 SATA接口的磁盘名称是什么? 由于SATA/USB/SAS等硬盘接口都是SCSI模块来驱动，因此这些接口的磁盘设备文件都是/dev/sd[a-p]的格式。 ","date":"2021-02-25","objectID":"/posts/linux_5/:1:1","tags":["linux"],"title":"Linux_5","uri":"/posts/linux_5/"},{"categories":["鸟哥的私房菜"],"content":"磁盘分区 ","date":"2021-02-25","objectID":"/posts/linux_5/:2:0","tags":["linux"],"title":"Linux_5","uri":"/posts/linux_5/"},{"categories":["鸟哥的私房菜"],"content":"MSDOS(MBR)与GTP磁盘分区表 MSDOS的结构是什么样的？ MBR (Master Boot Record, 主要开机记录区) 这个区在磁盘的第一个扇区，其放转置着开机管理程序记录区与分区表 通常为512 Bytes 主要开机记录区(Master Boot Record, MBR): 可以安装开机管理程序的地方。 446 Bytes 分区表(partition table): 记录整颗硬盘分区的状态 64 Bytes 为什么要分区？ 数据安全 重装系统时，各个分区之间不会相互影响 性能考虑 P1: /dev/sda1 P2: /dev/sda2 P3: /dev/sda3 P4: /dev/sda4 分区表只记录四组数据，则分出多于四个分区是如何实现的？ P1 为主要分区(Primary) p2 为延伸分区(Extended) p2分出来的L1, L2, L3, L4, L5为逻辑分区(logical partition) 设备文件名分别为: P1: /dev/sda1 P2: /dev/sda2 L1: /dev/sda5 L2: /dev/sda6 L3: /dev/sda7 L4: /dev/sda8 L5: /dev/sda9 /dev/sda3与/dev/sda4是保留给Primary或Extended用的，逻辑分区的设备名称号码由5号开始 ? 当D与E盘均属于延伸分区内的逻辑分区，将两个分区删除，然后再重新创建一个新的分区，能够在不影响其他分区的情况下，将两个分区的容量整合成为一个。 当D与E分属于主分区与逻辑分区时，两者不能够整合在一起，除非将延伸分区破坏掉后再重新分区。但如此一来会影响到所有的逻辑分区。 ? 因为P(Primary) + E(Extended)最多只能有四个，若有4个P了，即便还有剩余容量，因为无法再继续分区，所以容量就被浪费掉了 想要将所有的四笔记录都花光，则P+P+P+E比较好 因为P(Primary) + E(extended)最多为4个 P+P+P+E的环境 P+E的环境 为什么会出现GPT? 操作系统无法抓取到2.2T以上的磁盘容量 MBR仅有一个区块，若被破坏后，经常无法或很难援救 MBR内的存放开机管理程序的区块仅446Bytes, 无法容纳较多的程序码 GPT的结构是什么样的？ GPT: GUID partition table LBA0 (MBR相容区块) 446 Bytes 第一阶段开机管理程序 特殊标志分区,用来表示此磁盘为GPT格式 LBA1 (GPT表头纪录) 分区表本身的位置与大小 备份用的GPT分区(最后34个LBA区块)放置位置 分区表的检验机制码(CRC32) LBA2-33 (实际纪录分区信息处) 每个LBA可以记录4笔分区记录， 即32*4笔记录 每个LBA有512 Bytes, 则每笔记录用于128 Bytes的空间 GPT在每笔记录中分别提供了 64 bits 来记载开始/结束的磁区号码 对于GPT分区表对于单一分区来说，它的最大容量为:$2^{64} *512bytes = 2^{63} * 1Kbytes = 2^{33}*TB = 8 ZB$ ","date":"2021-02-25","objectID":"/posts/linux_5/:2:1","tags":["linux"],"title":"Linux_5","uri":"/posts/linux_5/"},{"categories":["鸟哥的私房菜"],"content":"开机流程中的BIOS与开机检测程序 ","date":"2021-02-25","objectID":"/posts/linux_5/:2:2","tags":["linux"],"title":"Linux_5","uri":"/posts/linux_5/"},{"categories":["鸟哥的私房菜"],"content":"主机的服务规划与硬件的关系 ","date":"2021-02-25","objectID":"/posts/linux_5/:2:3","tags":["linux"],"title":"Linux_5","uri":"/posts/linux_5/"},{"categories":["鸟哥的私房菜"],"content":"假设你的主机为虚拟机，里面仅有一颗VirtIO接口的磁盘，请问他在Linux操作系统里面的设备文件名为何？ 虚拟机使用的是/dev/vd[a-p]来命名的 所以其名为/dev/vda ","date":"2021-02-22","objectID":"/posts/linux_4/:0:1","tags":["linux"],"title":"Linux_4","uri":"/posts/linux_4/"},{"categories":["鸟哥的私房菜"],"content":"如果你的PC上面有两个SATA磁盘以及一个USB磁盘，而主板上面有六个SATA的插槽，这两个磁盘分别安插在主板上的SATA1, SATA5插槽上，请问这三个磁盘Linux中设备文件名为何？ USB闪存盘与SATA相同，均用/dev/sd[a-p]来命名的 且采用侦测到的顺序来决定设备文件名，并非与实际插槽代号有关 SATA1: /dev/sda SATA5: /dev/sdb USB磁盘(开机完成后才被系统捉到): /dev/sdc ","date":"2021-02-22","objectID":"/posts/linux_4/:0:2","tags":["linux"],"title":"Linux_4","uri":"/posts/linux_4/"},{"categories":["鸟哥的私房菜"],"content":"什么是MSDOS（MBR）分区 ","date":"2021-02-22","objectID":"/posts/linux_4/:0:3","tags":["linux"],"title":"Linux_4","uri":"/posts/linux_4/"},{"categories":["鸟哥的私房菜"],"content":"Linux是什么? ","date":"2021-02-20","objectID":"/posts/linux_3/:0:0","tags":["linux"],"title":"Linux_3","uri":"/posts/linux_3/"},{"categories":["鸟哥的私房菜"],"content":"关于GNU计划、自由软件与开源代码 ","date":"2021-02-20","objectID":"/posts/linux_3/:1:0","tags":["linux"],"title":"Linux_3","uri":"/posts/linux_3/"},{"categories":["鸟哥的私房菜"],"content":"什么是Free Software? Free Software 即自由软件 自由软件关乎的是自由而非价格 它允许任何人使用、复制和/或再分发 ","date":"2021-02-20","objectID":"/posts/linux_3/:1:1","tags":["linux"],"title":"Linux_3","uri":"/posts/linux_3/"},{"categories":["鸟哥的私房菜"],"content":"开源许可证GPL、BSD、MIT、Mozilla、Apache和LGPL都有什么区别？1 GPL: - 只要在一个软件中使用GPL协议的产品，则该软件产品必须也采用GPL协议，即开源和免费 BSD: - “为所欲为\"的BSD协议需要满足三个条件 MIT: MIT和BSD一样宽范的许可协议，作者只想保留版权，而无任何其他限制，必须在发行版里包含原许可协议的声明。 LGPL: 主要是为类库使用设计的开源协议。LGPL允许商业软件通过类库引用方式使用LGPL类库而不需要开源商业软件的代码 开源许可证GPL、BSD、MIT、Mozilla、Apache和LGPL的区别 ↩︎ ","date":"2021-02-20","objectID":"/posts/linux_3/:1:2","tags":["linux"],"title":"Linux_3","uri":"/posts/linux_3/"},{"categories":["鸟哥的私房菜"],"content":"个人电脑架构与相关设备元件 ","date":"2021-02-16","objectID":"/posts/linux_2/:0:0","tags":["linux"],"title":"Linux_2","uri":"/posts/linux_2/"},{"categories":["鸟哥的私房菜"],"content":"Intel芯片架构 ","date":"2021-02-16","objectID":"/posts/linux_2/:1:0","tags":["linux"],"title":"Linux_2","uri":"/posts/linux_2/"},{"categories":["鸟哥的私房菜"],"content":"Intel芯片架构-什么是南北桥?它们是干什么的？1 北桥: 负责链接速度较快的元件(在目前的主流架构中，大多将北桥内存控制器整合到CPU封装中了) CPU 内存 显卡接口等 南桥: 负责链接速度较慢的元件 硬盘 USB 网卡 ","date":"2021-02-16","objectID":"/posts/linux_2/:1:1","tags":["linux"],"title":"Linux_2","uri":"/posts/linux_2/"},{"categories":["鸟哥的私房菜"],"content":"Intel芯片架构-为什么现在的主流架构中，要将北桥内存控制器整合到CPU中？ 首先, 北桥是负责链接速度较快的元件(内存), 然后，若CPU需要与内存交流，就需要经过北桥，这样就会瓜分掉北桥的总可用带宽，影响其他元件的沟通。最后，若将内存控制器整合到CPU后，CPU与内存之间的沟通是直接交流，速度较快，而且消耗更多的带宽。 ","date":"2021-02-16","objectID":"/posts/linux_2/:1:2","tags":["linux"],"title":"Linux_2","uri":"/posts/linux_2/"},{"categories":["鸟哥的私房菜"],"content":"Intel芯片架构-什么是CPU的频率？2 即CPU每秒钟可以进行的工作次数 速度单位使用的是十进制 即$3.5 \\times 10 ^ 9$MHz ","date":"2021-02-16","objectID":"/posts/linux_2/:1:3","tags":["linux"],"title":"Linux_2","uri":"/posts/linux_2/"},{"categories":["鸟哥的私房菜"],"content":"Intel芯片架构-什么是CPU的外频与倍频？什么会有外频和倍频出现？ 外频: CPU与外部元件进行数据传输时的速度 倍频: CPU内部用来加速工作性能的一个倍数 首先，所有的设备都得通过北桥来链接，因此每个设备的工作频率都应该相同。然后，CPU的运算速度应比其他设备要快，所以厂商会在 CPU内部进行加速。 ","date":"2021-02-16","objectID":"/posts/linux_2/:1:4","tags":["linux"],"title":"Linux_2","uri":"/posts/linux_2/"},{"categories":["鸟哥的私房菜"],"content":"Intel芯片架构-如何查看计算机的外频与倍频？ 即总线速度为外频 核心速度 = 倍频 x 总线速度 ","date":"2021-02-16","objectID":"/posts/linux_2/:1:5","tags":["linux"],"title":"Linux_2","uri":"/posts/linux_2/"},{"categories":["鸟哥的私房菜"],"content":"Intel芯片架构-超频指的是超什么频？ 首先，超频是指超外频, 在以前所有的数据都需要通过北桥，但是北桥不可能比CPU快，成为系统性能的瓶颈。其次，在新的CPU设计中，将北桥的功能整合到CPU内，使得CPU直接与内存、显卡进行沟通，CPU的频率设计就不需要考虑外频了，只需要考虑整体的频率。最后，现在的CPU-z中，外频变成100MHZ而倍频可以到30以上。 ","date":"2021-02-16","objectID":"/posts/linux_2/:1:6","tags":["linux"],"title":"Linux_2","uri":"/posts/linux_2/"},{"categories":["鸟哥的私房菜"],"content":"Intel芯片架构-前端总线速度是什么？ 前端总线速度(Front Side Bus) CPU中的所有数据都是由内存提供的 查看内存信息 sudo dmidecode -t memory MT/s 与 MHz有什么关系?3 等价 CPU可能从内存中取得的最快带宽是2400 MHz x 64 bit = 2400 MHz 8 Bytes = 19.2GB/s ","date":"2021-02-16","objectID":"/posts/linux_2/:1:7","tags":["linux"],"title":"Linux_2","uri":"/posts/linux_2/"},{"categories":["鸟哥的私房菜"],"content":"Intel芯片架构-什么是CPU字组大小?4 CPU每次能够处理的数据量称为字组大小(word size) 32位的CPU最多支持最大到4GBytes 如何计算？ 首先, CPU计算的时候不能直接访问硬盘的数据，但是可以直接访问内存里的数据。其次，32位的CPU是指它能寻找到$2^32$个地址，不是存储空间有多大。最后，若一个地址单元为8位，则32位的CPU最多为4GBytes. $2^{32}$个地址 = $2^{32} \\times 8 / 8$ Byte = $2^{22}$ KByte = $2^{12}$ MByte = $2^2$GB = $4$GB ","date":"2021-02-16","objectID":"/posts/linux_2/:1:8","tags":["linux"],"title":"Linux_2","uri":"/posts/linux_2/"},{"categories":["鸟哥的私房菜"],"content":"Intel芯片架构-什么是CPU的超线程? 超线程 Hyper-Threading, HT 线程是操作系统进行运算调动的最小单位, 它被包含在进程之中，是进程中实际运作单位，一个进程中可又并发多个线程。 超线程技术是把一个物理处理器在软件层变成两个逻辑处理器，可以使处理器在某一时刻，同步并行处理更多指令数据。 超线程是一种将CPU内部暂时闲置处理资源充分\"调动\"起来的技术，在多加入一个逻辑处理单元 ，这让CPU可以同时执行多个程序而共享一颗CPU内的资源，当两个线程都同时需要某一个资源时，其中一个要暂时停止，并让出资源，直到这些资源闲置后才能继续。 ","date":"2021-02-16","objectID":"/posts/linux_2/:1:9","tags":["linux"],"title":"Linux_2","uri":"/posts/linux_2/"},{"categories":["鸟哥的私房菜"],"content":"内存 ","date":"2021-02-16","objectID":"/posts/linux_2/:2:0","tags":["linux"],"title":"Linux_2","uri":"/posts/linux_2/"},{"categories":["鸟哥的私房菜"],"content":"内存-什么是动态随机存取内存？ 动态随机存取内存: Dynamic Random Access Memory, DRAM 只有在通电时才能记录与使用，断电后数据就消失，因此也称这种RAM为挥发性内存 ","date":"2021-02-16","objectID":"/posts/linux_2/:2:1","tags":["linux"],"title":"Linux_2","uri":"/posts/linux_2/"},{"categories":["鸟哥的私房菜"],"content":"内存-什么是SDRAM与DDR SDRAM? DDR 是所谓的双倍数据传送速度(Double Data Rate) ","date":"2021-02-16","objectID":"/posts/linux_2/:2:2","tags":["linux"],"title":"Linux_2","uri":"/posts/linux_2/"},{"categories":["鸟哥的私房菜"],"content":"内存-什么是多通道设计? 传统的总线宽度一般大约为64位，为了要加大这个宽度，因此芯片组厂商就将两个内存汇总在一起，如果一支内存可达64位，两支内存可达到128位了 两支内存最好容量大小，型号也最好相同 ","date":"2021-02-16","objectID":"/posts/linux_2/:2:3","tags":["linux"],"title":"Linux_2","uri":"/posts/linux_2/"},{"categories":["鸟哥的私房菜"],"content":"内存-什么是DRAM与SRAM? 动态随机存取内存: Dynamic Random Access Memory, DRAM 静态随机存取内存: Static Random Access Memory, SRAM L2 cache即采用的是SRAM设计，L2内存速度必须要与CPU频率相同，在设计上使用的电晶体较多，且价格较高，且L2内存速度必须要与CPU频率相同，在设计上使用的电晶体较多，价格较高，且不易做成大容量 ","date":"2021-02-16","objectID":"/posts/linux_2/:2:4","tags":["linux"],"title":"Linux_2","uri":"/posts/linux_2/"},{"categories":["鸟哥的私房菜"],"content":"内存-什么是ROM? 只读存储器: Read Only Memory, ROM ROM是一种非挥发性的内存 BIOS(Basic Input Output System)是一套程序，这套程序是写死到主板上面的一个内存芯片中，这个内存芯片在没有通电时也能够将数据记录下来。 ","date":"2021-02-16","objectID":"/posts/linux_2/:2:5","tags":["linux"],"title":"Linux_2","uri":"/posts/linux_2/"},{"categories":["鸟哥的私房菜"],"content":"显卡 ","date":"2021-02-16","objectID":"/posts/linux_2/:3:0","tags":["linux"],"title":"Linux_2","uri":"/posts/linux_2/"},{"categories":["鸟哥的私房菜"],"content":"显卡-假设你的桌面使用1024x768分辨率，且使用全彩色(每个像素占用3Bytes的容量), 请问你的显卡至少需要多少内存才能使用这样的彩度？ 1024 x 768 x 3 Bytes = 2.359296 MBytes ","date":"2021-02-16","objectID":"/posts/linux_2/:3:1","tags":["linux"],"title":"Linux_2","uri":"/posts/linux_2/"},{"categories":["鸟哥的私房菜"],"content":"硬盘与存储设备 ","date":"2021-02-16","objectID":"/posts/linux_2/:4:0","tags":["linux"],"title":"Linux_2","uri":"/posts/linux_2/"},{"categories":["鸟哥的私房菜"],"content":"对于机械硬盘，它的扇区，磁道，柱面都是什么？5 磁道(track): 即不同大小的同心圆 扇区(sector): 磁盘存储数据最小的数据块 - 因为同心圆外圈的圆比较大，占用的面积比内圈多，为了善用这些空间，会将外围的圆分配更多的扇区 柱面(cylinder): 所有盘片上面的同一个磁道组合成所谓的柱面 ","date":"2021-02-16","objectID":"/posts/linux_2/:4:1","tags":["linux"],"title":"Linux_2","uri":"/posts/linux_2/"},{"categories":["鸟哥的私房菜"],"content":"对于机械硬盘-如何计算它的容量？ 容量 = 磁道 x 扇区 x 柱面 x Units ","date":"2021-02-16","objectID":"/posts/linux_2/:4:2","tags":["linux"],"title":"Linux_2","uri":"/posts/linux_2/"},{"categories":["鸟哥的私房菜"],"content":"主板 ","date":"2021-02-16","objectID":"/posts/linux_2/:5:0","tags":["linux"],"title":"Linux_2","uri":"/posts/linux_2/"},{"categories":["鸟哥的私房菜"],"content":"主板-什么是设备的I/O位址与IRQ中断信道? I/O 位址相当于各设备的门牌号码 IRQ 相当于各个门牌连接到邮件中心(CPU)的专门路径 linux下查看IRQ中断信息: cat /proc/interrupts ","date":"2021-02-16","objectID":"/posts/linux_2/:5:1","tags":["linux"],"title":"Linux_2","uri":"/posts/linux_2/"},{"categories":["鸟哥的私房菜"],"content":"主板-COMS与BIOS是什么?有什么不同？ COMS: 主要是记录主板上面的重要参数 - 系统时间 - CPU电压与频率 - 各项设备的I/O位址与IRQ BIOS: 为写入到主板上某一块flash或EEPROM的程序，可以在开机的时候执行，以载入CMOS当中的参数，并尝试调用储存设备中的开机程序。 ","date":"2021-02-16","objectID":"/posts/linux_2/:5:2","tags":["linux"],"title":"Linux_2","uri":"/posts/linux_2/"},{"categories":["鸟哥的私房菜"],"content":"操作系统 ","date":"2021-02-16","objectID":"/posts/linux_2/:6:0","tags":["linux"],"title":"Linux_2","uri":"/posts/linux_2/"},{"categories":["鸟哥的私房菜"],"content":"操作系统-什么是操作系统核心(Kernel)？ 操作系统 Operating System 一组程序: 管理电脑的所有活动以及驱动系统中的所有硬件的程序 CPU开始判断逻辑与运算数值 让内存可以开始载入/读出数据与程序码 让硬盘可以开始被存取 让网卡可以开始传输数据 让所有周边可以开始运行 南北桥架构的演变 ↩︎ CPU-Z的参数怎么看 CPU-Z检测CPU型号全面解析 ↩︎ MT/s=MHz? ↩︎ 32位CPU最多支持4G内存是怎么算出来的？（解惑篇） ↩︎ Vol 072 你的硬盘是如何储存数据的？ ↩︎ ","date":"2021-02-16","objectID":"/posts/linux_2/:6:1","tags":["linux"],"title":"Linux_2","uri":"/posts/linux_2/"},{"categories":["鸟哥的私房菜"],"content":"电脑: 辅助人脑的好工具 ","date":"2021-02-15","objectID":"/posts/linux_1/:0:0","tags":["linux"],"title":"Linux_1","uri":"/posts/linux_1/"},{"categories":["鸟哥的私房菜"],"content":"计算机硬件的五大单元 ","date":"2021-02-15","objectID":"/posts/linux_1/:1:0","tags":["linux"],"title":"Linux_1","uri":"/posts/linux_1/"},{"categories":["鸟哥的私房菜"],"content":"计算机硬件有哪五大单元？ 输入单元 输出单元 控制单元 算数逻辑单元 存储单元 ","date":"2021-02-15","objectID":"/posts/linux_1/:1:1","tags":["linux"],"title":"Linux_1","uri":"/posts/linux_1/"},{"categories":["鸟哥的私房菜"],"content":"cpu中包含哪些单元？ 控制、算术逻辑单元 ","date":"2021-02-15","objectID":"/posts/linux_1/:1:2","tags":["linux"],"title":"Linux_1","uri":"/posts/linux_1/"},{"categories":["鸟哥的私房菜"],"content":"CPU-什么是CPU的架构？ 首先，使用软件都需要经过CPU内部的微指令集来达成才行。其次，这些指令集的设计主要被分为两种设计理念，也就是两种主要的CPU架构: 分别为:精简指令集(RISC)与复杂指令集(CISC)系统。 ","date":"2021-02-15","objectID":"/posts/linux_1/:1:3","tags":["linux"],"title":"Linux_1","uri":"/posts/linux_1/"},{"categories":["鸟哥的私房菜"],"content":"CPU-什么是精简指令集(RISC)？ RISC 即 Reduced Instruction Set Computer. 其特点是: 每个指令的执行时间很短 完成的动作单纯 指令的执行性能较佳 若做复杂的事情，需要多个指令来完成 其应用： 甲骨文的SPARC CPU 学术领域的大型工作站 银行金融体系的主要服务器 IBM的Power Architecture 索尼的Play Station 3 安谋(ARM Holdings)的ARM CPU 手机 PDA(Personaldigital assistant) 导航系统 网络设备(交换器、路由器) ","date":"2021-02-15","objectID":"/posts/linux_1/:1:4","tags":["linux"],"title":"Linux_1","uri":"/posts/linux_1/"},{"categories":["鸟哥的私房菜"],"content":"CPU-什么是复杂指令集(CISC)? CISC 即 Complex Instruction Set Computer. 其特点是: 每个微指令集可又执行一些较低阶的硬件操作 指令数目多而且复杂 每条指令的长度并不相同 ","date":"2021-02-15","objectID":"/posts/linux_1/:1:5","tags":["linux"],"title":"Linux_1","uri":"/posts/linux_1/"},{"categories":["鸟哥的私房菜"],"content":"CPU-所谓的x86架构是如何而来的？ 因为最早的Intel发展出来的CPU代号称为8086, 后来依此架构以开发出80286, 80386…, 因此这种架构的CPU就被称为x86架构 ","date":"2021-02-15","objectID":"/posts/linux_1/:1:6","tags":["linux"],"title":"Linux_1","uri":"/posts/linux_1/"},{"categories":["鸟哥的私房菜"],"content":"CPU-所谓的x86_64中的64指的是什么？ 64CPU代表CPU一次可以读写64bits这么多的数据 64bits有多大？ 即2的64方 ","date":"2021-02-15","objectID":"/posts/linux_1/:1:7","tags":["linux"],"title":"Linux_1","uri":"/posts/linux_1/"},{"categories":["鸟哥的私房菜"],"content":"CPU-如何在linux下查看当前CPU所支持的指令集？ cat /proc/cpuinfo ","date":"2021-02-15","objectID":"/posts/linux_1/:1:8","tags":["linux"],"title":"Linux_1","uri":"/posts/linux_1/"},{"categories":["鸟哥的私房菜"],"content":"容量单位-计算中的容量单位有哪些？它们如何进行转化？ 文件大小使用的是二进制的方式 进位制 Kilo Mega Giga Tera Peta exta Zetta 二进制 1024 1024K 1024M 1024G 1024T 1024P 1024E 十进制 1000 1000K 1000M 1000G 1000T 1000P 1000E ","date":"2021-02-15","objectID":"/posts/linux_1/:1:9","tags":["linux"],"title":"Linux_1","uri":"/posts/linux_1/"},{"categories":["鸟哥的私房菜"],"content":"容量单位-假设你今天购买了500GB的硬盘一颗，但是格式化完毕后却剩下460GB左右的容量，这是什么原因? 因为一般的硬盘制造商会使用十进制的单位 500GByte 代表为 500 * 1000 * 1000 * 1000 Byte 转成文件的容量单位时使用二进制(1024为底)，所以就成466GB左右容量 ","date":"2021-02-15","objectID":"/posts/linux_1/:1:10","tags":["linux"],"title":"Linux_1","uri":"/posts/linux_1/"},{"categories":["鸟哥的私房菜"],"content":"速度单位-计算中的速度单位有哪些？它们如何进行转化？ CPU的运算速度常用MHZ或者是GHZ 网络常使用的单位为Mbps即Mbits per second 进位制 Kilo Mega Giga Tera Peta exta Zetta 二进制 1024 1024K 1024M 1024G 1024T 1024P 1024E 十进制 1000 1000K 1000M 1000G 1000T 1000P 1000E ","date":"2021-02-15","objectID":"/posts/linux_1/:1:11","tags":["linux"],"title":"Linux_1","uri":"/posts/linux_1/"},{"categories":["鸟哥的私房菜"],"content":"速度单位-20M/5M传输速度，如果转成文件大小的Byte时，其实理论最大传输为多少？ 网络常使用的单位为Mbps即Mbits per second 其实理论最大的传输值为 每秒2.5MByte/每秒625KByte的下载/上传速度 ","date":"2021-02-15","objectID":"/posts/linux_1/:1:12","tags":["linux"],"title":"Linux_1","uri":"/posts/linux_1/"},{"categories":["hugo"],"content":"Hugo is one of the most popular open-source static site generators. Basics ","date":"2021-02-01","objectID":"/posts/hugo/:0:0","tags":["hugo"],"title":"Hugo","uri":"/posts/hugo/"},{"categories":["hugo"],"content":"1 Requirements install hugo sudo pacman -S hugo ","date":"2021-02-01","objectID":"/posts/hugo/:1:0","tags":["hugo"],"title":"Hugo","uri":"/posts/hugo/"},{"categories":["hugo"],"content":"2 Installation ","date":"2021-02-01","objectID":"/posts/hugo/:2:0","tags":["hugo"],"title":"Hugo","uri":"/posts/hugo/"},{"categories":["hugo"],"content":"2.1 Create a Project hugo new site my_website cd my_website ","date":"2021-02-01","objectID":"/posts/hugo/:2:1","tags":["hugo"],"title":"Hugo","uri":"/posts/hugo/"},{"categories":["hugo"],"content":"2.2 Install the Theme git clone https://github.com/dillonzq/LoveIt.git themes/LoveIt ","date":"2021-02-01","objectID":"/posts/hugo/:2:2","tags":["hugo"],"title":"Hugo","uri":"/posts/hugo/"},{"categories":["hugo"],"content":"2.3 Configuration my_website/config.toml baseURL = \"https://fengqigang.cn\" defaultContentLanguage = \"en\" languageCode = \"en\" title = \"xiaonan's Blog\" theme = \"LoveIt\" [params] version=\"0.2.X\" defaultTheme = \"auto\" dataFormat = \"2006-01-02\" [parmas.app] title = \"Xiaonan's Blog\" noFavicon = false svgFavicon = \"\" [params.search] enable = true type = \"lunr\" contentLength = 4000 placeholder = \"\" maxResultLength = 10 snippetLength = 30 highlightTag = \"em\" absoluteURL = false [params.search.algolia] index = \"\" appID = \"\" searchKey = \"\" [params.header] desktopMode = \"fixed\" mobileMode = \"auto\" [params.footer] enable = true custom = '' hugo = true copyright = true author = true since = 2019 [params.section] paginate = 20 dataFormat = \"01-02\" rss = 10 [params.list] paginate = 20 dataFormat = \"01-02\" rss = 10 [params.home] rss = 10 [params.home.profile] enable = true gravatarEmail = \"\" avatarURL = \"/images/avatar.png\" title = \"Xiaonan's Blog\" subtitle = \"\" typeit = true social = true disclaimer = \"\" [params.home.posts] enable = true paginate = 6 defaultHiddenFromHomePage = false [params.social] GitHub = \"guangsizhongbin\" Email = \"guangsizhongbin@gmail.com\" RSS = true [params.page] hiddenFromHomePage = false hiddenFromSearch = false twemoji = false lightgallery = false ruby = true fraction = true fontawesome = true linkToMarkdown = true rssFullText = false [parmas.page.toc] enable = true keepStatic = true auto = true [parmas.page.math] enable = true blockLeftDelimiter = \"\" blockRightDelimiter = \"\" copyTex = true mhchem = true [params.page.code] copy = true maxShowLines = 10 [menu] [[menu.main]] identifier = \"posts\" pre = \"\" post = \"\" name = \"Posts\" url = \"/posts/\" title = \"\" weight = 1 [[menu.main]] identifier = \"tags\" pre = \"\" post = \"\" name = \"Tags\" url = \"/Tags/\" title = \"\" weight = 2 [[menu.main]] identifier = \"categories\" pre = \"\" post = \"\" name = \"categories\" url = \"/categories/\" title = \"\" weight = 3 [markup] [markup.highlight] codeFences = true guessSyntax = true lineNos = true lineNumberInTable = true noClasses = false [markup.goldmark] [markup.goldmark.extensions] definitionList = true footnote = true linkify = true strikethrough = true table = true taskList = true typographer = true [markup.goldmark.renderer] unsafe = true [markup.tableOfContents] startLevel = 2 endLevel = 6 [author] name = \"fengxiaonan\" email = \"gaungsizhongbin@gmail.com\" link = \"fengqigang.cn\" [outputs] home = [\"HTML\", \"RSS\", \"JSON\"] ","date":"2021-02-01","objectID":"/posts/hugo/:2:3","tags":["hugo"],"title":"Hugo","uri":"/posts/hugo/"},{"categories":["hugo"],"content":"2.4 Create Post 2.4.1 Setting archetypes my_website/archetypes/default.md --- title: \"{{ replace .Name \"-\" \" \" | title }}\" date: {{ .Date }} lastmod: {{ now.Format \"2006-01-02\"}} author: \"xiaonan\" tags: [] categories: [] featuredIamge: \"\" featuredImagePreview: \"\" draft: true --- 2.4.2 Create a new website hugo new posts/first_post.md ","date":"2021-02-01","objectID":"/posts/hugo/:2:4","tags":["hugo"],"title":"Hugo","uri":"/posts/hugo/"},{"categories":["hugo"],"content":"2.5 Launching the Website Locally hugo serve Go to http://localhost:1313 ","date":"2021-02-01","objectID":"/posts/hugo/:2:5","tags":["hugo"],"title":"Hugo","uri":"/posts/hugo/"},{"categories":["hugo"],"content":"2.6 Build the Website hugo Markdown Syntax ","date":"2021-02-01","objectID":"/posts/hugo/:2:6","tags":["hugo"],"title":"Hugo","uri":"/posts/hugo/"},{"categories":["hugo"],"content":"1 Blockquotes Add \u003e before any text you want to quote: \u003e **Fusion Drive** combines a hard drive with a flash storage (solid-state drive) and presents it as a single logical volume with the space of both drives combined. The rendered output looks like this: Fusion Drive combines a hard drive with a flash storage (solid-state drive) and presents it as a single logical volume with the space of both drives combined. ","date":"2021-02-01","objectID":"/posts/hugo/:3:0","tags":["hugo"],"title":"Hugo","uri":"/posts/hugo/"},{"categories":["hugo"],"content":"2 Task Lists - [x] Write the press release - [ ] Update the website - [ ] Contact the media The rendered output looks like this: Write the press release Update the website Contact the media ","date":"2021-02-01","objectID":"/posts/hugo/:4:0","tags":["hugo"],"title":"Hugo","uri":"/posts/hugo/"},{"categories":["hugo"],"content":"3. Tables | Option | Description | |--------|-------------| | data | path to data files to supply the data that will be passed into templates. | | engine | engine to be used for processing templates. Handlebars is the default. | | ext | extension to be used for dest files. | The rendered output looks like this: Option Description data path to data files to supply the data that will be passed into templates. engine engine to be used for processing templates. Handlebars is the default. ext extension to be used for dest files. ","date":"2021-02-01","objectID":"/posts/hugo/:5:0","tags":["hugo"],"title":"Hugo","uri":"/posts/hugo/"},{"categories":["hugo"],"content":"4 Footnotes This is a digital footnote[^1]. This is a footnote with \"label\"[^label] [^1]: This is a digital footnote [^label]: This is a footnote with \"label\" This is a digital footnote1. This is a footnote with “label”2 This is a digital footnote ↩︎ This is a footnote with “label” ↩︎ ","date":"2021-02-01","objectID":"/posts/hugo/:6:0","tags":["hugo"],"title":"Hugo","uri":"/posts/hugo/"},{"categories":["nvim"],"content":"1 snippet \"(\\w+).par\" \"Parenthesis (postfix)\" r (`!p snip.rv = match.group(1)`$1)$0 endsnippet Tip \\w+ 匹配一个或多个字母、数字、下划线 () 分组 $0 结束位置 $1 结果时光标位置 ","date":"2021-01-30","objectID":"/posts/ultisnip%E4%B8%AD%E7%9A%84%E6%AD%A3%E5%88%99/:1:0","tags":["ultisnips"],"title":"UltiSnip中的正则","uri":"/posts/ultisnip%E4%B8%AD%E7%9A%84%E6%AD%A3%E5%88%99/"},{"categories":["nvim"],"content":"2 snippet \"([^\\s].*)\\.return\" \"Return (postfix)\" r return `!p snip.rv = match.group(1)`$0 endsnippet Note \\s 匹配所有空白符，包括换行 [^\\s] 除去所有空白符，包括换行 ","date":"2021-01-30","objectID":"/posts/ultisnip%E4%B8%AD%E7%9A%84%E6%AD%A3%E5%88%99/:1:1","tags":["ultisnips"],"title":"UltiSnip中的正则","uri":"/posts/ultisnip%E4%B8%AD%E7%9A%84%E6%AD%A3%E5%88%99/"},{"categories":["nvim"],"content":"3 snippet t \u003ctag\u003e${VISUAL:inside text/should/is/g}\u003c/tag\u003e endsnippet Note ${VISUAL} The syntax is: ${VISUAL:default/search/replace/option} ","date":"2021-01-30","objectID":"/posts/ultisnip%E4%B8%AD%E7%9A%84%E6%AD%A3%E5%88%99/:1:2","tags":["ultisnips"],"title":"UltiSnip中的正则","uri":"/posts/ultisnip%E4%B8%AD%E7%9A%84%E6%AD%A3%E5%88%99/"},{"categories":["nvim"],"content":"4 snippet \"be(gin)?( (\\S+))?\" \"begin{} / end{}\" br \\begin{${1:`!p snip.rv = match.group(3) if match.group(2) is not None else \"something\"`}} ${2:${VISUAL}} \\end{$1}$0 endsnippet Note ? 表示匹配前面的子表达式零次或一次 be(gin)? 可以匹配 be, beg, begi, begin \\S 匹配任何非空白字符 \\S+ 匹配一个或多个非空白字符 ","date":"2021-01-30","objectID":"/posts/ultisnip%E4%B8%AD%E7%9A%84%E6%AD%A3%E5%88%99/:1:3","tags":["ultisnips"],"title":"UltiSnip中的正则","uri":"/posts/ultisnip%E4%B8%AD%E7%9A%84%E6%AD%A3%E5%88%99/"},{"categories":["nvim"],"content":"5 global !p def upper_right(inp): return (75 - 2 * len(inp))* ' ' + inp.upper() endglobal snippet wow ${1:Text}`!p snip.rv = upper_right(t[1])` endsnippet Note 75 - 2 * len(inp) ","date":"2021-01-30","objectID":"/posts/ultisnip%E4%B8%AD%E7%9A%84%E6%AD%A3%E5%88%99/:1:4","tags":["ultisnips"],"title":"UltiSnip中的正则","uri":"/posts/ultisnip%E4%B8%AD%E7%9A%84%E6%AD%A3%E5%88%99/"},{"categories":["nvim"],"content":"6 snippet letter Dear $1, $0 Yours sincerely, $2 endsnippet Note $0 It is always the last tabstop in the snippet no matter how many tabstops are defined. ","date":"2021-01-30","objectID":"/posts/ultisnip%E4%B8%AD%E7%9A%84%E6%AD%A3%E5%88%99/:1:5","tags":["ultisnips"],"title":"UltiSnip中的正则","uri":"/posts/ultisnip%E4%B8%AD%E7%9A%84%E6%AD%A3%E5%88%99/"},{"categories":["nvim"],"content":"7. choice tabstop snippet q Your age: ${1|\u003c18,18~60,\u003e60|} Your height: ${2|\u003c120cm,120cm~180cm,\u003e180cm|} endsnippet Note ${1|item1, item2, item3, ...|} ","date":"2021-01-30","objectID":"/posts/ultisnip%E4%B8%AD%E7%9A%84%E6%AD%A3%E5%88%99/:1:6","tags":["ultisnips"],"title":"UltiSnip中的正则","uri":"/posts/ultisnip%E4%B8%AD%E7%9A%84%E6%AD%A3%E5%88%99/"},{"categories":["nvim"],"content":"8. mirrors snippet env \\begi{${1:enumerate}} $0 \\end{$1} endsnippet ","date":"2021-01-30","objectID":"/posts/ultisnip%E4%B8%AD%E7%9A%84%E6%AD%A3%E5%88%99/:1:7","tags":["ultisnips"],"title":"UltiSnip中的正则","uri":"/posts/ultisnip%E4%B8%AD%E7%9A%84%E6%AD%A3%E5%88%99/"},{"categories":["nvim"],"content":"9. Transformations Note {\u003ctab_stop_no/regular_expression/replacement/options} The components are defined as follows: components defined tab_stop_no The number of the tabstop to reference regular_expression The regular expression the value of the referenced tabstop is matched on replacement The replacement string, explained in detail below options Options for the regular expression The options can be any combination of options combination g global replace i case insensitive m multiline a ascii conversion snippet title \"Title transformation\" ${1:a text} ${1/\\w+\\s*/\\u$0/} endsnippet Note \\w+ 匹配一个或多个字母、数字、下划线 \\s* 匹配零个或多个任何空白字符 \\u Uppercase next letter snippet title \"Title transformation\" ${1:a text} ${1/\\w+\\s*/\\u$0/g} endsnippet Note g - blobal replace By default, only the first match of the regular expression is replaced. With this option allmatches are replaced. ","date":"2021-01-30","objectID":"/posts/ultisnip%E4%B8%AD%E7%9A%84%E6%AD%A3%E5%88%99/:1:8","tags":["ultisnips"],"title":"UltiSnip中的正则","uri":"/posts/ultisnip%E4%B8%AD%E7%9A%84%E6%AD%A3%E5%88%99/"},{"categories":["nvim"],"content":"参考文章 正则表达式 - 语法 UltiSnips.txt ","date":"2021-01-30","objectID":"/posts/ultisnip%E4%B8%AD%E7%9A%84%E6%AD%A3%E5%88%99/:1:9","tags":["ultisnips"],"title":"UltiSnip中的正则","uri":"/posts/ultisnip%E4%B8%AD%E7%9A%84%E6%AD%A3%E5%88%99/"},{"categories":["archlinux"],"content":"Arch Linux is an independently developed, x86_64-optimised Linux distribution targeted at competent Linux users. Pre-installation ","date":"2021-01-29","objectID":"/posts/archlinux/:0:0","tags":["archlinux"],"title":"Archlinux","uri":"/posts/archlinux/"},{"categories":["archlinux"],"content":"download ","date":"2021-01-29","objectID":"/posts/archlinux/:1:0","tags":["archlinux"],"title":"Archlinux","uri":"/posts/archlinux/"},{"categories":["archlinux"],"content":"ios download ","date":"2021-01-29","objectID":"/posts/archlinux/:1:1","tags":["archlinux"],"title":"Archlinux","uri":"/posts/archlinux/"},{"categories":["archlinux"],"content":"copy sudo fdisk -l dd bs=4M if=path/archlinux.iso of=/dev/sdx status=progress oflag=sync ","date":"2021-01-29","objectID":"/posts/archlinux/:1:2","tags":["archlinux"],"title":"Archlinux","uri":"/posts/archlinux/"},{"categories":["archlinux"],"content":"Partition the disks fidsk -l cfdisk xxx format Boot: mkfs.fat -F32 /dev/sdx_Boot Root: mkfs.ext4 /dev/sdx_Root mount mount /dev/sdx_Root /mnt mkdir /mnt/boot mount /dev/sdx_Boot /mnt/boot Installation ","date":"2021-01-29","objectID":"/posts/archlinux/:1:3","tags":["archlinux"],"title":"Archlinux","uri":"/posts/archlinux/"},{"categories":["archlinux"],"content":"connect to the internet iwctl device list station scan station get-networks station connect xxxx quit ","date":"2021-01-29","objectID":"/posts/archlinux/:2:0","tags":["archlinux"],"title":"Archlinux","uri":"/posts/archlinux/"},{"categories":["archlinux"],"content":"Update the system clock timedatectl set-ntp true ","date":"2021-01-29","objectID":"/posts/archlinux/:3:0","tags":["archlinux"],"title":"Archlinux","uri":"/posts/archlinux/"},{"categories":["archlinux"],"content":"Select the mirrors vim /etc/pacman.d/mirrorlist reflector –verbose –latest 5 –country China –sort rate –save /etc/pacman.d/mirrorlist ","date":"2021-01-29","objectID":"/posts/archlinux/:4:0","tags":["archlinux"],"title":"Archlinux","uri":"/posts/archlinux/"},{"categories":["archlinux"],"content":"Install essential packages pacstrap /mnt base linux linux-firmware vim sudo configure the system ","date":"2021-01-29","objectID":"/posts/archlinux/:5:0","tags":["archlinux"],"title":"Archlinux","uri":"/posts/archlinux/"},{"categories":["archlinux"],"content":"Fstab genfstab -L /mnt » /mnt/etc/fstab -L define by labels ","date":"2021-01-29","objectID":"/posts/archlinux/:6:0","tags":["archlinux"],"title":"Archlinux","uri":"/posts/archlinux/"},{"categories":["archlinux"],"content":"chroot arch-chroot /mnt ","date":"2021-01-29","objectID":"/posts/archlinux/:7:0","tags":["archlinux"],"title":"Archlinux","uri":"/posts/archlinux/"},{"categories":["archlinux"],"content":"Time zone Set the time zone ln -sf /usr/share/zoneinfo/Asia/Shanghai /etc/localtime Run hwclock hwclock –systohc ","date":"2021-01-29","objectID":"/posts/archlinux/:8:0","tags":["archlinux"],"title":"Archlinux","uri":"/posts/archlinux/"},{"categories":["archlinux"],"content":"Localization Uncomment en_US.UTF-8 UTF-8 in /etc/locale.gen and generate it with locale-gen Create the /etc/locale.conf file, and set the LANG variable accordingly:LANG=\"en_US.UTF-8\" ","date":"2021-01-29","objectID":"/posts/archlinux/:9:0","tags":["archlinux"],"title":"Archlinux","uri":"/posts/archlinux/"},{"categories":["archlinux"],"content":"Network configuration Create the hostname file in /etc/hostname myhostname Add matching entries to /etc/hosts 127.0.0.1 localhost ::1 localhost 127.0.1.1 myhostname.localdomain myhostname ","date":"2021-01-29","objectID":"/posts/archlinux/:10:0","tags":["archlinux"],"title":"Archlinux","uri":"/posts/archlinux/"},{"categories":["archlinux"],"content":"Root password passwd ","date":"2021-01-29","objectID":"/posts/archlinux/:11:0","tags":["archlinux"],"title":"Archlinux","uri":"/posts/archlinux/"},{"categories":["archlinux"],"content":"Boot loader Install Boot loader packages pacman -S os-prober ntfs-3g grub efibootmgr grub-install grub-install –target=x86_64-efi –efi-directory=/boot –bootloader-id=grub grub-mkconfig grub-mkconfig -o /boot/grub/grub.cfg ","date":"2021-01-29","objectID":"/posts/archlinux/:12:0","tags":["archlinux"],"title":"Archlinux","uri":"/posts/archlinux/"},{"categories":["archlinux"],"content":"Intel-ucode pacman -S intel-ucode ","date":"2021-01-29","objectID":"/posts/archlinux/:13:0","tags":["archlinux"],"title":"Archlinux","uri":"/posts/archlinux/"},{"categories":["archlinux"],"content":"Reboot umount /mnt/boot umount /mnt reboot Post-installation ","date":"2021-01-29","objectID":"/posts/archlinux/:14:0","tags":["archlinux"],"title":"Archlinux","uri":"/posts/archlinux/"},{"categories":["archlinux"],"content":"KDE Plasma install Xorg sudo pacman -S xorg KDE applications sudo pacman -S plasma konsole dolphin systemctl enable sudo systemctl enable NetworkManager sudo systemctl enable sddm ","date":"2021-01-29","objectID":"/posts/archlinux/:15:0","tags":["archlinux"],"title":"Archlinux","uri":"/posts/archlinux/"},{"categories":["archlinux"],"content":"Add a user to Wheel group add User useradd -m -G wheel -s /bin/bash xxx visudo uncomment ##%wheel ALL=(ALL) passwd passwd xxx ","date":"2021-01-29","objectID":"/posts/archlinux/:16:0","tags":["archlinux"],"title":"Archlinux","uri":"/posts/archlinux/"},{"categories":["archlinux"],"content":"Reboot software Installtion ","date":"2021-01-29","objectID":"/posts/archlinux/:17:0","tags":["archlinux"],"title":"Archlinux","uri":"/posts/archlinux/"},{"categories":["archlinux"],"content":"archlinxcn vim /etc/pacman.conf [archlinuxcn] Server = https://mirrors.tuna.tsinghua.edu.cn/archlinuxcn/$arch Server = https://mirrors.cloud.tencent.com/archlinuxcn/$arch Server = https://mirrors.zju.edu.cn/archlinuxcn/$arch Server = https://mirrors.ustc.edu.cn/archlinuxcn/$arch sudo pacman -S archlinuxcn-keyring ","date":"2021-01-29","objectID":"/posts/archlinux/:18:0","tags":["archlinux"],"title":"Archlinux","uri":"/posts/archlinux/"},{"categories":["archlinux"],"content":"git download sudo pacman -S git config git config --global user.name feng git config --global user.email guangsizhongbin@gmail.com SSH key ssh-keygen -t rsa -C \"guangsizhongbin@gmail.com\" test connect ssh -T git@github.com upload id_ras.pub to github ","date":"2021-01-29","objectID":"/posts/archlinux/:19:0","tags":["archlinux"],"title":"Archlinux","uri":"/posts/archlinux/"},{"categories":["archlinux"],"content":"yay git clone https://aur.archlinux.org/yay.git cd yay sudo pacman -S base-devel makepkg -si ","date":"2021-01-29","objectID":"/posts/archlinux/:20:0","tags":["archlinux"],"title":"Archlinux","uri":"/posts/archlinux/"},{"categories":["archlinux"],"content":"font sudo pacman -S nerd-fonts-complete sudo pacman -S wqy-zenhei wqy-bitmapfont wqy-microhei ttf-wps-fonts adobe-source-han-sans-cn-fonts adobe-source-han-serif-cn-fonts ","date":"2021-01-29","objectID":"/posts/archlinux/:21:0","tags":["archlinux"],"title":"Archlinux","uri":"/posts/archlinux/"},{"categories":["archlinux"],"content":"v2ray sudo pacman -Sy v2ray sudo pacman -Sy qv2ray ","date":"2021-01-29","objectID":"/posts/archlinux/:22:0","tags":["archlinux"],"title":"Archlinux","uri":"/posts/archlinux/"},{"categories":["archlinux"],"content":"joplin yay joplin ","date":"2021-01-29","objectID":"/posts/archlinux/:23:0","tags":["archlinux"],"title":"Archlinux","uri":"/posts/archlinux/"},{"categories":["archlinux"],"content":"Obsidian yay -S obsidaian ","date":"2021-01-29","objectID":"/posts/archlinux/:24:0","tags":["archlinux"],"title":"Archlinux","uri":"/posts/archlinux/"},{"categories":["archlinux"],"content":"support nvim ","date":"2021-01-29","objectID":"/posts/archlinux/:24:1","tags":["archlinux"],"title":"Archlinux","uri":"/posts/archlinux/"},{"categories":["archlinux"],"content":"anki sudo pacman -S anki ","date":"2021-01-29","objectID":"/posts/archlinux/:25:0","tags":["archlinux"],"title":"Archlinux","uri":"/posts/archlinux/"},{"categories":["archlinux"],"content":"add-on AwesomeTTS (Google Cloud Text-to-Speech) [unofficial] 814349176 Fast Word Query: Multi-threaded queries for words from local or web dictionaries 1807206748 Image Occlusion Enhanced for Anki 2.1 (alpha) 1374772155 ReviewHeatmap 723520343 Browser: Table/Editor side-by-side 831846358 Beautify Anki (Material design , Deck Background and icon ) 1150874988 Batch Editing 291119185 editor: apply font color, background color, custom class, custom style 1899278645 9.Edit Field During Review 1020366288 ","date":"2021-01-29","objectID":"/posts/archlinux/:25:1","tags":["archlinux"],"title":"Archlinux","uri":"/posts/archlinux/"},{"categories":["archlinux"],"content":"GPU sudo pacman -S linux-headers sudo pacman -S nvidia bbswitch optimus-manager-qt-kde systemctl enable optimus-manager.service ","date":"2021-01-29","objectID":"/posts/archlinux/:26:0","tags":["archlinux"],"title":"Archlinux","uri":"/posts/archlinux/"},{"categories":["archlinux"],"content":"kde connect sudo pacman -S kdeconnect ","date":"2021-01-29","objectID":"/posts/archlinux/:27:0","tags":["archlinux"],"title":"Archlinux","uri":"/posts/archlinux/"},{"categories":["archlinux"],"content":"screen-shot yay flameshot (community) shortcuts(flameshot gui) sudo pacman -S peek xclip sudo pacman -S xclip ","date":"2021-01-29","objectID":"/posts/archlinux/:28:0","tags":["archlinux"],"title":"Archlinux","uri":"/posts/archlinux/"},{"categories":["archlinux"],"content":"widget Network speed pager ","date":"2021-01-29","objectID":"/posts/archlinux/:29:0","tags":["archlinux"],"title":"Archlinux","uri":"/posts/archlinux/"},{"categories":["archlinux"],"content":"music sudo pacman -S iease-music ","date":"2021-01-29","objectID":"/posts/archlinux/:30:0","tags":["archlinux"],"title":"Archlinux","uri":"/posts/archlinux/"},{"categories":["archlinux"],"content":"googlechrome sudo pacman -S google-chrome ","date":"2021-01-29","objectID":"/posts/archlinux/:31:0","tags":["archlinux"],"title":"Archlinux","uri":"/posts/archlinux/"},{"categories":["archlinux"],"content":"plugin Dark Reader 沙拉查词 AdBlock Vimium infinity octotree language Tool SimpleExManage ","date":"2021-01-29","objectID":"/posts/archlinux/:31:1","tags":["archlinux"],"title":"Archlinux","uri":"/posts/archlinux/"},{"categories":["archlinux"],"content":"video sudo pacman -S mpv sudo pacman -S vlc ","date":"2021-01-29","objectID":"/posts/archlinux/:32:0","tags":["archlinux"],"title":"Archlinux","uri":"/posts/archlinux/"},{"categories":["archlinux"],"content":"neovim sudo pacman -S neovim plugin sudo pacman -S ctags clipboard sudo pacman -S xclip node.js sudo npm install -g neovim python pip install neovim C/C++ sudo pacman -S ccls ","date":"2021-01-29","objectID":"/posts/archlinux/:33:0","tags":["archlinux"],"title":"Archlinux","uri":"/posts/archlinux/"},{"categories":["archlinux"],"content":"fcitx download sudo pacman -S fcitx fctix-im kcm-fcitx vim ~/.xprofile export GTK_IM_MODULE=fcitx export QT_IM_MODULE=fcitx export XMODIFIERS=\"@im=fcitx\" sogou-input yay -Sy fcitx-sogoupinyin ","date":"2021-01-29","objectID":"/posts/archlinux/:34:0","tags":["archlinux"],"title":"Archlinux","uri":"/posts/archlinux/"},{"categories":["archlinux"],"content":"download you-get sudo pacman -S python-pip sudo pip3 install you-get youtube-dl sudo pip3 install youtube-dl ","date":"2021-01-29","objectID":"/posts/archlinux/:35:0","tags":["archlinux"],"title":"Archlinux","uri":"/posts/archlinux/"},{"categories":["archlinux"],"content":"aria2 + youtube-dl youtube-dl -f 22 https://www.youtube.com/playlist?list=PLFx-dS8yeeGPPQAdpV6hiAqgi4Qzohcmk –external-downloader aria2c –external-downloader-args “-x 16 -k 1M” wget sudo pacman -S wget wget -c \"www.baidu.com\" -O baidu.index.html aria2 sudo pacman -S aria2 ","date":"2021-01-29","objectID":"/posts/archlinux/:35:1","tags":["archlinux"],"title":"Archlinux","uri":"/posts/archlinux/"},{"categories":["archlinux"],"content":"zsh zsh sudo pacman -S zsh export https_proxy=“https://0.0.0.0:8119” oh-my-zsh export https_proxy=\"http://0.0.0.0:8189\" sh -c \"$(curl -fsSL https://raw.github.com/ohmyzsh/ohmyzsh/master/tools/install.sh)\" plugin zsh-autosuggestions git clone git://github.com/zsh-users/zsh-autosuggestions $ZSH_CUSTOM/plugins/zsh-autosuggestions ","date":"2021-01-29","objectID":"/posts/archlinux/:36:0","tags":["archlinux"],"title":"Archlinux","uri":"/posts/archlinux/"},{"categories":["archlinux"],"content":"bluetooth sudo pacman -S pulseaudio-alsa pulseaudio-bluetooth bluez bluez-libs bluez-utils yay -S bluez-firmware systemctl enable bluetooth systemctl start bluetooth ","date":"2021-01-29","objectID":"/posts/archlinux/:37:0","tags":["archlinux"],"title":"Archlinux","uri":"/posts/archlinux/"},{"categories":["archlinux"],"content":"pdf yay Okular ","date":"2021-01-29","objectID":"/posts/archlinux/:38:0","tags":["archlinux"],"title":"Archlinux","uri":"/posts/archlinux/"},{"categories":["archlinux"],"content":"Clion sudo pacman -S clion clion-jre clion-cmake clion-gdb clion-lidb ","date":"2021-01-29","objectID":"/posts/archlinux/:39:0","tags":["archlinux"],"title":"Archlinux","uri":"/posts/archlinux/"},{"categories":["archlinux"],"content":"java sudo pacman -S jdk ","date":"2021-01-29","objectID":"/posts/archlinux/:40:0","tags":["archlinux"],"title":"Archlinux","uri":"/posts/archlinux/"},{"categories":["archlinux"],"content":"compress/decompress sudo pacman -S ark ","date":"2021-01-29","objectID":"/posts/archlinux/:41:0","tags":["archlinux"],"title":"Archlinux","uri":"/posts/archlinux/"},{"categories":["archlinux"],"content":"drawing sudo pacman -S KolourPaint ","date":"2021-01-29","objectID":"/posts/archlinux/:42:0","tags":["archlinux"],"title":"Archlinux","uri":"/posts/archlinux/"},{"categories":["archlinux"],"content":"图像查看 sudo pacman -S Gwenview ","date":"2021-01-29","objectID":"/posts/archlinux/:43:0","tags":["archlinux"],"title":"Archlinux","uri":"/posts/archlinux/"},{"categories":["archlinux"],"content":"downloader - motrix yay -S aur/motrix ","date":"2021-01-29","objectID":"/posts/archlinux/:44:0","tags":["archlinux"],"title":"Archlinux","uri":"/posts/archlinux/"},{"categories":["archlinux"],"content":"WPS sudo pacman -S wps-office-cn yay -S wps-office-mui-zh-cn ttf-wps-fonts ","date":"2021-01-29","objectID":"/posts/archlinux/:45:0","tags":["archlinux"],"title":"Archlinux","uri":"/posts/archlinux/"},{"categories":["archlinux"],"content":"nutstore sudo pacman -S nutstore ","date":"2021-01-29","objectID":"/posts/archlinux/:46:0","tags":["archlinux"],"title":"Archlinux","uri":"/posts/archlinux/"},{"categories":["archlinux"],"content":"timeout sudo pacman -Syyu –disable-download-timeout ","date":"2021-01-29","objectID":"/posts/archlinux/:47:0","tags":["archlinux"],"title":"Archlinux","uri":"/posts/archlinux/"},{"categories":["nvim"],"content":"Markdown1 Plug 'godlygeek/tabular' \"必要插件 Plug 'plasticboy/vim-markdown' \" To disable math conceal with LaTex math syntax enabled, add the following let g:tex_conceal = \"\" let g:vim_markdown_math = 1 [[: go to previous header. ]]: go to next header. ]c: go to Current header. ]u: go to parent header (Up). zR: opens all flods zM: folds everything all the way zr: reduces fold level throughout the buffer zm: increases fold level throughout the buffer ","date":"2021-01-27","objectID":"/posts/nvim%E6%8F%92%E4%BB%B6/:1:0","tags":["nvim"],"title":"Nvim插件","uri":"/posts/nvim%E6%8F%92%E4%BB%B6/"},{"categories":["nvim"],"content":"snippets2 ","date":"2021-01-27","objectID":"/posts/nvim%E6%8F%92%E4%BB%B6/:2:0","tags":["nvim"],"title":"Nvim插件","uri":"/posts/nvim%E6%8F%92%E4%BB%B6/"},{"categories":["nvim"],"content":"UltisnipsEdit进入编辑页面3 snippet triggerWord \"Comment\" iAwrb your snippets endsnippet triggerWord 为关键词 iAwrb为snippet的选项 - i 表示片段可在句中被触发 - A 表示片段会被自动出发 - w 表示片段会在关键词为单独单词的情况下被触发 - r 表示关键词语使用正则表达式, 正则表达式必须用两个引号'‘包围 - b 表示只有在一行的开头才会被触发 数学模式下自动加下标 snippet '([A-Za-z])(\\d)' \"auto subscript\" wrA `!p snip.rv = match.group(1)`_`!p snip.rv = match.group(2)` endsnippet Note [A-Za-z]: 匹配A-Z, a-z python代码 - fn 表示当前文件名 - path 当前文件名的路径 - t 占位符的字典, 可以用t[1], t[2], t.v来取占位符内容 - snip.rv 表示 return value - snip.fn 表示当前文件名 - snip.ft 表示当前文件类型 - snip.v 表示VISUAL模式变量 - snip.v.mode 表示模式类型 - snip.v.text 表示VISUAL模式中选择的字符 占位符选择 - /\u003ctab\u003e 切换下一个占位符 - \u003cshift-tab\u003e 切换上一个占位符 创建表格 snippet '(?\u003c!\\\\)([0-9])([0-9])tb' \"new table\" r $1`!p x=match.group(1) y=match.group(2) row1=\"\" row2=\"\" for i in range(int(x)): row1+=\"| \" row2+=\"|:-:\" row1+=\"|\\n\" row2+=\"|\\n\" out=row1+row2+int(y)*row1 snip.rv=out `$0 endsnippet e vim-markdown ↩︎ 高效做笔记:vim + markdown ↩︎ UltiSnips Screencast Episode 2 ↩︎ ","date":"2021-01-27","objectID":"/posts/nvim%E6%8F%92%E4%BB%B6/:2:1","tags":["nvim"],"title":"Nvim插件","uri":"/posts/nvim%E6%8F%92%E4%BB%B6/"},{"categories":["linux"],"content":"关联方法1 ","date":"2021-01-26","objectID":"/posts/%E4%BD%BF%E7%94%A8webdav%E5%85%B3%E8%81%94%E5%9D%9A%E6%9E%9C%E4%BA%91%E4%B8%8Ejoplin/:1:0","tags":["joplin"],"title":"使用WebDAV关联坚果云与Joplin","uri":"/posts/%E4%BD%BF%E7%94%A8webdav%E5%85%B3%E8%81%94%E5%9D%9A%E6%9E%9C%E4%BA%91%E4%B8%8Ejoplin/"},{"categories":["linux"],"content":"1. 在坚果云上创建一个英文名称的根目录的文件夹, 如\"note\" ","date":"2021-01-26","objectID":"/posts/%E4%BD%BF%E7%94%A8webdav%E5%85%B3%E8%81%94%E5%9D%9A%E6%9E%9C%E4%BA%91%E4%B8%8Ejoplin/:1:1","tags":["joplin"],"title":"使用WebDAV关联坚果云与Joplin","uri":"/posts/%E4%BD%BF%E7%94%A8webdav%E5%85%B3%E8%81%94%E5%9D%9A%E6%9E%9C%E4%BA%91%E4%B8%8Ejoplin/"},{"categories":["linux"],"content":"2. 配置Joplin WebDAV URL: https//dav.jiangguoyun.com/dav/note (note为刚才创建的文件夹名称) WebDAV 名称: 坚果云账号邮箱 WebDAV 密码: 在坚果云中生成的第三方应用密码2 ","date":"2021-01-26","objectID":"/posts/%E4%BD%BF%E7%94%A8webdav%E5%85%B3%E8%81%94%E5%9D%9A%E6%9E%9C%E4%BA%91%E4%B8%8Ejoplin/:1:2","tags":["joplin"],"title":"使用WebDAV关联坚果云与Joplin","uri":"/posts/%E4%BD%BF%E7%94%A8webdav%E5%85%B3%E8%81%94%E5%9D%9A%E6%9E%9C%E4%BA%91%E4%B8%8Ejoplin/"},{"categories":["linux"],"content":"3. 点击检查\"同步配置\" ","date":"2021-01-26","objectID":"/posts/%E4%BD%BF%E7%94%A8webdav%E5%85%B3%E8%81%94%E5%9D%9A%E6%9E%9C%E4%BA%91%E4%B8%8Ejoplin/:1:3","tags":["joplin"],"title":"使用WebDAV关联坚果云与Joplin","uri":"/posts/%E4%BD%BF%E7%94%A8webdav%E5%85%B3%E8%81%94%E5%9D%9A%E6%9E%9C%E4%BA%91%E4%B8%8Ejoplin/"},{"categories":["linux"],"content":"BUG 1. Too many requests are received recently 可以将同步的并发连接数调低(调成1后，等一会, 即可)3 如何使用WebDAV关联坚果云与Joplin? ↩︎ 坚果云第三方应用授权WebDAV开启方法 ↩︎ joplin使用坚果云webdav同步时出现以下问题如何解决？ ↩︎ ","date":"2021-01-26","objectID":"/posts/%E4%BD%BF%E7%94%A8webdav%E5%85%B3%E8%81%94%E5%9D%9A%E6%9E%9C%E4%BA%91%E4%B8%8Ejoplin/:1:4","tags":["joplin"],"title":"使用WebDAV关联坚果云与Joplin","uri":"/posts/%E4%BD%BF%E7%94%A8webdav%E5%85%B3%E8%81%94%E5%9D%9A%E6%9E%9C%E4%BA%91%E4%B8%8Ejoplin/"},{"categories":["linux"],"content":"To disable a laptop’s internal keyboard ","date":"2021-01-25","objectID":"/posts/xinput/:0:0","tags":["xinput"],"title":"Xinput","uri":"/posts/xinput/"},{"categories":["linux"],"content":"xinput list1 Execute the command xinput list to list input devices. $ xinput list ⎡ Virtual core pointer id=2 [master pointer (3)] ⎜ ↳ Virtual core XTEST pointer id=4 [slave pointer (2)] ⎜ ↳ ETD2303:00 04F3:3083 Mouse id=11 [slave pointer (2)] ⎜ ↳ ETD2303:00 04F3:3083 Touchpad id=12 [slave pointer (2)] ⎜ ↳ ETPS/2 Elantech Touchpad id=17 [slave pointer (2)] ⎣ Virtual core keyboard id=3 [master keyboard (2)] ↳ Virtual core XTEST keyboard id=5 [slave keyboard (3)] ↳ Power Button id=6 [slave keyboard (3)] ↳ Video Bus id=7 [slave keyboard (3)] ↳ Power Button id=8 [slave keyboard (3)] ↳ Video Bus id=9 [slave keyboard (3)] ↳ XiaoMi USB 2.0 Webcam: XiaoMi U id=10 [slave keyboard (3)] ↳ Intel HID events id=13 [slave keyboard (3)] ↳ Xiaomi WMI keys id=14 [slave keyboard (3)] ↳ Xiaomi WMI keys id=15 [slave keyboard (3)] ↳ AT Translated Set 2 keyboard id=16 [slave keyboard (3)] ","date":"2021-01-25","objectID":"/posts/xinput/:0:1","tags":["xinput"],"title":"Xinput","uri":"/posts/xinput/"},{"categories":["linux"],"content":"Locate AT Translated Set 2 keyboard take note of its id number ","date":"2021-01-25","objectID":"/posts/xinput/:0:2","tags":["xinput"],"title":"Xinput","uri":"/posts/xinput/"},{"categories":["linux"],"content":"disable the keyboard xinput float \u003cid#\u003e, where \u003cid#\u003e is the keyboard’s id number. For example, if the id was 10, then the command would be xinput float 16 ","date":"2021-01-25","objectID":"/posts/xinput/:0:3","tags":["xinput"],"title":"Xinput","uri":"/posts/xinput/"},{"categories":["linux"],"content":"re-enable the keyboard xinput reattach \u003cid#\u003e \u003cmaster#\u003e master is that second number we noted down. For example, if the master was 3, you would do xinput reattach 16 3 Is there a way to disable a laptop’s internal keyboard? ↩︎ ","date":"2021-01-25","objectID":"/posts/xinput/:0:4","tags":["xinput"],"title":"Xinput","uri":"/posts/xinput/"},{"categories":["python"],"content":"sxtw1 import sxtwl def lunar_calendar(yyyy,mm,dd): import sxtwl lunar = sxtwl.Lunar() daylunar = lunar.getDayBySolar(yyyy, mm, dd) if daylunar.Lmc \u003e 1: ly, lmm = str(daylunar.y), str(daylunar.Lmc - 1) else: ly, lmm = str(daylunar.y - 1), str(daylunar.Lmc + 11) if daylunar.Lleap: lm=\"闰\"+lmm else: lm=lmm ld=str(daylunar.Ldi+1) ShX = [\"鼠\", \"牛\", \"虎\", \"兔\", \"龙\", \"蛇\", \"马\", \"羊\", \"猴\", \"鸡\", \"狗\", \"猪\"] sx = ShX[daylunar.Lyear2.dz] return ly,lm,ld,sx lunar = lunar_calendar(2021,1,24) print(lunar[0] + \"年\" + lunar[1] + \"月\" + lunar[2] + \"日\") 用sxtwl模块轻松实现农历转换 ↩︎ ","date":"2021-01-24","objectID":"/posts/solartolunar/:0:1","tags":["python"],"title":"SolarToLunar","uri":"/posts/solartolunar/"},{"categories":["linux"],"content":"Install sudo pacman -S imagemagick sudo pacman -S ghostscript ","date":"2021-01-23","objectID":"/posts/pdftoimage/:0:1","tags":["convert"],"title":"PdfToImage","uri":"/posts/pdftoimage/"},{"categories":["linux"],"content":"Error1 Tip convert: attempt to perform an operation not allowed by the security policy `PDF' @ error/constitute.c/IsCoderAuthorized/408. convert: no images defined `output.png' @ error/convert.c/ConvertImageCommand/3288. /etc/ImageMagick-7/policy.xml -: \u003cpolicy domain=\"delegate\" rights=\"none\" pattern=\"gs\" /\u003e --- +: \u003cpolicy domain=\"coder\" rights=\"read | write\" pattern=\"PDF\" /\u003e ","date":"2021-01-23","objectID":"/posts/pdftoimage/:0:2","tags":["convert"],"title":"PdfToImage","uri":"/posts/pdftoimage/"},{"categories":["linux"],"content":"Convert2 # convert single page of PDF file to image convert presentation.pdf[0] test.jpg # convert from page 0 to page 5 convert presentation.pdf[0-5] test.jpg Note -density used to specify the DPI of the output images. quality specify the quality for the generated images. %3d used to specify the format for generated image names. The generated images will be named output-001.jpg, output-002.jpg ImageMagick安全策略’PDF’阻止转换 ↩︎ How to Convert PDF to Images with Imagemagick ↩︎ ","date":"2021-01-23","objectID":"/posts/pdftoimage/:0:3","tags":["convert"],"title":"PdfToImage","uri":"/posts/pdftoimage/"},{"categories":["archlinux"],"content":"自动安装vim-plug1 if empty(glob('~/.vim/autoload/plug.vim')) silent !curl -fLo ~/.vim/autoload/plug.vim --create-dirs \\ https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim autocmd VimEnter * PlugInstall --sync | source $MYVIMRC endif Note $MYVIMRC The $MYVIMRC environment variable is set to the file that was first found, unless $MYVIMRC was already set and when using VIMINIT. ","date":"2021-01-21","objectID":"/posts/nvim/:1:0","tags":["Nvim"],"title":"Nvim","uri":"/posts/nvim/"},{"categories":["archlinux"],"content":"基本配置 ","date":"2021-01-21","objectID":"/posts/nvim/:2:0","tags":["Nvim"],"title":"Nvim","uri":"/posts/nvim/"},{"categories":["archlinux"],"content":"行相关配置 set number set relativenumber set cursorline set tabstop=2 set shiftwidth=2 set softtabstop=2 Note What is the difference between tabstop, shiftwidth, expandtab, softtabstop? 1 tabstop effectively how many columns of whitespace a \\t is worth shiftwidth how many colums of whitespace a “level of identation” is worth expandtab Setting expandtab means that you never wanna see a \\t again in your file softtabtop how many columns of whitespace a tab keypress or a backspace keypress is worth Tab settings in Vim ↩︎ swap, backup, undo Files 配置2 silent !mkdir -p ~/.config/nvim/tmp/backup silent !mkdir -p ~/.config/nvim/tmp/undo set backupdir=~/.config/nvim/tmp/backup,. set directory=~/.config/nvim/tmp/backup,. Note Swap file .myfile.txt.swp is a swap file, containg the unsaved changes. Backup file myfile.txt`` is a backup file -- the version of myfile.txt` before your edited it. Undo file `.myfile.txt.un`` is an undo file, containing the undo trees of the file edited. directory List of directory names for the swap file, separated with commas. updatetime If this many milliseconds nothing is type the swap file will be written to disk（default 4000） colorcolumn colorcolum is a comma separated list of screen columns that are highlighted with ColorColumn hl-ColorColumn. ","date":"2021-01-21","objectID":"/posts/nvim/:2:1","tags":["Nvim"],"title":"Nvim","uri":"/posts/nvim/"},{"categories":["archlinux"],"content":"Basic Mappings \u003cLEADER\u003e let mapleader=\" \" Note let {var-name} = {expr1} Set internal variable {var-name} to the result of the expression {expr1}. The variable will get the type from the {expr}. If {var-name} didn’t exist yet, it is created. Save \u0026 quit noremap Q :q\u003cCR\u003e noremap \u003cC-q\u003e :qa\u003cCR\u003e noremap S :w\u003cCR\u003e Note noremap {lhs} {rhs} Map the key sequence {lhs} to {rhs} for the modes where the map command applies. Disallow mapping of {rhs}, to avoid nested and recursive mappings. What is the difference between the remap, noremap, nnoremap and vnoremap mapping commands in Vim? 3 remap is an option that makes mappings work recursively. :map and :noremap are recursive and non-recursive versions of the various mapping commands. :map j gg (moves cursor to first line) :map Q j (moves cursor to first line) :noremap w j (moves cursor to down one line) j will be mapped to gg. Q will also be mapped to gg, because j will be expanded for the recursive mapping. W will be mapped to j (and not to gg) because j will not be expanded for the non-recursive mapping. normal modes: :map and :nnoremap visual modes: :vmap and :vnoremap Select modes: :smap adn :snoremap Open the vimrc file in anytime noremap \u003cLEADER\u003e :e ~/.config/nvim/init.vim\u003cCR\u003e copy content \" make Y to copy till the end of the line nnoremap Y y$ \" Copy to system clipboard vnoremap Y \"+y Search set ignorecase set smartcase noremap \u003cLEADER\u003e\u003cCR\u003e :nohlsearch\u003cCR\u003e scrolloff set scrolloff=4 Note scrolloff: Minimal number of screen lines to keep above and below the cursor. This will make some context visible around where you are working. Resize splits noremap \u003cup\u003e :res +5\u003cCR\u003e noremap \u003cdown\u003e :res -5\u003cCR\u003e noremap \u003cleft\u003e :vertical resize -5\u003cCR\u003e noremap \u003cright\u003e :vertical resize +5\u003cCR\u003e Markdowm Setting \u003cdiv class=\"details admonition tip open\"\u003e \u003cdiv class=\"details-summary admonition-title\"\u003e \u003ci class=\"icon fas fa-lightbulb fa-fw\"\u003e\u003c/i\u003eTip\u003ci class=\"details-icon fas fa-angle-right fa-fw\"\u003e\u003c/i\u003e \u003c/div\u003e \u003cdiv class=\"details-content\"\u003e \u003cdiv class=\"admonition-content\"\u003e\u003cblockquote\u003e \u003cp\u003e\u003ccode\u003e_\u003c/code\u003e\u003c/p\u003e \u003c/blockquote\u003e \u003cp\u003e1 lines downward, on the first non-blank\u003c/p\u003e \u003cblockquote\u003e \u003cp\u003e\u003ccode\u003e[\u0026quot;x]c{motion}\u003c/code\u003e\u003c/p\u003e \u003c/blockquote\u003e \u003cp\u003eDelete \u003ccode\u003e{motion}\u003c/code\u003e text [into register x] adn start insert.\u003c/p\u003e \u003cblockquote\u003e \u003cp\u003e\u003ccode\u003el\u003c/code\u003e \u003ccode\u003e[count]\u003c/code\u003e characters to the right.\u003c/p\u003e \u003c/blockquote\u003e \u003cblockquote\u003e \u003cp\u003e\u003ccode\u003ef{char}\u003c/code\u003e To \u003ccode\u003e[count]\u003c/code\u003e\u0026lsquo;th occurrence of \u003ccode\u003e{char}\u003c/code\u003e to the right.\u003c/p\u003e \u003c/blockquote\u003e \u003cblockquote\u003e \u003cp\u003e\u003ccode\u003eF{char}\u003c/code\u003e To the \u003ccode\u003e[count]\u003c/code\u003e\u0026lsquo;th occurrence of \u003ccode\u003e{char}\u003c/code\u003e to the right.\u003c/p\u003e \u003c/blockquote\u003e \u003cblockquote\u003e \u003cp\u003e\u003ccode\u003e\u0026quot;\u003c/code\u003e Use register {a-zA-Z0-9.%#:-\u0026quot;} for next delete, yank or put (use uppercase character to append with delete and yank) ({.%#:} only work with put)\u003c/p\u003e \u003c/blockquote\u003e \u003c/div\u003e \u003c/div\u003e \u003c/div\u003e junegunn/vim-plug ↩︎ Vim: Remove swap, backup and undo Files from Working Directory ↩︎ What is the difference between the remap, noremap, nnoremap and vnoremap mapping commands in Vim? ↩︎ ","date":"2021-01-21","objectID":"/posts/nvim/:2:2","tags":["Nvim"],"title":"Nvim","uri":"/posts/nvim/"},{"categories":["数据结构"],"content":"123 ","date":"2021-01-20","objectID":"/posts/quicksort/:0:0","tags":["sort"],"title":"QuickSort","uri":"/posts/quicksort/"},{"categories":["java"],"content":"Java运行机制 ","date":"2021-01-20","objectID":"/posts/java/:1:0","tags":["java"],"title":"Java","uri":"/posts/java/"},{"categories":["java"],"content":"高级语言的运行机制 编译型 使用专门的编译器, 针对特定平台(操作系统)将某种高级语言源代码一次性’翻译’成可被该平台硬件执行的机器码(包括机器指令和操作数), 并包装成该平台所能识别的可执行性的程序格式。 解释型 使用专门的解释器对源程序逐行解释成特定的机器码并立即执行的语言 ","date":"2021-01-20","objectID":"/posts/java/:1:1","tags":["java"],"title":"Java","uri":"/posts/java/"},{"categories":["java"],"content":"Java安装 ","date":"2021-01-20","objectID":"/posts/java/:2:0","tags":["java"],"title":"Java","uri":"/posts/java/"},{"categories":["java"],"content":"archlinux下安装 sudo pacman -S jdk ","date":"2021-01-20","objectID":"/posts/java/:2:1","tags":["java"],"title":"Java","uri":"/posts/java/"},{"categories":["java"],"content":"输出Hello World ","date":"2021-01-20","objectID":"/posts/java/:3:0","tags":["java"],"title":"Java","uri":"/posts/java/"},{"categories":["java"],"content":"编写Hello World代码 HelloWorld.java public class HelloWorld { public static void main(String[] args) { System.out.println(\"Hello World!\"); } } String 大写 System 大写 ","date":"2021-01-20","objectID":"/posts/java/:3:1","tags":["java"],"title":"Java","uri":"/posts/java/"},{"categories":["java"],"content":"编译 javac -d . HelloWorld.java Note javac -d Specify where to place generated class files ","date":"2021-01-20","objectID":"/posts/java/:3:2","tags":["java"],"title":"Java","uri":"/posts/java/"},{"categories":["java"],"content":"运行 java HelloWorld ","date":"2021-01-20","objectID":"/posts/java/:3:3","tags":["java"],"title":"Java","uri":"/posts/java/"},{"categories":["java"],"content":"参考 疯狂的java ","date":"2021-01-20","objectID":"/posts/java/:4:0","tags":["java"],"title":"Java","uri":"/posts/java/"},{"categories":["树莓派"],"content":"安装samba sudo apt-get update sudo apt-get intall samba samba-common-bin ","date":"2021-01-19","objectID":"/posts/samba%E6%9C%8D%E5%8A%A1%E5%99%A8/:1:0","tags":["samba"],"title":"Samba服务器","uri":"/posts/samba%E6%9C%8D%E5%8A%A1%E5%99%A8/"},{"categories":["树莓派"],"content":"配置smb.conf /etc/samba/smb.conf [share] path = /home/pi valid users = pi browseable = yes public = yes writable = yes ","date":"2021-01-19","objectID":"/posts/samba%E6%9C%8D%E5%8A%A1%E5%99%A8/:2:0","tags":["samba"],"title":"Samba服务器","uri":"/posts/samba%E6%9C%8D%E5%8A%A1%E5%99%A8/"},{"categories":["树莓派"],"content":"重新运行smaba服务 sudo /etc/init.d/samba restart ","date":"2021-01-19","objectID":"/posts/samba%E6%9C%8D%E5%8A%A1%E5%99%A8/:3:0","tags":["samba"],"title":"Samba服务器","uri":"/posts/samba%E6%9C%8D%E5%8A%A1%E5%99%A8/"},{"categories":["树莓派"],"content":"添加pi用户为Samba用户 sudo smbpasswd -a pi ","date":"2021-01-19","objectID":"/posts/samba%E6%9C%8D%E5%8A%A1%E5%99%A8/:4:0","tags":["samba"],"title":"Samba服务器","uri":"/posts/samba%E6%9C%8D%E5%8A%A1%E5%99%A8/"},{"categories":["树莓派"],"content":"参考 树莓派4设置Samba的最新版本 树莓派3-搭建SAMBA服务器 ","date":"2021-01-19","objectID":"/posts/samba%E6%9C%8D%E5%8A%A1%E5%99%A8/:5:0","tags":["samba"],"title":"Samba服务器","uri":"/posts/samba%E6%9C%8D%E5%8A%A1%E5%99%A8/"},{"categories":["python"],"content":"URL拼接 替换参数1 url = 'https://www.aliexpress.com/item/{}.html'.format(123) print(url) https://www.aliexpress.com/item/123.html ","date":"2021-01-18","objectID":"/posts/momo/:0:1","tags":["momo"],"title":"Momo","uri":"/posts/momo/"},{"categories":["python"],"content":"termcolor2 colored(text, color=None, on_color=None, attrs=None) color: 字体颜色， on_color: 背景颜色 from termcolor import colored, cprint text = colored('Hello, World!','red', 'on_white', attrs=['blink']) print(text) cprint('Hello, World!', 'red', 'on_white', attrs=['blink']) ","date":"2021-01-18","objectID":"/posts/momo/:0:2","tags":["momo"],"title":"Momo","uri":"/posts/momo/"},{"categories":["python"],"content":"momo #encoding: utf8 import aiohttp import asyncio from termcolor import colored from requests import get import re import time import sys ids = () def getProxy(completion, TargetNum, proxynum, ProxyList): global proxies if completion \u003e= TargetNum: return 0 ## print('[+] %s' % colored('get proxy...', 'blue', attrs=['bold']), end='') while 1: try: url = 'http://www.89ip.cn/tqdl.html?num=%s' % proxynum html = get(url).text proxies = set(re.findall( r\"[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}:[0-9]+\", html)) - set(ProxyList) if not len(proxies): ## print('\\n [-]Waiting') time.sleep(3) continue ## print(colored('[%d]' % len(proxies), 'yellow', attrs=['bold']), '%s' % ( ## colored('Done!', 'green', attrs=['bold']))) return 1 except Exception as e: ## print('\\n [-]Error: ' + str(e)) time.sleep(5) async def autoVisit(proxy, sem): global ProxyList, completion async with sem: async with aiohttp.ClientSession() as session: try: for id in ids: async with session.get(url=id, proxy='http://' + proxy, timeout=5) as resp: print('[%s]' % colored(proxy, 'cyan', attrs=['bold']), colored('Successfully!', 'green', attrs=['bold'])) ProxyList.append(proxy) completion += 1 except Exception as e: print('', end='') proxies = [] ProxyList = [] completion = 0 # how many proxies you want to # get in one request of free proxy site proxynum = 100 # how many visition your want to get TargetNum = 40 loop = asyncio.get_event_loop() sem = asyncio.Semaphore(proxynum) while getProxy(completion, TargetNum, proxynum, ProxyList): tasks = [asyncio.ensure_future(autoVisit(i, sem)) for i in proxies] loop.run_until_complete(asyncio.wait(tasks)) loop.close() print(colored(completion, 'yellow', attrs=['bold'])) python3 使用format函数对URL进行拼接 ↩︎ python库termcolor用法 ↩︎ ","date":"2021-01-18","objectID":"/posts/momo/:0:3","tags":["momo"],"title":"Momo","uri":"/posts/momo/"},{"categories":["python"],"content":"asyncio1 import time def hello(): time.sleep(1) def run(): for i in range(5) hello() print('Hello World:%s' % time.time()) if __name__ == '__main__': run() Note ","date":"2021-01-16","objectID":"/posts/%E5%90%8C%E6%AD%A5%E4%B8%8E%E5%BC%82%E6%AD%A5/:1:0","tags":["python"],"title":"同步与异步","uri":"/posts/%E5%90%8C%E6%AD%A5%E4%B8%8E%E5%BC%82%E6%AD%A5/"},{"categories":["python"],"content":"1. time.time1 Return the time in seconds since the epoch as a floating point number. The epoch is the point where the time starts, and is platform dependent. For Unix, the epoch is January 1, 1970, 00:00:00 (UTC) ","date":"2021-01-16","objectID":"/posts/%E5%90%8C%E6%AD%A5%E4%B8%8E%E5%BC%82%E6%AD%A5/:1:1","tags":["python"],"title":"同步与异步","uri":"/posts/%E5%90%8C%E6%AD%A5%E4%B8%8E%E5%BC%82%E6%AD%A5/"},{"categories":["python"],"content":"2. What does __name__ == '__main__' do? Whenever the Python interpreter reads a source file, it does two thing: it sets a few special variables like __name__. it executes all of the code found in the file. Code Sample print(\"before import\") import math print(\"before functionA\") def functionA(): print(\"Function A\") print(\"before functionB\") def functionB(): print(\"Function B {}\".format(math.sqrt(100))) print(\"before __name__ guard\") if __name__ == '__main__' functionA() functionB() print(\"after __name__ guard\") Special Variables Executing the Module’s Code Summary Food for Thought Q: Can I have multiple __name__ checking blocks? import os, sys; sys.path.insert(0, os.path.dirname(__file__)) def functionA(): print(\"a1\"); from foo2 import functionB print(\"a2\") functionB() print(\"a3\") def functionB(): print(\"b\") print(\"t1\") if __name__ == \"__main__\": print(\"m1\") functionA() print(\"m2\") print(\"t2\") t1 -\u003e m1 -\u003e a1 -\u003e module :(t1 -\u003e t2 -\u003e a2 -\u003e b -\u003e a3) -\u003e m2 -\u003e t2 import os, sys; sys.path.insert(0, os.path.dirname(__file__)) def functionA(): print(\"a1\") from foo3 import functionB print(\"a2\") functionB() print(\"a3\") def functionB(): print(\"b\") print(\"t1\") print(\"m1\") functionA() print(\"m2\") print(\"t2\") t1 -\u003e m1 -\u003e a1 -\u003e module:（t1 -\u003e m1 -\u003e a1-\u003e a2 -\u003e b -\u003e a3 -\u003e m2 -\u003e t2）a2-\u003e b -\u003e a3 -\u003e m2 -\u003e t2 docs.python.org ↩︎ import time import asyncio async def hello(): print('Hello World:%s' % time.time()) await asyncio.sleep(1) print('Hello wow World:%s' % time.time()) def run(): tasks = [] for i in range(5): tasks.append(hello()) loop.run_until_complete(asyncio.wait(tasks)) loop = asyncio.get_event_loop() if __name__ == '__main__': run() Note ","date":"2021-01-16","objectID":"/posts/%E5%90%8C%E6%AD%A5%E4%B8%8E%E5%BC%82%E6%AD%A5/:1:2","tags":["python"],"title":"同步与异步","uri":"/posts/%E5%90%8C%E6%AD%A5%E4%B8%8E%E5%BC%82%E6%AD%A5/"},{"categories":["python"],"content":"1. async def Functions prefixed with the async keyword become asynchronous functions, also known as coroutines. keyword: await: which allows a coroutine to wait for results from another coroutine without blocking. ","date":"2021-01-16","objectID":"/posts/%E5%90%8C%E6%AD%A5%E4%B8%8E%E5%BC%82%E6%AD%A5/:1:3","tags":["python"],"title":"同步与异步","uri":"/posts/%E5%90%8C%E6%AD%A5%E4%B8%8E%E5%BC%82%E6%AD%A5/"},{"categories":["python"],"content":"2. Event loops The asyncio library creates and manages event loops, the mechanisms that run coroutines until they complete. ","date":"2021-01-16","objectID":"/posts/%E5%90%8C%E6%AD%A5%E4%B8%8E%E5%BC%82%E6%AD%A5/:1:4","tags":["python"],"title":"同步与异步","uri":"/posts/%E5%90%8C%E6%AD%A5%E4%B8%8E%E5%BC%82%E6%AD%A5/"},{"categories":["python"],"content":"3. Task When you submit a coroutine to an event loop for processing, you can get back a Task object, which provides a way to control the behavior of the coroutine from outside the event loop. keyword .run_until_complete: It runs all of the supplied tasks until they’re done, then returns their results in a single batch. .get_event_loop: method provides us with an object that lets us control the event loop directly, by submitting async functions to it programmatically via .run_util_complete() ","date":"2021-01-16","objectID":"/posts/%E5%90%8C%E6%AD%A5%E4%B8%8E%E5%BC%82%E6%AD%A5/:1:5","tags":["python"],"title":"同步与异步","uri":"/posts/%E5%90%8C%E6%AD%A5%E4%B8%8E%E5%BC%82%E6%AD%A5/"},{"categories":["python"],"content":"aiohttp import asyncio from aiohttp import ClientSession tasks = [] url = \"http://fengqigang.cn/\" async def hello(url): async with ClientSession() as session: async with session.get(url) as response: response = await response.read() print(response) if __name__ == '__main__': loop = asyncio.get_event_loop() loop.run_until_complete(hello(url)) Note ","date":"2021-01-16","objectID":"/posts/%E5%90%8C%E6%AD%A5%E4%B8%8E%E5%BC%82%E6%AD%A5/:2:0","tags":["python"],"title":"同步与异步","uri":"/posts/%E5%90%8C%E6%AD%A5%E4%B8%8E%E5%BC%82%E6%AD%A5/"},{"categories":["python"],"content":"1. async with ClientSession() as session: async with session.get(url) as response: ","date":"2021-01-16","objectID":"/posts/%E5%90%8C%E6%AD%A5%E4%B8%8E%E5%BC%82%E6%AD%A5/:2:1","tags":["python"],"title":"同步与异步","uri":"/posts/%E5%90%8C%E6%AD%A5%E4%B8%8E%E5%BC%82%E6%AD%A5/"},{"categories":["python"],"content":"2. What different between wait and gather?1 import asyncio async def task(arg): await asyncio.sleep(5) return arg async def cancel_waiting_task(work_task, waiting_task): await asyncio.sleep(2) waiting_task.cancel() try: await waiting_task print(\"Waiting done\") except asyncio.CancelledError: print(\"Waiting task cancelled\") try: res = await work_task print(f\"Work result: {res}\") except asyncio.CancelledError: print(\"Work task cancelled\") async def main(): print() work_task = asyncio.create_task(task(\"done\")) waiting = asyncio.create_task(asyncio.wait({work_task})) await cancel_waiting_task(work_task, waiting) work_task = asyncio.create_task(task(\"done\")) waiting = asyncio.gather(work_task) await cancel_waiting_task(work_task, waiting) asyncio.run(main()) If gather() is cancelled, all submitted awaitables (that have not completed yet) are also cancelled. If the wait() task is cancelled, it simply throws an CancelledError and the waited tasks remain intact. Asyncio.gather vs asyncio.wait ↩︎ import time import asyncio from aiohttp import ClientSession tasks = [] url = \"https://www.baidu.com\" async def hello(url): async with ClientSession() as session: async with session.get(url) as response: response = await response.read() print('Hello World:%s' % time.time()) def run(): for i in range(5): task = asyncio.ensure_future(hello(url.format(i))) tasks.append(task) if __name__ == '__main__': loop = asyncio.get_event_loop() run() loop.run_until_complete(asyncio.wait(tasks)) import time import asyncio from aiohttp import ClientSession tasks = [] url = \"https://www.baidu.com/{}\" async def hello(url): async with ClientSession() as session: async with session.get(url) as response: print(response) print('Hello World:%s' % time.time()) return await response.read() def run(): for i in range(5): task = asyncio.ensure_future(hello(url.format(i))) tasks.append(task) result = loop.run_until_complete(asyncio.gather(*tasks)) print(result) if __name__ == '__main__': loop = asyncio.get_event_loop() run() 【python】详解异步async库的使用 ↩︎ ","date":"2021-01-16","objectID":"/posts/%E5%90%8C%E6%AD%A5%E4%B8%8E%E5%BC%82%E6%AD%A5/:2:2","tags":["python"],"title":"同步与异步","uri":"/posts/%E5%90%8C%E6%AD%A5%E4%B8%8E%E5%BC%82%E6%AD%A5/"},{"categories":["android"],"content":" 下载adb sudo pacman -S adb 查看当前连接的设备 adb devices 授权后，由unauthorized变成如图 查看当前所有软件 adb shell pm list packages 以删除美团为例子 搜索软件 adb shell pm list packages | grep meituan 删除软件 进入交互模式 adb shell 卸载软件 pm uninstall -k --user 0 com.sankuai.meituan Tip -k: keep the data and cache directories --user 0: Where 0 is ID of main user in Android system. This way you don’t need to root your device. 1 stack overflow: adb uninstall failed ↩︎ ","date":"2021-01-15","objectID":"/posts/%E5%88%A0%E9%99%A4%E6%89%8B%E6%9C%BA%E5%86%85%E7%BD%AEapp/:0:0","tags":["android"],"title":"删除手机内置app","uri":"/posts/%E5%88%A0%E9%99%A4%E6%89%8B%E6%9C%BA%E5%86%85%E7%BD%AEapp/"},{"categories":["数据结构"],"content":"顺序表代码实现 #define 与 typedef 的区别: 1 #define OK 1 当使用OK的时候会替换成1 #define 归预处理器管 typedef int Status 定义int 为Status类型 typedef 归编译器管 命名规范： SqList 这样的两个单词的合并，首字母要大写, 如ElemType, GetElem, ListDelete 使用#define后全要大写, 如#define TRUE 1 . 与 -\u003e 使用 当传递的是数组本身的时候用. 当传递的是指针的时候用-\u003e 定义SqList思路 ElemType 类型的 data[MAXSIZE]数组 必须确定当前的线性表的长度 int length GetElem的思路 不需要对数组进行修改，所以不传递数组指针SqList * 返回位序为i的元素的值, 需要指针来返回 ElemType *e, 数组下标是从0开始的，所以用*e=L.data[i-1] ListInsert的思路 边界上: 位序可以插入到第一个位置到当前长度+1的所有位置(在不满的情况下) 移动上: 从后往前移，此时操作的是数组，将位序转化为数组语言 for(k=L-\u003elength-1; k\u003e=i-1;k--) //位序所对应位置的元素也需要移动 L-\u003edata[k+1] = L-\u003edata[k]; L-\u003edata[i-1]=e; //插入新的元素 `` ListDelete的思路 边界上: 可以删除第一个位置到当前长度 移动上: 从位序开始，后面元素依次覆盖掉前面的元素 for (k = i; k \u003c L-\u003elength; k++) L-\u003edata[k-1] = L-\u003edata[k]; `` //linerlist.h #ifndef LEETCODE_LINERLIST_H #define LEETCODE_LINERLIST_H #include \u003cstdio.h\u003e #define MAXSIZE 20 /* 存储空间初始分配量*/ #define OK 1 #define ERROR 0 #define TRUE 1 #define FALSE 0 typedef int Status; typedef int ElemType; /* 将ElemType 类型定为int */ typedef struct { ElemType data[MAXSIZE]; /*数组存储数据元素，最大值为MAXSIZE;*/ int length; /*线性表当前长度*/ }SqList; // 获得元素操作 Status GetElem(SqList L, int i, ElemType *e); // 插入操作 Status ListInsert(SqList *L, int i, ElemType e); // 删除操作 Status ListDelete(SqList *L, int i, ElemType *e); // 遍历操作 void TravelList(SqList L); // 按值查找 int LocateElem(SqList L, ElemType e); #endif //LEETCODE_LINERLIST_H // linerlist.cpp #include \"SequenceList.h\" /*Status 是函数的类型，其值是函数结果状态代码，如OK等*/ /*初始条件： 顺序线性表L已存在， 1\u003c=i\u003c=ListLength(L)*/ /*操作结果: 用e返回L中第i个数据元素的值*/ Status GetElem(SqList L, int i, ElemType *e) { if(L.length==0 || i\u003c1 || i\u003eL.length) return ERROR; *e=L.data[i-1]; return OK; } /*初始条件： 顺序线性表L已存在， i\u003c=i\u003c=ListLength(L)*/ /*操作结果： 在L中第i位置之前插入新的数据元素e, L的长度加1*/ Status ListInsert(SqList *L, int i, ElemType e) { int k; if(L-\u003elength==MAXSIZE) /*顺序线性表已经满*/ return ERROR; if (i\u003c1 || i\u003eL-\u003elength+1) /*当i不在范围内时*/ return ERROR; if (i\u003c=L-\u003elength) /*若插入数据位置不在表尾*/ { for (k=L-\u003elength-1; k\u003e=i-1; k--) L-\u003edata [k+1] = L-\u003edata[k]; } L-\u003edata[i-1]=e; /*将新元素插入*/ L-\u003elength++; return OK; } /*初始条件： 顺序线性表L已在在, i\u003c=i\u003c=ListLength(L)*/ /*操作结果: 删除L的第i个数据元素，并用e返回其值，L的长度减1*/ Status ListDelete (SqList *L, int i, ElemType *e) { int k; if (L-\u003elength == 0) return ERROR; if (i \u003c 1 || i \u003e L-\u003elength) /*删除位置不正确*/ return ERROR; *e = L-\u003edata[i - 1]; if (i \u003c L-\u003elength) { /*如果删除不是最后位置*/ for (k = i; k \u003c L-\u003elength; k++) /*将删除位置后继元素前移*/ L-\u003edata[k - 1] = L-\u003edata[k]; } L-\u003elength--; return OK; } /*初始条件： 顺序线性表L已在在, i\u003c=i\u003c=ListLength(L)*/ /*操作结果: 返回顺序表L中的所有元素， 用空格分开*/ void TravelList(SqList L) { int i; for (i=0; i \u003c L.length; i++) printf(\"%d \", L.data[i]); printf(\"\\n\"); } /*初始条件： 顺序线性表L已存在， i\u003c=i\u003c=ListLength(L)*/ /*操作结果： 返回顺序表L中值为e的元素的位序*/ int LocateElem(SqList L, ElemType e) { int i; for(i=0; i\u003cL.length; i++) if(L.data[i]==e) return i+1; return 0; } //main.cpp #include \"SequenceList.h\" int main(void){ SqList L; L.length = 0; //插入测试 ListInsert(\u0026L, 1 ,2); ListInsert(\u0026L, 2, 3); printf(\"当前线性表中所有的元素:\\n\"); TravelList(L); //删除测试 int e; ListDelete(\u0026L, 1, \u0026e); printf(\"被删除的元素是 %d\\n\", e); printf(\"当前线性表中所有的元素:\\n\"); TravelList(L); //查找测试 int a; GetElem(L, 1, \u0026a); printf(\"第1个元素是: %d \\n\", a); printf(\"数值为3的元素在哪里？ %d\\n\", LocateElem(L, 3)); return 0; } 知乎 ↩︎ ","date":"2021-01-14","objectID":"/posts/%E9%A1%BA%E5%BA%8F%E8%A1%A8%E4%BB%A3%E7%A0%81%E5%AE%9E%E7%8E%B0/:1:0","tags":["顺序表"],"title":"顺序表代码实现","uri":"/posts/%E9%A1%BA%E5%BA%8F%E8%A1%A8%E4%BB%A3%E7%A0%81%E5%AE%9E%E7%8E%B0/"},{"categories":["树莓派"],"content":"什么是WAN口和LAN口?1 WAN端口用于连接至Internet LAN端口用于连接局域网设备 图1不能访问的原因在于路由器2认为WAN口连接的是另外一个网络，而设备2访问设备1的IP地址是在同一个网络中，所以不会向WAN口发送网络包，因此不通。 ","date":"2021-01-14","objectID":"/posts/%E6%A0%91%E8%8E%93%E6%B4%BE%E5%AE%9E%E7%8E%B0%E6%97%81%E8%B7%AF%E7%94%B1%E5%8A%9F%E8%83%BD/:1:0","tags":["旁路由"],"title":"树莓派实现旁路由功能","uri":"/posts/%E6%A0%91%E8%8E%93%E6%B4%BE%E5%AE%9E%E7%8E%B0%E6%97%81%E8%B7%AF%E7%94%B1%E5%8A%9F%E8%83%BD/"},{"categories":["树莓派"],"content":"什么是网关？ 网关(Gateway)就是一个网络连接到另一个网络的\"关口\" ","date":"2021-01-14","objectID":"/posts/%E6%A0%91%E8%8E%93%E6%B4%BE%E5%AE%9E%E7%8E%B0%E6%97%81%E8%B7%AF%E7%94%B1%E5%8A%9F%E8%83%BD/:2:0","tags":["旁路由"],"title":"树莓派实现旁路由功能","uri":"/posts/%E6%A0%91%E8%8E%93%E6%B4%BE%E5%AE%9E%E7%8E%B0%E6%97%81%E8%B7%AF%E7%94%B1%E5%8A%9F%E8%83%BD/"},{"categories":["树莓派"],"content":"什么是默认网关？ 一个房间可又有多扇门一样，一台主机可又有多个网关。默认网关的意思是一台主机如果找不到可用的网关，就把数据包给默认指定的网关，由这个网关来处理数据包。现在主机使用的网关，一般指的是默认网关。 ","date":"2021-01-14","objectID":"/posts/%E6%A0%91%E8%8E%93%E6%B4%BE%E5%AE%9E%E7%8E%B0%E6%97%81%E8%B7%AF%E7%94%B1%E5%8A%9F%E8%83%BD/:2:1","tags":["旁路由"],"title":"树莓派实现旁路由功能","uri":"/posts/%E6%A0%91%E8%8E%93%E6%B4%BE%E5%AE%9E%E7%8E%B0%E6%97%81%E8%B7%AF%E7%94%B1%E5%8A%9F%E8%83%BD/"},{"categories":["树莓派"],"content":"网关与路由器有什么关系？2 “网关”是一个概念，“路由器\"是一个产品。 网关: 帮助两个不能直接互通的网络，进行数据转发的。 路由器，手机，防火墙均可实现网关功能: 路由器将家庭局域网和互联网相连 手机开了热点后，笔记本接进来，手机作为网关把笔记本和互联网相连 防火墙可能做网关，局域网连至防火墙，防火墙把局域网和互联网相连 ","date":"2021-01-14","objectID":"/posts/%E6%A0%91%E8%8E%93%E6%B4%BE%E5%AE%9E%E7%8E%B0%E6%97%81%E8%B7%AF%E7%94%B1%E5%8A%9F%E8%83%BD/:3:0","tags":["旁路由"],"title":"树莓派实现旁路由功能","uri":"/posts/%E6%A0%91%E8%8E%93%E6%B4%BE%E5%AE%9E%E7%8E%B0%E6%97%81%E8%B7%AF%E7%94%B1%E5%8A%9F%E8%83%BD/"},{"categories":["树莓派"],"content":"旁路由如何实现？ ","date":"2021-01-14","objectID":"/posts/%E6%A0%91%E8%8E%93%E6%B4%BE%E5%AE%9E%E7%8E%B0%E6%97%81%E8%B7%AF%E7%94%B1%E5%8A%9F%E8%83%BD/:4:0","tags":["旁路由"],"title":"树莓派实现旁路由功能","uri":"/posts/%E6%A0%91%E8%8E%93%E6%B4%BE%E5%AE%9E%E7%8E%B0%E6%97%81%E8%B7%AF%E7%94%B1%E5%8A%9F%E8%83%BD/"},{"categories":["树莓派"],"content":"网络数据在其中会怎样流动？3 国内网站: 局域网设备发出数据 -\u003e 到达主路由LAN1口 -\u003e 到达主路由LAN2口 -\u003e 到达旁路由LAN口 -\u003e 旁路由分析数据走位 -\u003e 到达旁路由LAN口 -\u003e 到达主路由LAN2口 -\u003e 到达主路由WAN口 -\u003e 到达互连网 互联网服务器返回数据 -\u003e 到达主路由WAN口 -\u003e 到达主路由LAN1口 -\u003e 到达局域网设备 国外网站: 局域网设备发出数据 -\u003e 到达主路由LAN1口 -\u003e 到达主路由LAN2口 -\u003e 到达旁路由LAN口 -\u003e 旁路由分析数据走位, 加密数据 -\u003e 到达旁路由LAN口 -\u003e 到达主路由LAN2口 -\u003e 到达主路由WAN口 -\u003e 到达互联网 互联网服务器返回数据 -\u003e 到达主路由WAN口 -\u003e 到达主路由LAN2口 -\u003e 到达旁路由LAN口 -\u003e 旁路由解密数据 -\u003e 到达旁路由LAN口 -\u003e 到达主路由LAN2口 -\u003e 到达主路由LAN1口 -\u003e 到达局域网设备 ","date":"2021-01-14","objectID":"/posts/%E6%A0%91%E8%8E%93%E6%B4%BE%E5%AE%9E%E7%8E%B0%E6%97%81%E8%B7%AF%E7%94%B1%E5%8A%9F%E8%83%BD/:4:1","tags":["旁路由"],"title":"树莓派实现旁路由功能","uri":"/posts/%E6%A0%91%E8%8E%93%E6%B4%BE%E5%AE%9E%E7%8E%B0%E6%97%81%E8%B7%AF%E7%94%B1%E5%8A%9F%E8%83%BD/"},{"categories":["树莓派"],"content":"旁路由实现 WAN口 ip: 192.168.1.2 mask: 255.255.255.0 broad: 192.168.1.1 DNS: 192.168.1.1 0.0.0.0 LAN口 ip: 192.168.0.101 mask: 255.255.255.0 raspberrypi ip: 192.168.0.120 安装V2ray.FunPi(Debian Buster)4 下载安装 sudo su - root cd /usr/local git clone https://github.com/twotreesus/V2ray.FunPi.git V2ray.Fun cd V2ray.Fun/script ./install.sh 修改启动配置(面板用户名、密码、端口) /usr/local/V2ray.Fun/config/app_config.json { \"py/object\": \"core.app_config.AppConfig\", \"user\": \"admin\", \"password\": \"admin\", \"port\": 1086, \"proxy_mode\": 1, \"inited\": true } 设置树莓派的DHCP /etc/dhcpcd.conf ip_address: 设置为树莓派的IP地址 routers: 设置为当前树莓派的路由IP地址 interface etho static ip_address=192.168.0.120/24 static ip6_address=fd51:42f8:caae:d92e::f/64 static routers=192.168.0.1 static domain_name_servers=192.168.0.1 8.8.8.8 fd51:42f8:caae:d923::1 重启服务 sudo supervisorctl restart v2ray.fun 重启树莓派 sudo reboot 设置路由器的DHCP网关 将路由器的DHCP网关设置为树莓派的地址, 例中为192.168.0.120 设置代理 192.168.0.120:1086 进入面板， 设置代理 添加配置节点 开启代理 知乎:LAN口和WAN口的区别是什么 ↩︎ 网关和路由器的区别是什么? ↩︎ OpenWrt中，旁路由的设置与使用 ↩︎ V2ray.FunPi ↩︎ ","date":"2021-01-14","objectID":"/posts/%E6%A0%91%E8%8E%93%E6%B4%BE%E5%AE%9E%E7%8E%B0%E6%97%81%E8%B7%AF%E7%94%B1%E5%8A%9F%E8%83%BD/:4:2","tags":["旁路由"],"title":"树莓派实现旁路由功能","uri":"/posts/%E6%A0%91%E8%8E%93%E6%B4%BE%E5%AE%9E%E7%8E%B0%E6%97%81%E8%B7%AF%E7%94%B1%E5%8A%9F%E8%83%BD/"},{"categories":["linux"],"content":"Install cron1 sudo pacman -S cronie ","date":"2021-01-12","objectID":"/posts/corn%E4%BD%BF%E7%94%A8/:1:0","tags":["corn"],"title":"Corn使用","uri":"/posts/corn%E4%BD%BF%E7%94%A8/"},{"categories":["linux"],"content":"Quick running ","date":"2021-01-12","objectID":"/posts/corn%E4%BD%BF%E7%94%A8/:2:0","tags":["corn"],"title":"Corn使用","uri":"/posts/corn%E4%BD%BF%E7%94%A8/"},{"categories":["linux"],"content":"config setting default Editor export EDITOR=/usr/bin/nvim systemctl systemctl enable cronie.service systemctl start cronie.service ","date":"2021-01-12","objectID":"/posts/corn%E4%BD%BF%E7%94%A8/:2:1","tags":["corn"],"title":"Corn使用","uri":"/posts/corn%E4%BD%BF%E7%94%A8/"},{"categories":["linux"],"content":"create cron job2 crontab -e Crontab format1 Symbol Description * Wildcard, specifies every possible time interval , List multiple values separated by a comma. - Specify a range between two numbers, separated by a hyphen / Specify a periodicity/frequency using a slash example run every ten minutes */10 * * * * echo ‘Hello’ » /tmp/test.txt run every hours from 1-5 am 0 1-5 * * * * echo ‘Hello’ » /tmp/test.txt run every 30 minutes Mon-Fri 9am-5pm */30 9-17 * * 1-5 echo ‘Hello’ » /tmp/test.txt ","date":"2021-01-12","objectID":"/posts/corn%E4%BD%BF%E7%94%A8/:2:2","tags":["corn"],"title":"Corn使用","uri":"/posts/corn%E4%BD%BF%E7%94%A8/"},{"categories":["linux"],"content":"command user crontab -u user list crontab -l remove crontab -r Cron-Archwiki ↩︎ Linux/Mac Tutorial: Cron Jobs - How to Schedule Commands with crontab ↩︎ ","date":"2021-01-12","objectID":"/posts/corn%E4%BD%BF%E7%94%A8/:2:3","tags":["corn"],"title":"Corn使用","uri":"/posts/corn%E4%BD%BF%E7%94%A8/"},{"categories":["C"],"content":"重复包含问题的解决 ","date":"2021-01-12","objectID":"/posts/%E9%87%8D%E5%A4%8D%E5%8C%85%E5%90%AB%E9%97%AE%E9%A2%98%E8%A7%A3%E5%86%B3/:1:0","tags":["C"],"title":"重复包含问题解决","uri":"/posts/%E9%87%8D%E5%A4%8D%E5%8C%85%E5%90%AB%E9%97%AE%E9%A2%98%E8%A7%A3%E5%86%B3/"},{"categories":["C"],"content":"1. 在main.cpp中只需要包含xxx.h即可，不需要包含xxx.cpp 原因分析： PS: 命令中没有提到\"speak.h\"文件(原因是:在\"speak.cpp\"中已经包含了\"speak.h\") ","date":"2021-01-12","objectID":"/posts/%E9%87%8D%E5%A4%8D%E5%8C%85%E5%90%AB%E9%97%AE%E9%A2%98%E8%A7%A3%E5%86%B3/:1:1","tags":["C"],"title":"重复包含问题解决","uri":"/posts/%E9%87%8D%E5%A4%8D%E5%8C%85%E5%90%AB%E9%97%AE%E9%A2%98%E8%A7%A3%E5%86%B3/"},{"categories":["C"],"content":"2. 在xxx.h中，需要写上, 而xxx.cpp不需要写 #ifndef xxxxx #define xxxxx (...) #endif 原因分析： C++是采用独立编译，就是每个cpp单独编译成对应的.o文件，最后链接器再将多个.o文件链接成可执行程序。(防止同一个.o文件中包含多个相同的.h内容) ","date":"2021-01-12","objectID":"/posts/%E9%87%8D%E5%A4%8D%E5%8C%85%E5%90%AB%E9%97%AE%E9%A2%98%E8%A7%A3%E5%86%B3/:1:2","tags":["C"],"title":"重复包含问题解决","uri":"/posts/%E9%87%8D%E5%A4%8D%E5%8C%85%E5%90%AB%E9%97%AE%E9%A2%98%E8%A7%A3%E5%86%B3/"},{"categories":["C"],"content":"3. 使用xxx.h与xxx.cpp这种方式的时候，声明放在xxx.h中，定义放在xxx.cpp中 原因分析： C++是采用独立编译，就是每个cpp单独编译成对应的.o文件，最后链接器再将多个.o文件链接成可执行程序。(在将多个.o文件链接成可执行程序的时候，有可能会在不同的.o文件中含有相同的定义) ","date":"2021-01-12","objectID":"/posts/%E9%87%8D%E5%A4%8D%E5%8C%85%E5%90%AB%E9%97%AE%E9%A2%98%E8%A7%A3%E5%86%B3/:1:3","tags":["C"],"title":"重复包含问题解决","uri":"/posts/%E9%87%8D%E5%A4%8D%E5%8C%85%E5%90%AB%E9%97%AE%E9%A2%98%E8%A7%A3%E5%86%B3/"},{"categories":["C"],"content":"参考文章 注意头文件规则，避免链接错误：重复定义(multiple defination) 编译链接 C++ Compiling Cpp ","date":"2021-01-12","objectID":"/posts/%E9%87%8D%E5%A4%8D%E5%8C%85%E5%90%AB%E9%97%AE%E9%A2%98%E8%A7%A3%E5%86%B3/:2:0","tags":["C"],"title":"重复包含问题解决","uri":"/posts/%E9%87%8D%E5%A4%8D%E5%8C%85%E5%90%AB%E9%97%AE%E9%A2%98%E8%A7%A3%E5%86%B3/"},{"categories":["树莓派"],"content":"安装Nginx和PHP sudo apt-get update sudo apt-get install nginx php7.3-fpm php7.3-cli php7.3-curl php-7.3-gd php7.3-cgi sudo service nginx start sudo service php7.3-fpm restart 使Nginx能处理PHP sudo nano /etc/nginx/sites-available/default location / { # First attempt to serve request as file, then # as directory, then fall back to displaying a 404. try_files $uri $uri/ =404; } 修改为 location / { index index.html index.htm index.php default.html default.htm default.php; } location ~\\.php$ { fastcgi_pass unix:/run/php/php7.3-fpm.sock; #fastcgi_pass 127.0.0.1:9000; fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name; include fastcgi_params; } 重启nginx sudo service nginx restart ","date":"2021-01-11","objectID":"/posts/%E6%A0%91%E8%8E%93%E6%B4%BE%E5%AE%89%E8%A3%85pi_dashboard/:1:0","tags":["Dashboard"],"title":"树莓派安装pi_Dashboard","uri":"/posts/%E6%A0%91%E8%8E%93%E6%B4%BE%E5%AE%89%E8%A3%85pi_dashboard/"},{"categories":["树莓派"],"content":"下载pi-dashboard sudo apt-get install git cd /var/www/html sudo git clone https://github.com/nxez/pi-dashboard.git sudo chown -R www-data pi-dashboard 通过http://树莓派IP/pi-dashboard访问部署好的Pi Dashboard ","date":"2021-01-11","objectID":"/posts/%E6%A0%91%E8%8E%93%E6%B4%BE%E5%AE%89%E8%A3%85pi_dashboard/:2:0","tags":["Dashboard"],"title":"树莓派安装pi_Dashboard","uri":"/posts/%E6%A0%91%E8%8E%93%E6%B4%BE%E5%AE%89%E8%A3%85pi_dashboard/"},{"categories":["树莓派"],"content":"参考 Pi Dashboard (Pi 仪表盘) ","date":"2021-01-11","objectID":"/posts/%E6%A0%91%E8%8E%93%E6%B4%BE%E5%AE%89%E8%A3%85pi_dashboard/:3:0","tags":["Dashboard"],"title":"树莓派安装pi_Dashboard","uri":"/posts/%E6%A0%91%E8%8E%93%E6%B4%BE%E5%AE%89%E8%A3%85pi_dashboard/"},{"categories":["树莓派"],"content":"内网穿通SSH 修改服务器端的frps.ini [common] bind_port = 7000 服务器端开启frp ./frps -c ./frps.ini 客户端修改frpc.ini [common] server_addr = x.x.x.x server_port = 7000 [ssh] type = tcp local_ip = 127.x.x.x local_port = 22 remote_port = 6000 开启客户端的frpc ./frpc -c ./frpc.ini 通过ssh连接 ssh user@x.x.x.x -p 6000 ","date":"2021-01-10","objectID":"/posts/%E6%A0%91%E8%8E%93%E6%B4%BE%E5%AE%9E%E7%8E%B0%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F/:1:0","tags":["frp"],"title":"树莓派实现内网穿透","uri":"/posts/%E6%A0%91%E8%8E%93%E6%B4%BE%E5%AE%9E%E7%8E%B0%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F/"},{"categories":["树莓派"],"content":"参考 github ","date":"2021-01-10","objectID":"/posts/%E6%A0%91%E8%8E%93%E6%B4%BE%E5%AE%9E%E7%8E%B0%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F/:2:0","tags":["frp"],"title":"树莓派实现内网穿透","uri":"/posts/%E6%A0%91%E8%8E%93%E6%B4%BE%E5%AE%9E%E7%8E%B0%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F/"},{"categories":["树莓派"],"content":"今天总有拿到树莓派4B+, 想着搭建一个下载机器，供家里人使用。 ","date":"2021-01-09","objectID":"/posts/%E6%A0%91%E8%8E%93%E6%B4%BE%E8%B8%A9%E5%9D%91%E8%AE%B0/:0:0","tags":["nginx","smbd"],"title":"树莓派踩坑记","uri":"/posts/%E6%A0%91%E8%8E%93%E6%B4%BE%E8%B8%A9%E5%9D%91%E8%AE%B0/"},{"categories":["树莓派"],"content":"各个接口功能 第一次入手，刚开始连电源键都没有找到, 官网提供了说明. ","date":"2021-01-09","objectID":"/posts/%E6%A0%91%E8%8E%93%E6%B4%BE%E8%B8%A9%E5%9D%91%E8%AE%B0/:1:0","tags":["nginx","smbd"],"title":"树莓派踩坑记","uri":"/posts/%E6%A0%91%E8%8E%93%E6%B4%BE%E8%B8%A9%E5%9D%91%E8%AE%B0/"},{"categories":["树莓派"],"content":"安装Raspberry Pi OS ","date":"2021-01-09","objectID":"/posts/%E6%A0%91%E8%8E%93%E6%B4%BE%E8%B8%A9%E5%9D%91%E8%AE%B0/:2:0","tags":["nginx","smbd"],"title":"树莓派踩坑记","uri":"/posts/%E6%A0%91%E8%8E%93%E6%B4%BE%E8%B8%A9%E5%9D%91%E8%AE%B0/"},{"categories":["树莓派"],"content":"下载系统 系统下载地址Raspberry Pi OS ","date":"2021-01-09","objectID":"/posts/%E6%A0%91%E8%8E%93%E6%B4%BE%E8%B8%A9%E5%9D%91%E8%AE%B0/:2:1","tags":["nginx","smbd"],"title":"树莓派踩坑记","uri":"/posts/%E6%A0%91%E8%8E%93%E6%B4%BE%E8%B8%A9%E5%9D%91%E8%AE%B0/"},{"categories":["树莓派"],"content":"烧录镜像 sudo fdisk -l 先查看SD卡的名称 sudo dd bs=4M if=系统路径 of=/dev/SD名称 status=progress oflag=sync Tip 使用dd时，写SD卡的名称，不要写SD卡分区的名称 使用dd时，报错 d: opening /dev/sdc: Read-only file system dd参数 bs=BYTES read and write up to BYTES bytes at a time (default:512); overrides ibs and obs status=LEVEL The LEVEL of information to print to sederr; none suppresses everything but error messages, noxfer suppresses the final transfer statistics, progress shows periodic transfer statistics. nocache Request to drop cache. See also oflag=sync ","date":"2021-01-09","objectID":"/posts/%E6%A0%91%E8%8E%93%E6%B4%BE%E8%B8%A9%E5%9D%91%E8%AE%B0/:2:2","tags":["nginx","smbd"],"title":"树莓派踩坑记","uri":"/posts/%E6%A0%91%E8%8E%93%E6%B4%BE%E8%B8%A9%E5%9D%91%E8%AE%B0/"},{"categories":["树莓派"],"content":"开启SSH，并连接 SD卡的boot，创建名为ssh`的文件即可 ssh pi@pi_ip_address 默认密码raspberry ","date":"2021-01-09","objectID":"/posts/%E6%A0%91%E8%8E%93%E6%B4%BE%E8%B8%A9%E5%9D%91%E8%AE%B0/:2:3","tags":["nginx","smbd"],"title":"树莓派踩坑记","uri":"/posts/%E6%A0%91%E8%8E%93%E6%B4%BE%E8%B8%A9%E5%9D%91%E8%AE%B0/"},{"categories":["树莓派"],"content":"配置 设置镜像 切换到清华源 下载并配置samba sudo apt install samba samba-common-bin // 下载samba sudo apt install vim // 下载vim sudo vim /etc/samba/smb.conf //配置samba 末尾加入 [MyNAS] valid users = pi, root path = /media/pi browseable = yes writable = yes create mask = 0644 directory mask = 0775 testparm //测试是否通过 sudo smbpassed -a pi //smb加入pi用户 systemctl enable smbd //开机启动smbd systemctl start smbd //启动smbd 下载并配置aria2 sudo apt install nginx sudo apt install aria2 cd /var/www/html sudo wget https://github.com/mayswind/AriaNg/releases/download/1.1.7/AriaNg-1.1.7-AllInOne.zip unzip AriaNg-1.1.7-AllInOne.zip systemctl start nginx //启动nginx systemctl enable nginx //开机启动nginx Tip 创建root用户 sudo passwd root ","date":"2021-01-09","objectID":"/posts/%E6%A0%91%E8%8E%93%E6%B4%BE%E8%B8%A9%E5%9D%91%E8%AE%B0/:2:4","tags":["nginx","smbd"],"title":"树莓派踩坑记","uri":"/posts/%E6%A0%91%E8%8E%93%E6%B4%BE%E8%B8%A9%E5%9D%91%E8%AE%B0/"},{"categories":["树莓派"],"content":"参考 raspberrypi.org raspberrypi.stackexchange.com ","date":"2021-01-09","objectID":"/posts/%E6%A0%91%E8%8E%93%E6%B4%BE%E8%B8%A9%E5%9D%91%E8%AE%B0/:3:0","tags":["nginx","smbd"],"title":"树莓派踩坑记","uri":"/posts/%E6%A0%91%E8%8E%93%E6%B4%BE%E8%B8%A9%E5%9D%91%E8%AE%B0/"},{"categories":["数据结构"],"content":"ShellSort Shell 排序动图 Tip 14\u003e\u003e2 如何计算？ \u003e\u003e为右移运算符 14 的二进制为(0000 1110) 正数向右移动，低位舍弃，高位补零 移动之后的二进制为(0000 0011), 为3 #include \u003cstdio.h\u003e int main(void) { int number = 14 \u003e\u003e 2; printf(\"右移二位后的值为: %d \", number); } gap = len \u003e\u003e 1 是什么意思？ 表示 gap = len 不断的对半分 ","date":"2021-01-07","objectID":"/posts/shellsort/:1:0","tags":["algorithm"],"title":"ShellSort","uri":"/posts/shellsort/"},{"categories":["数据结构"],"content":"ShellSort C语言实现 #include \u003cstdio.h\u003e void print_list(int arr[], int len); void shell_sort(int arr[], int len) { int gap, i, j; int temp; int k = 1; for (gap = len \u003e\u003e 1; gap \u003e 0; gap \u003e\u003e= 1){ printf(\"gap 为%d时: \\n\", gap); for (i = gap; i\u003clen; i++) { temp = arr[i]; for(j = i-gap; j\u003e=0 \u0026\u0026 arr[j] \u003e temp; j -= gap) arr[j + gap] = arr[j]; arr[j + gap] = temp; printf(\"第%d次list: \", k); print_list(arr,len); k+=1; printf(\"\\n\"); } } } void print_list(int arr[], int len) { for(int i=0;i\u003clen;i++) printf(\"%d \", arr[i]); } int main (void) { int arr[] = {3, 21, 412, 1, 4,39, 123, 6}; int len = (int) sizeof(arr) /sizeof (*arr); printf(\"初始list: \"); print_list(arr,len); printf(\"\\n\"); shell_sort(arr,len); printf(\"最终list: \"); print_list(arr,len); printf(\"\\n\"); } gap = 4 gap = 2 gap = 1 ","date":"2021-01-07","objectID":"/posts/shellsort/:2:0","tags":["algorithm"],"title":"ShellSort","uri":"/posts/shellsort/"},{"categories":["数据结构"],"content":"Shell 排序复杂度和稳定性分析 啥是序偶(Ordered pair)? 序: 就是有序的意思 偶: 一对儿 证明N个互异的数组的平均逆序数是$N(N-1)/4$ 表$L$: 34, 8, 64, 51, 32, 21 其反序表$L_r$: 21, 32, 51, 64, 8, 34 该表中任意两个数的序偶$(x, y)$, 且$y \u003e x$, 显然在$L$与$L_r$中，在表L和它的反序表$L_r$中的序偶的总个数为$C_N^2=N(N-1)/2$, 因此，平均每个表的逆序是$N(N-1)/4$ 证明通过交换相邻元素进行排序的任何平均需要$\\Omega(N^2)$ 已知初始的平均逆序数$N(N - 1)/4 = \\Omega(N^2)$, 而每次交换只减少一个逆序，因此需要$\\Omega(N^2)$交换 ","date":"2021-01-07","objectID":"/posts/shellsort/:3:0","tags":["algorithm"],"title":"ShellSort","uri":"/posts/shellsort/"},{"categories":["数据结构"],"content":"时间复杂度 为啥希尔排序的时间复杂度可以突破$O(N^2)$? 以希尔增量时希尔排序的最坏情形为$O(N^2)$ 啥是希尔增量? 希尔排序使用一个序列$h_1, h_2, … h_t$, 叫做增量序列 希尔增量：$h_t = \\lfloor N/2 \\rfloor$ $h_k = \\lfloor h_{k+1} \\rfloor$ 相隔 $h_k$个元素都被排序，此时称文件是$h_k$排序 以Hibbard增量的希尔排序的最坏情形为$O( N^\\frac{3}{2})$ 啥是Hibbard增量？ $1, 3, 7, …, 2^k - 1$ ","date":"2021-01-07","objectID":"/posts/shellsort/:3:1","tags":["algorithm"],"title":"ShellSort","uri":"/posts/shellsort/"},{"categories":["数据结构"],"content":"空间复杂度 $O(1)$ ","date":"2021-01-07","objectID":"/posts/shellsort/:3:2","tags":["algorithm"],"title":"ShellSort","uri":"/posts/shellsort/"},{"categories":["数据结构"],"content":"稳定性 Tip 在一个数组中，存在相同的数，经过排序后，这些数的相对次序保持不变，即原来数组中r[i] = r[j], r[i] 在r[j] 之前，经过排序后，r[i]仍在r[j]之前， 则称这种排序算法是稳定的，否则称为不稳定的。 序列： 3 5 10 $8_1$ 7 2 $8_2$ 1 20 6 对于gap=5时 (3, 2), (5, $8_2$), (10, 1), ($8_1$, 20), (7, 6) 排序后(2, 3), (5, $8_2$), (1, 10), ($8_1$, 20), (7, 6) 2 5 1 $8_1$ 7 3 $8_2$ 10 20 6 对于gap=2时，向下取整 (2, 1, 7, $8_2$, 20), (5, $8_1$, 3, 10, 6) 排序后 (1, 2, 7, $8_2$, 20), (3, 5, 6, $8_1$, 10) 1, 3, 2, 5, 7, 6, $8_2$, $8_1$, 20, 10 此时$8_2$已经跑到$8_1$之前，表示Shell排序不稳定 ","date":"2021-01-07","objectID":"/posts/shellsort/:3:3","tags":["algorithm"],"title":"ShellSort","uri":"/posts/shellsort/"},{"categories":["数据结构"],"content":"如何用C语言实现Hibbard增量的Shell排序? 为什么要从希尔增量变成Hibbard增量？ 在希尔增量的情况下: 间隔为8时，分为8组 (1, 5), (9, 13), (2, 6), (10, 14), (3, 7), (11, 15), (4, 8), (12, 16) 间隔为4时，分为4组 (1, 3, 5, 7), (9, 11, 13, 15), (2, 4, 6, 8), (10, 12, 14, 16) 间隔为2时，分为2组 (1, 2, 3, 4, 5, 6, 7, 8), (9, 10, 11, 12, 13, 14, 15, 16) 间隔为1时，分为1组 (1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16) 前3个增量没有起任何作用 啥是一个好的增量？ 最后一个增量必须为1 避免序列中的值(尤其是相邻的值)互为倍数的情况 ","date":"2021-01-07","objectID":"/posts/shellsort/:4:0","tags":["algorithm"],"title":"ShellSort","uri":"/posts/shellsort/"},{"categories":["数据结构"],"content":"参考文章 数据结构与算法——希尔排序 希尔排序增量序列简介 希尔排序为什么会那么牛那么快，能够证明吗？ ","date":"2021-01-07","objectID":"/posts/shellsort/:5:0","tags":["algorithm"],"title":"ShellSort","uri":"/posts/shellsort/"},{"categories":["数据结构"],"content":"插入排序 ","date":"2021-01-06","objectID":"/posts/insertionsort/:1:0","tags":["algorithm"],"title":"InsertionSort","uri":"/posts/insertionsort/"},{"categories":["数据结构"],"content":"插入排序的特征 1.从第二个元素(比较元素)开始一一与前面元素(被比较元素)比较, 若当前元素小于被比较元素，被比较元素后移，直到比较元素比被比较元素大或等于时，比较元素插入到被比较元素的位置 比较元素位置: 从第二个元素到最后一个(n-1个) 被比较元素位置: 从第一个到比较元素位置-1, 考虑从比较元素位置依次递减，满足\u003e=0即可. 即用while 这里一直用的arr[j+1] = arr[j], 采取前面元素覆盖后面元素的方式，当满足条件时，arr[j+1]才等于key ","date":"2021-01-06","objectID":"/posts/insertionsort/:2:0","tags":["algorithm"],"title":"InsertionSort","uri":"/posts/insertionsort/"},{"categories":["数据结构"],"content":"C语言实现 #include\u003cstdio.h\u003e void insertion_sort(int arr[], int len); void print_list(int arr[], int len); void insertion_sort(int arr[], int len) { int i, j, key; int k=1; for(i=1; i\u003clen; i++) { key = arr[i]; j=i-1; while((j\u003e=0) \u0026\u0026 (arr[j]\u003ekey)){ arr[j+1] = arr[j]; j--; } arr[j+1] = key; printf(\"第%d次list:\", k); print_list(arr, len); printf(\"\\n\"); k+=1; } } void print_list(int arr[], int len) { int i; for(i=0; i\u003clen; i++) printf(\"%d \", arr[i]); } int main(void) { int arr[] = {22, 34, 321, 32, 1, 5, 23}; int len = (int) sizeof(arr) / sizeof(*arr); printf(\"初始list:\"); print_list(arr, len); printf(\"\\n\"); insertion_sort(arr, len); printf(\"最终list:\"); print_list(arr, len); return 0; } ","date":"2021-01-06","objectID":"/posts/insertionsort/:3:0","tags":["algorithm"],"title":"InsertionSort","uri":"/posts/insertionsort/"},{"categories":["数据结构"],"content":"复杂度分析 ","date":"2021-01-06","objectID":"/posts/insertionsort/:4:0","tags":["algorithm"],"title":"InsertionSort","uri":"/posts/insertionsort/"},{"categories":["数据结构"],"content":"时间复杂度 最坏时间复杂度 在数组完全逆序的情况下: 插入第2个元素时，考虑对比1个元素 插入第3个元素时，考虑对比2个元素 插入第n个元素时，考虑对比n-1个元素 最坏情况下的比较次数是:$1+2+…+n-1=\\frac{(n-1)n}{2}$ 所以其时间复杂度是: $O(n^2)$ 最优时间复杂度 在数组完全正序的情况下: 插入第2个元素时，考虑对比1个元素 插入第3个元素时，考虑对比1个元素 插入第n个元素时，考虑对比1个元素 最好情况下的比较次数是: $1+1+…+1=n$ 所以其时间复杂度是: $O(n)$ ","date":"2021-01-06","objectID":"/posts/insertionsort/:4:1","tags":["algorithm"],"title":"InsertionSort","uri":"/posts/insertionsort/"},{"categories":["数据结构"],"content":"空间复杂度 Note 一个程序在执行时除需要存储空间来存放本身的指令、常数、变量和输入数据外，还需要一些对数据进行操作的工作单元和存储一些为实现计算所需信息的辅助空间。 算法原地工作: 是指算法所需的辅助空间为常量, 即$O(1)$ 此插入排序算法的辅助空间为常量，即其空间复杂度为$O(1)$ ","date":"2021-01-06","objectID":"/posts/insertionsort/:4:2","tags":["algorithm"],"title":"InsertionSort","uri":"/posts/insertionsort/"},{"categories":["数据结构"],"content":"参考文章 插入排序 | 菜鸟教程 ","date":"2021-01-06","objectID":"/posts/insertionsort/:5:0","tags":["algorithm"],"title":"InsertionSort","uri":"/posts/insertionsort/"},{"categories":["数据结构"],"content":"选择排序 ","date":"2021-01-05","objectID":"/posts/selectionsort/:1:0","tags":["algorithm"],"title":"Selection_Sort","uri":"/posts/selectionsort/"},{"categories":["数据结构"],"content":"C语言实现 #include \u003cstdio.h\u003e void print_list(int arr[], int len); void selection_sort(int arr[], int len); void swap(int *a, int *b); void selection_sort(int arr[], int len) { int i, j; printf(\"初始list:\"); print_list(arr, len); printf(\"\\n\"); int k = 1; for(i=0; i\u003clen -1; i++) { int min = i; for(j = i + 1; j \u003c len; j++) if (arr[j] \u003c arr[min]) min = j; swap(\u0026arr[min], \u0026arr[i]); printf(\"第%d次交换后的list:\", k); print_list(arr, len); printf(\"\\n\"); k+=1; } } void swap(int *a, int *b) { int temp = *a; *a = *b; *b = temp; } void print_list(int arr[], int len) { int i; for (i=0; i\u003c len; i++) printf(\"%d \", arr[i]); } int main() { int arr[] = { 22, 34, 3, 4, 5, 9}; int len = (int) sizeof(arr) / sizeof(*arr); selection_sort(arr, len); return 0; } Note 前面的元素与后面的元素一一对比, 若后面的元素小，将最小元素的的序号替换成它, 最后前的元素的值与最小序号所对的值替换 即只需要选择n-1个前元素即可（0 -\u003e len - 2），同时需要与后面的所有元素对比(0 -\u003e len - 1) 一次循环结束后确定了最小元素才互换，不是一得到一个较小的元素就互换 ","date":"2021-01-05","objectID":"/posts/selectionsort/:2:0","tags":["algorithm"],"title":"Selection_Sort","uri":"/posts/selectionsort/"},{"categories":["数据结构"],"content":"时间复杂度与空间复杂度分析 ","date":"2021-01-05","objectID":"/posts/selectionsort/:3:0","tags":["algorithm"],"title":"Selection_Sort","uri":"/posts/selectionsort/"},{"categories":["数据结构"],"content":"时间复杂度 第一次内循环(1 -\u003e len - 1), N - 1次 第二次内循环(2 -\u003e len - 1), N - 2次 第三次内循环(3 -\u003e len - 1), N - 3次 第后一次内循环(len - 2 -\u003e len - 1), 1次 比较的次数是(N - 1) + (N - 2) + ... + 1 , 其和是 $\\frac{N(N-1)}{2}$ 所以其时间复杂度是$O(N^2)$ ","date":"2021-01-05","objectID":"/posts/selectionsort/:3:1","tags":["algorithm"],"title":"Selection_Sort","uri":"/posts/selectionsort/"},{"categories":["数据结构"],"content":"空间复杂度 O(1) ","date":"2021-01-05","objectID":"/posts/selectionsort/:3:2","tags":["algorithm"],"title":"Selection_Sort","uri":"/posts/selectionsort/"},{"categories":["数据结构"],"content":"参考文章 选择排序 ","date":"2021-01-05","objectID":"/posts/selectionsort/:4:0","tags":["algorithm"],"title":"Selection_Sort","uri":"/posts/selectionsort/"},{"categories":["数据结构"],"content":"冒泡排序 ","date":"2021-01-04","objectID":"/posts/bubblesort/:1:0","tags":["algorithm"],"title":"BubbleSort","uri":"/posts/bubblesort/"},{"categories":["数据结构"],"content":"C语言实现 #include \u003cstdio.h\u003e void print_list(int arr[], int len); void bubble_sort(int arr[], int len); void bubble_sort(int arr[], int len) { int i, j, temp; printf(\"初始list为:\"); print_list(arr, len); printf(\"\\n\"); int k = 1; for(i = 0; i \u003c len - 1; i++) for (j = 0; j \u003c len - 1 - i; j++) if (arr[j] \u003e arr[j + 1]){ temp = arr[j]; arr[j] = arr[j+1]; arr[j + 1] = temp; printf(\"第%d次替换后的list : \", k); print_list(arr, len); printf(\"\\n\"); k+=1; } } void print_list(int arr[], int len) { int i; for (i=0; i\u003c len; i++) printf(\"%d \", arr[i]); } int main() { int arr[] = { 22, 34, 3, 4}; int len = (int) sizeof(arr) / sizeof(*arr); bubble_sort(arr, len); return 0; } 次数 list 状态 解释 i j 是否有移动 0 22 34 3 4 初始化 0 0 1 22 34 3 4 22(前)与34(后)比较, 22小, 不移动, j+1 0 0-\u003e1 2 22 3 34 4 34(前)与3(后)比较, 3小, 移至前面, j+1 0 1-\u003e2 * 3 22 3 4 34 34(前)与4(后)比较, 4小, 移至前面，j+1(此时j+1后=len - 1 - i), 跳出当前循环，i+1, j变为0 0-\u003e1 2-\u003e3-\u003e0 * 4 3 22 4 34 22(前)与3(后)比较，3小, 移至前面，j+1 1 0-\u003e1 * 5 3 4 22 34 22(前)与4(后)比较，4小, 移至前面，j+1(此时j+1后=len - 1 - i), 跳出当前循环, i+1, j变为0 1-\u003e2 1-\u003e2-\u003e0 * 6 3 4 22 34 3(前)与4(后), 3小，不移动, j+1, (此时j+1=len - 1 - i), 跳出当前循环， i+1 (此时i=len -1)退出上层循环 2-\u003e3 0-\u003e1 ","date":"2021-01-04","objectID":"/posts/bubblesort/:2:0","tags":["algorithm"],"title":"BubbleSort","uri":"/posts/bubblesort/"},{"categories":["数据结构"],"content":"标准冒泡排序时间复杂度与空间复杂度分析 ","date":"2021-01-04","objectID":"/posts/bubblesort/:3:0","tags":["algorithm"],"title":"BubbleSort","uri":"/posts/bubblesort/"},{"categories":["数据结构"],"content":"时间复杂度 void bubble_sort(int arr[], int len) { int i, j, temp; for(i = 0; i \u003c len - 1; i++) for (j = 0; j \u003c len -1 -i; j++) if (arr[j] \u003e arr[j + 1]) { temp = arr[j]; arr[j] = arr[j+1]; arr[j + 1] = temp; } } 语句 cost times int i, j, temp $C_1$ 1 i \u003c len - 1 $C_2$ n(n次判断) i++ $C_3$ n - 1(不满足条件不加) j=0 $C_4$ i++只会执行n-1次，即j=0执行n-1次 j \u003c len - 1 - i $C_5$ $t_1$(i=0) + $t_1$(i=1) + … + $t_1$(i = n-2) + $t_1$(i = n-1), 最多执行n-1次 j++ $C_6$ $t_2$(i=0) + $t_2$(i=1) + … + $t_2$(i = n-2) + $t_2$(i = n-1) arr[j + 1] \u003c arr[j] $C_7$ $t_3$(i=0) + $t_3$(i=1) + … + $t_3$(i = n-2) + $t_3$(i = n-1) swap(arr, j, j+1) $C_8$ $t_4$(i=0) + $t_4$(i=1) + … + $t_4$(i = n-2) + $t_4$(i = n-1) 算法总的运行时间是第一条语句执行时间之和。如果执行一条语句需要c_i步，又共执行了n次这条语句。那么它在运行时间中占cin为计算总运行时间T[n], 对第一对cost与times这积求和。 T(n) = C1 + C2n + C3(n - 1) + C4(n - 1) + C5[t1(i=0) + t1(i=1) + … + t1(i=n-2)] + c6[t2(i=0) + t2(i=1) + … t2(i=n-2)] + c7[t3(i=0) + t3(i=1) + … + t3(i=n-2)] + c8[t4(i=0) + t4(i=1) + … + t4(i=n-2)]] 最优时间复杂度 第8步，不执行 T(n) = C1 + C2n + C3(n - 1) + C4(n - 1) + C5[t1(i=0) + t1(i=1) + … + t1(i=n-1)] + c6[t2(i=0) + t2(i=1) + … t2(i=n-1)] + c7[t3(i=0) + t3(i=1) + … + t3(i=n-1)] 即可T(n) = O(n^2) 最坏时间复杂度 第8步，均执行 T(n) = C1 + C2n + C3(n - 1) + C4(n - 1) + C5[t1(i=0) + t1(i=1) + … + t1(i=n-2)] + c6[t2(i=0) + t2(i=1) + … t2(i=n-2)] + c7[t3(i=0) + t3(i=1) + … + t3(i=n-2)] + c8[t4(i=0) + t4(i=1) + … + t4(i=n-2)]] 即可T(n) = O(n^2) ","date":"2021-01-04","objectID":"/posts/bubblesort/:3:1","tags":["algorithm"],"title":"BubbleSort","uri":"/posts/bubblesort/"},{"categories":["数据结构"],"content":"冒泡排序优化 在内部循环的时候，一次交换都没有发生时，直接退出循环即可 void bubble_sort(int arr[], int len) { int i, j, temp; int flag = 0; for(i = 0; i \u003c len - 1; i++){ for (j = 0; j \u003c len - 1 - i; j++) if (arr[j] \u003e arr[j + 1]){ temp = arr[j]; arr[j] = arr[j+1]; arr[j + 1] = temp; flag = 1; } if(flag == 0) return; } } 此时最优时间复杂度 T(n) = O(n), 外部只执行1次， 内部执行 T(n) = C1 + C2 + C3 + C4(n - 1) + C5(n - 1) + c6(n - 1) ","date":"2021-01-04","objectID":"/posts/bubblesort/:4:0","tags":["algorithm"],"title":"BubbleSort","uri":"/posts/bubblesort/"},{"categories":["数据结构"],"content":"参考 Bubble Sort 冒泡排序 ","date":"2021-01-04","objectID":"/posts/bubblesort/:5:0","tags":["algorithm"],"title":"BubbleSort","uri":"/posts/bubblesort/"},{"categories":["docker"],"content":"Docker 三大基本概念 镜像(Image) 容器(Container) 仓库(Repository) ","date":"2021-01-02","objectID":"/posts/docker/:1:0","tags":["docker"],"title":"Docker","uri":"/posts/docker/"},{"categories":["docker"],"content":"安装Docker(Debian) ","date":"2021-01-02","objectID":"/posts/docker/:2:0","tags":["docker"],"title":"Docker","uri":"/posts/docker/"},{"categories":["docker"],"content":"镜像 ","date":"2021-01-02","objectID":"/posts/docker/:3:0","tags":["docker"],"title":"Docker","uri":"/posts/docker/"},{"categories":["docker"],"content":"获取镜像 docker pull [选项] [Docker Registry 地址[:端口号]/]仓库名[:标签] Docker 镜像仓库地址 默认地址是 Docker Hub(docker.io) 仓库名 \u003c用户名\u003e/\u003c软件名\u003e 对于Docker Hub, 不给出用户名，默认为library, 即官方镜像 比如: docker pull mquandalle/wekan docker pull debian //不给出用户名，使用用官方镜像 docker pull ubuntu:14.04 //使用官方镜像中版本号为14.04的ubuntu Tip Docker是采取分层存储的概念, 镜像是由多层存储所构成。下载也是一层层去下载，并非单一文件。 ","date":"2021-01-02","objectID":"/posts/docker/:3:1","tags":["docker"],"title":"Docker","uri":"/posts/docker/"},{"categories":["docker"],"content":"运行镜像 $ docker run -it --rm ubuntu:14.04 参数说明： -it: -i:交互式操作 -t: 表示终端 --rm: 表示容器退出后随之将其删除 ","date":"2021-01-02","objectID":"/posts/docker/:3:2","tags":["docker"],"title":"Docker","uri":"/posts/docker/"},{"categories":["docker"],"content":"列出镜像 $ docker image ls Tip Docker Hub中显示的体积与docker image ls显示的镜像大小不同 Docker Hub中显示的体积是压缩后的体积，在镜像下载和上传的过程中镜像是保持着压缩状态的，在网络传输过程中，关心的是流量大小 docker image ls列表中的镜像体积总和并非是所有镜像实际硬盘消耗。由于Docker镜像是多层存储结构，并且可以继承、复用，因此不同镜像可能会使用相同的基础镜像，从而拥有共同的层。相同的层只需要保存一份即可，因此实际镜像硬盘占用空间很可能比这个列表镜像大小的总和要小的多。 $ docker system df 可以查看镜像、容器、数据卷所占用的空间 ","date":"2021-01-02","objectID":"/posts/docker/:3:3","tags":["docker"],"title":"Docker","uri":"/posts/docker/"},{"categories":["docker"],"content":"删除镜像 $ docker image rm [选项] \u003c镜像1\u003e [\u003c镜像2\u003e] \u003c镜像\u003e 可以是ID, 镜像名或镜像摘要 ID: 一般取前3个字符以上，只要足够区分别的镜像就可以了 如： docker image rm df0 镜像名: \u003c仓库名\u003e:\u003c标签\u003e 如： docker image rm mongo:latest 镜像摘要 $ docker image ls --digests ","date":"2021-01-02","objectID":"/posts/docker/:3:4","tags":["docker"],"title":"Docker","uri":"/posts/docker/"},{"categories":["git"],"content":"为什么需要转换SHH地址和HTTPS? SSH地址在push, pull时均不需要输入账号密码 ","date":"2021-01-02","objectID":"/posts/github_ssh%E5%9C%B0%E5%9D%80%E5%92%8Chttps%E5%9C%B0%E5%9D%80%E7%9B%B8%E4%BA%92%E8%BD%AC%E6%8D%A2/:1:0","tags":["git"],"title":"SHH地址和HTTPS地址相互转换","uri":"/posts/github_ssh%E5%9C%B0%E5%9D%80%E5%92%8Chttps%E5%9C%B0%E5%9D%80%E7%9B%B8%E4%BA%92%E8%BD%AC%E6%8D%A2/"},{"categories":["git"],"content":"SHH地址的特征 git@远程仓库域名:用户名/仓库名.git ","date":"2021-01-02","objectID":"/posts/github_ssh%E5%9C%B0%E5%9D%80%E5%92%8Chttps%E5%9C%B0%E5%9D%80%E7%9B%B8%E4%BA%92%E8%BD%AC%E6%8D%A2/:2:0","tags":["git"],"title":"SHH地址和HTTPS地址相互转换","uri":"/posts/github_ssh%E5%9C%B0%E5%9D%80%E5%92%8Chttps%E5%9C%B0%E5%9D%80%E7%9B%B8%E4%BA%92%E8%BD%AC%E6%8D%A2/"},{"categories":["git"],"content":"HTTPS地址的特征 https://远程仓库域名/用户名/仓库名.git ","date":"2021-01-02","objectID":"/posts/github_ssh%E5%9C%B0%E5%9D%80%E5%92%8Chttps%E5%9C%B0%E5%9D%80%E7%9B%B8%E4%BA%92%E8%BD%AC%E6%8D%A2/:3:0","tags":["git"],"title":"SHH地址和HTTPS地址相互转换","uri":"/posts/github_ssh%E5%9C%B0%E5%9D%80%E5%92%8Chttps%E5%9C%B0%E5%9D%80%E7%9B%B8%E4%BA%92%E8%BD%AC%E6%8D%A2/"},{"categories":["git"],"content":"HTTPS地址向git地址转化 修改项目的.git -\u003e config url = git@github.com:guangsizhongbin/Blog.git ","date":"2021-01-02","objectID":"/posts/github_ssh%E5%9C%B0%E5%9D%80%E5%92%8Chttps%E5%9C%B0%E5%9D%80%E7%9B%B8%E4%BA%92%E8%BD%AC%E6%8D%A2/:4:0","tags":["git"],"title":"SHH地址和HTTPS地址相互转换","uri":"/posts/github_ssh%E5%9C%B0%E5%9D%80%E5%92%8Chttps%E5%9C%B0%E5%9D%80%E7%9B%B8%E4%BA%92%E8%BD%AC%E6%8D%A2/"},{"categories":["git"],"content":"参考 Github SSH地址和HTTPS地址的相互转换 ","date":"2021-01-02","objectID":"/posts/github_ssh%E5%9C%B0%E5%9D%80%E5%92%8Chttps%E5%9C%B0%E5%9D%80%E7%9B%B8%E4%BA%92%E8%BD%AC%E6%8D%A2/:5:0","tags":["git"],"title":"SHH地址和HTTPS地址相互转换","uri":"/posts/github_ssh%E5%9C%B0%E5%9D%80%E5%92%8Chttps%E5%9C%B0%E5%9D%80%E7%9B%B8%E4%BA%92%E8%BD%AC%E6%8D%A2/"},{"categories":["hugo"],"content":"系统版本 root@vultr:~# hostnamectl Static hostname: vultr.guest Icon name: computer-vm Chassis: vm Machine ID: 014b2aed70f7e09db32693a85feeb49a Boot ID: fe9876f6146f4fb4a3187f09d94f5ab3 Virtualization: kvm Operating System: Debian GNU/Linux 9 (stretch) Kernel: Linux 4.9.0-14-amd64 Architecture: x86-64 我使用的是Debian 9 ","date":"2021-01-01","objectID":"/posts/github_actions_%E8%87%AA%E5%8A%A8%E9%83%A8%E7%BD%B2hugo%E8%87%B3vps/:1:0","tags":["git","hugo"],"title":"Github Actions 自动部署hugo至vps","uri":"/posts/github_actions_%E8%87%AA%E5%8A%A8%E9%83%A8%E7%BD%B2hugo%E8%87%B3vps/"},{"categories":["hugo"],"content":"安装宝塔 wget -O install.sh http://download.bt.cn/install/install-ubuntu_6.0.sh \u0026\u0026 bash install.sh ","date":"2021-01-01","objectID":"/posts/github_actions_%E8%87%AA%E5%8A%A8%E9%83%A8%E7%BD%B2hugo%E8%87%B3vps/:2:0","tags":["git","hugo"],"title":"Github Actions 自动部署hugo至vps","uri":"/posts/github_actions_%E8%87%AA%E5%8A%A8%E9%83%A8%E7%BD%B2hugo%E8%87%B3vps/"},{"categories":["hugo"],"content":"上传Hugo源文件至Github 不需要上传public中的文件 Note 不跟踪某个public文件夹(git status不再提醒) 修改 .gitignore 加入 public/ 对public文件夹取消跟踪 git rm -r –cached public 删除public文件夹的跟踪，并保留在本地 git rm -r –f public 删除public文件夹的跟踪，并且删除本地文件 ","date":"2021-01-01","objectID":"/posts/github_actions_%E8%87%AA%E5%8A%A8%E9%83%A8%E7%BD%B2hugo%E8%87%B3vps/:3:0","tags":["git","hugo"],"title":"Github Actions 自动部署hugo至vps","uri":"/posts/github_actions_%E8%87%AA%E5%8A%A8%E9%83%A8%E7%BD%B2hugo%E8%87%B3vps/"},{"categories":["hugo"],"content":"Github Actions构建Hugo并用WebHook回调 ","date":"2021-01-01","objectID":"/posts/github_actions_%E8%87%AA%E5%8A%A8%E9%83%A8%E7%BD%B2hugo%E8%87%B3vps/:4:0","tags":["git","hugo"],"title":"Github Actions 自动部署hugo至vps","uri":"/posts/github_actions_%E8%87%AA%E5%8A%A8%E9%83%A8%E7%BD%B2hugo%E8%87%B3vps/"},{"categories":["hugo"],"content":"生成Access token 个人的Settings -\u003e Developer settings -\u003e Personal access tokens -\u003e Generate new token -\u003e Generate token 保存好获取到的 access token, 它只会出现一次 ","date":"2021-01-01","objectID":"/posts/github_actions_%E8%87%AA%E5%8A%A8%E9%83%A8%E7%BD%B2hugo%E8%87%B3vps/:4:1","tags":["git","hugo"],"title":"Github Actions 自动部署hugo至vps","uri":"/posts/github_actions_%E8%87%AA%E5%8A%A8%E9%83%A8%E7%BD%B2hugo%E8%87%B3vps/"},{"categories":["hugo"],"content":"添加Access Token到项目 项目Secrets -\u003e New repository secret -\u003e Add secret ","date":"2021-01-01","objectID":"/posts/github_actions_%E8%87%AA%E5%8A%A8%E9%83%A8%E7%BD%B2hugo%E8%87%B3vps/:4:2","tags":["git","hugo"],"title":"Github Actions 自动部署hugo至vps","uri":"/posts/github_actions_%E8%87%AA%E5%8A%A8%E9%83%A8%E7%BD%B2hugo%E8%87%B3vps/"},{"categories":["hugo"],"content":"宝塔安装WebHook 宝塔 -\u003e 应用搜索 -\u003e webhook ","date":"2021-01-01","objectID":"/posts/github_actions_%E8%87%AA%E5%8A%A8%E9%83%A8%E7%BD%B2hugo%E8%87%B3vps/:4:3","tags":["git","hugo"],"title":"Github Actions 自动部署hugo至vps","uri":"/posts/github_actions_%E8%87%AA%E5%8A%A8%E9%83%A8%E7%BD%B2hugo%E8%87%B3vps/"},{"categories":["hugo"],"content":"设置脚本 #!/bin/bash echo \"\" date --date='0 days ago' \"+%Y-%m-%d %H:%M:%S\" echo \"Start\" gitPath=\"/www/wwwroot/fengqigang.cn\" gitHttp=\"https://github.com/guangsizhongbin/Blog.git\" echo \"Web站点路径:$gitPath\" if [ -d \"$gitPath\" ]; then cd $gitPath if [ ! -d \".git\" ]; then echo \"在该目录下克隆 git\" git clone -b gh-pages $gitHttp gittemp mv gittemp/.git . rm -rf gittemp fi git reset --hard gh-papes git pull chown -R www:www $gitPath echo \"End\" exit else echo \"该项目路径不存在\" echo \"End\" exit fi Note date agruments --date=STRING display time described by STRING, not 'now' // 显示当前时间 $ date --date=\"0 days ago\" Sun Jan 3 10:54:04 AM CST 2021 // 显示2天之后的时间 $ date --date=\"2 days\" Tue Jan 5 10:55:14 AM CST 2021 // 显示2个星期之后的时间 $ date --date=\"2 weeks\" Sun Jan 17 10:55:22 AM CST 2021 +%Y-%m-%d %H:%M:%S %Y year %m month (01..12) %d day of month (e.g., 01) %H hour (00..23) %M minute (00..59) %S second (00..60) day of month 和 month 都是小写 // 显示当前时间 $ date '+%Y-%m-%d %H:%M:%S' 2021-01-03 11:07:00 // 显示当前时间 $ date --date=\"0 days ago\" '+%Y-%m-%d %H:%M:%S' 2021-01-03 11:08:47 git arguments -b \u003cname\u003e Instead of pointing the newly created HEAD to the branch pointed to by the cloned repository's HEAD, point to \u003cname\u003e brach instead. git reset --hard gh-pages Restes the index and working tree. Any changes to tracked files in the working tree since \u003ccommit\u003e are discarded. 退回到远程仓库中的版本 项目Actions -\u003e Set up a workflow yourself -\u003e 添加代码 -\u003e Start commit name: Deploy Hugo # 自己命名即可 on: # 设置触发条件 push: branches: - master # master 分支被更新时触发 job: # 设置触发时间 build-deploy: runs-on: ubuntu-18.04 steps: - uses: actions/checkout@v1 - name: Setup Hugo uses: peaceiris/actions-hugo@v2 with: hugo-version: latest - name: Build run: hugo - name: Deploy uses: peaceiris/action-gh-pages@v3 with: personal_token: ${{ secrets.personal_token}} PUBLISH_BRANCH: gh-pages # 推送至分支名称 PUBLISH_DIR: ./public # 将hugo 生成的 public 作为根目录 comit_message: ${{ github.event.head_commit.message }} ","date":"2021-01-01","objectID":"/posts/github_actions_%E8%87%AA%E5%8A%A8%E9%83%A8%E7%BD%B2hugo%E8%87%B3vps/:4:4","tags":["git","hugo"],"title":"Github Actions 自动部署hugo至vps","uri":"/posts/github_actions_%E8%87%AA%E5%8A%A8%E9%83%A8%E7%BD%B2hugo%E8%87%B3vps/"},{"categories":["hugo"],"content":"将秘钥添加至项目中的Secrets 项目的Setting -\u003e Secrets ","date":"2021-01-01","objectID":"/posts/github_actions_%E8%87%AA%E5%8A%A8%E9%83%A8%E7%BD%B2hugo%E8%87%B3vps/:4:5","tags":["git","hugo"],"title":"Github Actions 自动部署hugo至vps","uri":"/posts/github_actions_%E8%87%AA%E5%8A%A8%E9%83%A8%E7%BD%B2hugo%E8%87%B3vps/"},{"categories":["hugo"],"content":"添加Github Actions workflow 事件 - name: Webhook uses: distributhor/workflow-webhoob@v1 env: webhook_url: ${{ secrets.WEBHOOK_URL }}$ webhook_secret: ${{ secrets.WEBHOOK_SECRET }}$ ","date":"2021-01-01","objectID":"/posts/github_actions_%E8%87%AA%E5%8A%A8%E9%83%A8%E7%BD%B2hugo%E8%87%B3vps/:4:6","tags":["git","hugo"],"title":"Github Actions 自动部署hugo至vps","uri":"/posts/github_actions_%E8%87%AA%E5%8A%A8%E9%83%A8%E7%BD%B2hugo%E8%87%B3vps/"},{"categories":["hugo"],"content":"参考 Hugo + Github Actions 实现自动化部署 ","date":"2021-01-01","objectID":"/posts/github_actions_%E8%87%AA%E5%8A%A8%E9%83%A8%E7%BD%B2hugo%E8%87%B3vps/:5:0","tags":["git","hugo"],"title":"Github Actions 自动部署hugo至vps","uri":"/posts/github_actions_%E8%87%AA%E5%8A%A8%E9%83%A8%E7%BD%B2hugo%E8%87%B3vps/"},{"categories":["git"],"content":"使用git协议克隆的好处 配置完后，每次提交均不需要输入账号密码 ","date":"2021-01-01","objectID":"/posts/%E4%BD%BF%E7%94%A8git%E5%8D%8F%E8%AE%AE%E5%85%8B%E9%9A%86/:1:0","tags":["git"],"title":"使用git协议克隆","uri":"/posts/%E4%BD%BF%E7%94%A8git%E5%8D%8F%E8%AE%AE%E5%85%8B%E9%9A%86/"},{"categories":["git"],"content":"如何配置 创建一个SSH Key $ ssh-keygen -t rsa -C \"guangsizhongbin@gmail.com\" 参数含义： -t Specifies the type of key to create. -C Provides a new comment. Enter file in which to save the key (/home/feng/.ssh/id_rsa): 参数含义： -f filename Specifies the filename of the key file. 指定生成文件的文件名（文件路径，否则会直接生成在当前目录下） 例如: ssh-keygen -t rsa -C \"guangsizhongbin@gmail.com\" -f a 会在当前路径下生成私钥a, 公钥a.pub Enter passphrase (empty for no passphrase): Enter same passphrase again: passphrase: a sequence of words used to gain access to a computer system 填写push文件时需要输入的密码 将公钥id_ras.pub传至github中（默认路径.ssh/id_ras.pub） bash: cat .ssh/id_rsa.pub github: Repositories -\u003e Settings -\u003e Deploy keys -\u003e Add deploy key -\u003e Add key 若要有push权限必须要勾选Allow write access, 否则只有read 权限 测试SSH key ssh -T git@github.com The authenticity of host 'github.com (192.30.255.112)' can't be established.RSA key fingerprint is SHA256:nThbg6kXUpJWGl7E1IGOCspRomTxdCARLviKw6E5SY8. Are you sure you want to continue connecting (yes/no/[fingerprint])? yes Warning: Permanently added 'github.com,192.30.255.112' (RSA) to the list of known hosts. Enter passphrase for key '/home/feng/.ssh/id_rsa': 输入创建SSH key的时候设置的密码(若有设置) Hi guangsizhongbin/Blog! You've successfully authenticated, but GitHub does not provide shell access. 此时已经设置成功了 使用git协议进行克隆 git clone git clone git@github.com:guangsizhongbin/Blog.git Cloning into 'Blog'... Enter passphrase for key '/home/feng/.ssh/id_rsa': 输入创建SSH key的时候设置的密码(若有设置) ","date":"2021-01-01","objectID":"/posts/%E4%BD%BF%E7%94%A8git%E5%8D%8F%E8%AE%AE%E5%85%8B%E9%9A%86/:2:0","tags":["git"],"title":"使用git协议克隆","uri":"/posts/%E4%BD%BF%E7%94%A8git%E5%8D%8F%E8%AE%AE%E5%85%8B%E9%9A%86/"},{"categories":["git"],"content":"参考文章 1. github设置添加SSH ","date":"2021-01-01","objectID":"/posts/%E4%BD%BF%E7%94%A8git%E5%8D%8F%E8%AE%AE%E5%85%8B%E9%9A%86/:3:0","tags":["git"],"title":"使用git协议克隆","uri":"/posts/%E4%BD%BF%E7%94%A8git%E5%8D%8F%E8%AE%AE%E5%85%8B%E9%9A%86/"}]