<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>java - Tag - xiaonan&#39;s Blog</title>
        <link>http://fengqigang.cn/tags/java/</link>
        <description>java - Tag - xiaonan&#39;s Blog</description>
        <generator>Hugo -- gohugo.io</generator><language>en</language><managingEditor>gaungsizhongbin@gmail.com (xiaonan)</managingEditor>
            <webMaster>gaungsizhongbin@gmail.com (xiaonan)</webMaster><lastBuildDate>Fri, 26 Feb 2021 22:24:25 &#43;0800</lastBuildDate><atom:link href="http://fengqigang.cn/tags/java/" rel="self" type="application/rss+xml" /><item>
    <title>Java基础练习题</title>
    <link>http://fengqigang.cn/posts/java%E5%9F%BA%E7%A1%80%E7%BB%83%E4%B9%A0%E9%A2%98/</link>
    <pubDate>Fri, 26 Feb 2021 22:24:25 &#43;0800</pubDate>
    <author>Author</author>
    <guid>http://fengqigang.cn/posts/java%E5%9F%BA%E7%A1%80%E7%BB%83%E4%B9%A0%E9%A2%98/</guid>
    <description><![CDATA[基础概念问答    请问Java语言是跨平台的吗？JVM是跨平台的吗？为什么？     Java语言是跨平台的，但JVM不是跨平台的，不同的平台有不同的JVM。 首先, 后缀为 &quot;*.java&quot; 的文件，经过javac命令编译后会生成public class定义类名称的.class文件(字节码文件)。然后, 不同平台的JVM会根据不同操作系统所提供的接口，实现.class文件中的功能。
 例如: Hello.java所对应的程序
1 2 3 4 5  public class Hello { public static void main(String args[]){ System.out.println(&#34;Hello, World!&#34;); } }   编译后(Hello.class):
再经过linux中的jre-openjdk中的jvm执行hello.class使得java看起来具有跨平台的能力。
环境变量   设置环境变量使QQ或者微信可以在任意平台下，通过命令行执行    linux平台下:
1  export 文件路径:$PATH   使用永久化:
1  echo &#34;export 文件路径:$PATH&#34; &gt;&gt; .zshrc   3.[入门题目] 独立编写Hello World程序，并在命令行下运行 hello.java]]></description>
</item><item>
    <title>Java</title>
    <link>http://fengqigang.cn/posts/java/</link>
    <pubDate>Wed, 20 Jan 2021 14:22:51 &#43;0800</pubDate>
    <author>Author</author>
    <guid>http://fengqigang.cn/posts/java/</guid>
    <description><![CDATA[Java运行机制 高级语言的运行机制 编译型 使用专门的编译器, 针对特定平台(操作系统)将某种高级语言源代码一次性&rsquo;翻译&rsquo;成可被该平台硬件执行的机器码(包括机器指令和操作数), 并包装成该平台所能识别的可执行性的程序格式。
解释型 使用专门的解释器对源程序逐行解释成特定的机器码并立即执行的语言
Java安装 archlinux下安装 sudo pacman -S jdk
输出Hello World 编写Hello World代码 HelloWorld.java
1 2 3 4 5 6 7 8  public class HelloWorld { public static void main(String[] args) { System.out.println(&#34;Hello World!&#34;); } }   String 大写
System 大写
编译 javac -d . HelloWorld.java
Note    javac      -d  Specify where to place generated class files      运行 java HelloWorld]]></description>
</item></channel>
</rss>
