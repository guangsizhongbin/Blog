<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>java - Tag - xiaonan&#39;s Blog</title>
        <link>http://fengqigang.cn/tags/java/</link>
        <description>java - Tag - xiaonan&#39;s Blog</description>
        <generator>Hugo -- gohugo.io</generator><language>en</language><managingEditor>gaungsizhongbin@gmail.com (xiaonan)</managingEditor>
            <webMaster>gaungsizhongbin@gmail.com (xiaonan)</webMaster><lastBuildDate>Thu, 08 Apr 2021 16:50:57 &#43;0800</lastBuildDate><atom:link href="http://fengqigang.cn/tags/java/" rel="self" type="application/rss+xml" /><item>
    <title>Day9</title>
    <link>http://fengqigang.cn/posts/day9/</link>
    <pubDate>Thu, 08 Apr 2021 16:50:57 &#43;0800</pubDate>
    <author>Author</author>
    <guid>http://fengqigang.cn/posts/day9/</guid>
    <description><![CDATA[其jvm内存结构图是什么样的? 什么是隐式初始化? 隐式初始化，子类构造器中没有显式调用 super() 父类构造器
对于编译而言，怎么才能保证编译不报错? 两个引用之间是父子关系
什么是 instanceof 关键字?如何使用? 引用 instanceof 类名，表示该引用指向的对象，是否是后面类的对象(或子类对象)
如果是就返回 true, 否则就返回 false
怎么才能保证运行时不报错? 该父类引用指向的子类对象，就是这个要强制的子类的对象
否则会报 ClassCastException 类型转换异常的错误
null instalceof 任何类其结果是什么? false
对于这段程序其执行 会出现什么? 成员变量 编译时看左边，运行时看左边
###对于段程序其执行 会出现什么?
方法 编译时看左边，运行时看右边
为什么要有抽象方法? 如在 Animal 中的 shout 方法是不会被调用的，这个方法只是用来被重写的
  Animal 类只用来被继承，不用来创建对象
  Animal 类中 shout 方法，不应该有方法体
  抽象方法如何声明? 语法:
[访问权限修饰符] abstract 返回值类型 方法名();
Class &lsquo;Animal&rsquo; must either be declared abstract or implement abstract method &lsquo;shout()&rsquo; in &lsquo;Animal&rsquo;]]></description>
</item><item>
    <title>Day8</title>
    <link>http://fengqigang.cn/posts/day8/</link>
    <pubDate>Wed, 07 Apr 2021 23:12:51 &#43;0800</pubDate>
    <author>Author</author>
    <guid>http://fengqigang.cn/posts/day8/</guid>
    <description><![CDATA[Day 8
若想限制创建 Student 类个数, 其思路是什么?   如果允许外部直接创建对象，显然 无法控制创建对象的个数
  需要计数器指示外部创建对象的个数
   若想限制创建 Student 类个数, 其思路是什么?   如果允许外部直接创建对象，显然 无法控制创建对象的个数
  需要计数器指示外部创建对象的个数
   解决方法:
  私有化构造方法
  提供一个方法来创建对象, 访问权限是 public
  这个方法必须是 静态方法
  控制创建对象的计数器，应该是 静态成员变量 ，被所有对象共享
  在 set, get方法怎样赋值比较好( 如width )? 用 this 好
如何不希望外界创建数组 =null 的对象，应该如何做? 私有化无参构造
在增删改时，如果结果成功或失败了，可以在方法中输出成功或失败的消息吗? 不可以， 输出成功或失败 不应该 是在 增删改 方法里该做的事情
为了防止 studs 出现空指针异常， 可以习惯性怎么做?]]></description>
</item><item>
    <title>Day7</title>
    <link>http://fengqigang.cn/posts/day7/</link>
    <pubDate>Tue, 06 Apr 2021 23:03:23 &#43;0800</pubDate>
    <author>Author</author>
    <guid>http://fengqigang.cn/posts/day7/</guid>
    <description><![CDATA[什么是 package 关键字? 作用:
用来声明当前类(当前的java文件中的所有类) 属于哪个包, package 后面跟上当前的包名
  包名的书写，用逗号隔开
  语法上，该声明语句一定位于一个 Java 源文件的有效代码的第一行, 否则会报错
  什么是 import 关键字? 作用:
就量用来导包的
当一个别的类中的成员(方法和变量)时，编译器会优先从当前包中检索，如果找得到就去调用，如果找不到，它就会报错
语法:
import + 全限定类名
位置:
最好写在 package 下面，不可用写在有效代码下面
如何实现智能导包? import + 包名 + *
什么叫有需求导包? 如果不导包就报错，那么它就会自动导包
如果同包下已经有同名的类，那么它就不会去导包了
什么是默认导包, 隐式导包? java.lang 包下的所有类，是 java 的核心类，它会自动隐式导入，不需要再写导包语句
如果同包下和不同包下同名类都想使用，怎么办? 真的存在这种需求，建议改名一个
用全限定类名去使用
什么是面向过程与面向对象? 面向过程 procedureal oriented programming
面向对象 oop
面向过程的编程思想
即程序是&quot;动词&quot;的集合，即程序功能是由一系列有序的动作来完成
面向对象的编程思想
即程序是由一系列的对象+对象之间交互(消息)组成
面向过程有什么优缺点? 优点:
代码执行效率高
缺点:
面向过程程序是一条线下来的，对程序员要求很高，需要程序员详细了解每个功能的细节，这就意味着，不利于合作开发，不利于处理复杂的大型项目
应用场景:
需要高效率的场景，比如说操作系统内核OS, 嵌入式开发，算法]]></description>
</item><item>
    <title>Day6</title>
    <link>http://fengqigang.cn/posts/day6/</link>
    <pubDate>Sun, 04 Apr 2021 15:16:47 &#43;0800</pubDate>
    <author>Author</author>
    <guid>http://fengqigang.cn/posts/day6/</guid>
    <description><![CDATA[如何在一个构造函数中调用另一个构造函数 用 this
1 2 3 4 5  public Student(String name, int age, String gender, int stuId) { this(name, age, gender); this.stuId = stuId; }   在一个 java 文件下， 所有的 class 是什么关系? 同一个包 的关系
不可以重名
什么是匿名对象? 如何创建匿名对象? 匿名对象:
没有名字的对象，没有引用指向它的对象
创建匿名对象:
new 类名();
什么时候用匿名对象?  用 匿名对象调用方法  好处
方便简洁， 如果只想调用一次该对象的成员方法
没有引用的对象是垃圾，会等待垃圾回收，理想情况下，可以提升内存利用率
坏处
如果想用对象多次访问成员，调用方法，那么匿名肯定不适用，创建多个匿名对象， 浪费空间，效率底
 如果方法的形式参数中需要一个对象，可以 传入一个匿名对象
  如果一个方法返回值类型是一个类，要返回一个对象，可以 返回一个匿名对象
  什么是代码块? 可以分为多少种? 在java中, 使用大括号 {} 括起来的代码被称为 代码块]]></description>
</item><item>
    <title>Day5</title>
    <link>http://fengqigang.cn/posts/day5/</link>
    <pubDate>Sat, 03 Apr 2021 23:12:33 &#43;0800</pubDate>
    <author>Author</author>
    <guid>http://fengqigang.cn/posts/day5/</guid>
    <description><![CDATA[什么是显式赋值? 直接赋值的方式
1  String brand = &#34;华为&#34;;   其输出结果会是什么样? i 与 i8 会是一样的
在相同的类中，整个程序的执行期间，类加载会执行多少次？ 只加载一次
类加类是什么时候被触发(类加载的时机)?   new 对象的时候
  启动一个类的 main() 方法时
  像 String, System 这种显然也是类，但是在 jdk 当中也会加载吗？ 它们仍然会被加载
类加载都是懒加载，不是必用时，它不会加载
局部变量 与 成员变量 有什么区别？  在类中定义的位置  局部变量:
局部位置(包含方法，大括号之间往往都是局部位置)
成员变量:
成员位置(类中方法外)
 在内存中的位置  局部变量
栈帧中
成员变量
堆上的对象
 生命周期不同  局部变量
和方法的栈帧同生共死，方法调用，局部变量生效，方法执行完毕出栈，局部变量销毁
成员变量
和对象同生共死，是不确定的，但是只要是对象的引用被销毁了，这些对象中的成员变量也没有意义了
 初始化值不同  局部变量
没有默认初始化值， 必须手动初始化
成员变量
有默认初始值]]></description>
</item><item>
    <title>Day4</title>
    <link>http://fengqigang.cn/posts/day4/</link>
    <pubDate>Fri, 02 Apr 2021 23:08:09 &#43;0800</pubDate>
    <author>Author</author>
    <guid>http://fengqigang.cn/posts/day4/</guid>
    <description><![CDATA[二维数组如何声明？ 数据类型[][] 二维数组名;
int[] m, n[] 其是想表达什么? int[] m;
int[] n[];
int[][] arr4 = new int[2][3]; 其堆空间是什么样的? 如何调用一个方法访问二维数组中的某个一维数组? (Arrays.toString(arr[1])) System.out.println(Arrays.toString(arr[1]));
如何调用一个方法去访问维数组? System.out.println(Arrays.deepToString(arr))
stackOverflowError 其本质的栈内存是什么样的? 如何用一个方法捕获栈溢出这个错误？ catch (StackOverflowError error)
什么是成员变量？ 定义在类中，除了方法体之外的区域
语法:
[各种修饰符] 数据类型 成员变量名
什么是成员方法 指的是在成员位置, 不带 static 的方法
语法:
[访问权限修饰符] 返回值类型 方法名() {}
什么是类的全限定类名？ 就是 类名 全称， 带包路径的用点隔开
如:
java.lang.String
全限定名 = 包名 + 类型
这里获取的地址是什么样的？ 类的全限定类名 + 地址值
类和数据类型是否存在关联? 数据类型:
一个数据集合 和 基于这个数据集合的 一组操作
类的定义:
类中包括： 成员变量 和 成员方法]]></description>
</item><item>
    <title>Day3</title>
    <link>http://fengqigang.cn/posts/day3/</link>
    <pubDate>Wed, 31 Mar 2021 22:56:56 &#43;0800</pubDate>
    <author>Author</author>
    <guid>http://fengqigang.cn/posts/day3/</guid>
    <description><![CDATA[可变参数的实质是什么? 是用数组作为参数
1 2 3 4 5 6 7 8 9 10 11  public static int sum(int[] arr) { int sumValue = 0; for (int i = 0; i &lt; arr.length; i++) { sumValue += arr[i]; } return sumValue; } public static int sum(int... a) { return 1; }   在使用可参数列表的时候，需要注意什么?   尽量不要使用带有两个可变参数的方法，构成方法重载时要慎重，因为很容易会导致两个方法都不可用
  可变参数一定要在参数列表的最后一个
  否则有可能运行不了
什么是增强型 for 遍历数组? 1 2 3  for (int i : arr) { System.]]></description>
</item><item>
    <title>Day2</title>
    <link>http://fengqigang.cn/posts/day2/</link>
    <pubDate>Wed, 31 Mar 2021 08:37:17 &#43;0800</pubDate>
    <author>Author</author>
    <guid>http://fengqigang.cn/posts/day2/</guid>
    <description><![CDATA[如何实现 Junit 单元测试? 1 2 3  @Test public void methodName() { }   public void 是固定格式，不可以修改，否则报错
方法的形参列表，必须为空的，否则会报错
单元测试的类中，不要写main方法
JVM内存模型是什么样的? Java 的开发者, 在 《Java虚拟机规范》中指出:
 JVM (运行时数据区)内存分为  JVM栈 堆 方法区 程序计数器 本地方法栈    JVM内存模型中JVM栈(stack)中有什么样的特点? 只有栈中处于栈顶的栈帧才会生效，称这为当前栈桢，当前方法
JVM内存模型中JVM堆(heap)中有什么样的特点? 所有new出来的东西（称之为对象）都在堆上
基本数据类型与引用数据类型有什么区别?   存储位置(本质)
  基本数据类型不存在&quot;引用&quot;的概念，数据都是直接存储在栈上的栈帧里
  引用数据类型在栈帧中存储引用，引用存储的只是该引用类型在堆上对象的内存地址
    打印变量名内容:
  基本数据类型，打印变量名就是该变量具体的数值
  引用数据类型，打印变量名显示该引用变量堆上的内存地址
    堆上对象和栈中变量有什么区别?  从存储的类型来看:    堆上存储的是 new 出来的东西，是 引用数据类型 的对象]]></description>
</item><item>
    <title>Day1</title>
    <link>http://fengqigang.cn/posts/day1/</link>
    <pubDate>Tue, 30 Mar 2021 23:02:50 &#43;0800</pubDate>
    <author>Author</author>
    <guid>http://fengqigang.cn/posts/day1/</guid>
    <description><![CDATA[JDK 与 JRE 有什么样的关系? JRE (Java Runtime Envirment)
Java 运行时环境
JDK(Java Development Kit)
Java 开发者工具包
除了JRE外，JDK还提供了Java开发者需要使用的工具,如(javac.exe, java.exe)
Java 程序的运行原理是什么样的? 给一个 project起名的规范是什么?   全部英文小写， 不要用中文
  单词之间用下划线或横杠连接
  如:
student-manage
如何给一个包命名? 以反转公司域名为规范
包名应该 全部小写
多级包名以点(.)分隔
包名 com.baidu
如何给类、接口命名? 采用大驼峰命名法
public class TestDemo{}
public class PersonDemo{}
如何给变量和方法命名? 采用小驼峰命名法
int num;
String name;
如何给常量命名? 全部用大写
多个单词之间用下划线(_)隔开
PI
什么是小鸵峰式命名法( lower camel case )? 多个单词组全成一个字符串
 第一个单词首字母 小写 第二个单词开始，首字母都要大写  myName, myFirstJavaProgram]]></description>
</item><item>
    <title>TwoSum</title>
    <link>http://fengqigang.cn/posts/twosum/</link>
    <pubDate>Fri, 26 Mar 2021 22:48:16 &#43;0800</pubDate>
    <author>Author</author>
    <guid>http://fengqigang.cn/posts/twosum/</guid>
    <description><![CDATA[Two Sum 001
我的代码(双指针法) 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19  class Solution { public int[] twoSum(int[] nums, int target) { if (nums.length &lt; 2){ return new int[0]; } int[] data = new int[2]; for (int x = 0 ; x &lt; nums.length; x ++){ for (int y = x + 1; y &lt; nums.length; y ++){ if (nums[x] + nums[y] == target){ data[0] = x; data[1] = y; } } } return data; } }   最优解(hash表) 待学hash表]]></description>
</item></channel>
</rss>
